{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js??ref--13-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/application/listeners/setConfiguracaoNotificacaoListener.js","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/application/listeners/setConfiguracaoNotificacaoListener.js","mtime":1615553310324},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport store from '@/core/store';\nimport { mutationTypes } from '@/core/constants';\n\nvar SetConfiguracaoNotificacaoListener = /*#__PURE__*/function () {\n  function SetConfiguracaoNotificacaoListener() {\n    _classCallCheck(this, SetConfiguracaoNotificacaoListener);\n  }\n\n  _createClass(SetConfiguracaoNotificacaoListener, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var notificationConfig;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                notificationConfig = store.state.notificacao.configuracaoNotificacao;\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  store.commit(mutationTypes.LOKI.SET_NOTIFICATION_CONFIG, notificationConfig);\n                  resolve();\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function execute() {\n        return _execute.apply(this, arguments);\n      }\n\n      return execute;\n    }()\n  }]);\n\n  return SetConfiguracaoNotificacaoListener;\n}();\n\nexport default new SetConfiguracaoNotificacaoListener();",{"version":3,"sources":["/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/application/listeners/setConfiguracaoNotificacaoListener.js"],"names":["store","mutationTypes","SetConfiguracaoNotificacaoListener","notificationConfig","state","notificacao","configuracaoNotificacao","Promise","resolve","commit","LOKI","SET_NOTIFICATION_CONFIG"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;;IAEMC,kC;;;;;;;;;;;;;;AAGIC,gBAAAA,kB,GAAqBH,KAAK,CAACI,KAAN,CAAYC,WAAZ,CAAwBC,uB;iDAC5C,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BR,kBAAAA,KAAK,CAACS,MAAN,CAAaR,aAAa,CAACS,IAAd,CAAmBC,uBAAhC,EAAyDR,kBAAzD;AACAK,kBAAAA,OAAO;AACR,iBAHM,C;;;;;;;;;;;;;;;;;;;;;AAOX,eAAe,IAAIN,kCAAJ,EAAf","sourcesContent":["import store from '@/core/store'\nimport {mutationTypes} from '@/core/constants'\n\nclass SetConfiguracaoNotificacaoListener {\n  async execute() {\n\n    const notificationConfig = store.state.notificacao.configuracaoNotificacao\n    return new Promise((resolve) => {\n      store.commit(mutationTypes.LOKI.SET_NOTIFICATION_CONFIG, notificationConfig)\n      resolve()\n    })\n  }\n}\n\nexport default new SetConfiguracaoNotificacaoListener()"]}]}