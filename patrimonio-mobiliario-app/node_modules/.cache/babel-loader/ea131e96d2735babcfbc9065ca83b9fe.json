{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/empenho/Empenho.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/empenho/Empenho.vue","mtime":1614797888081},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions';\nimport LabelPersonalizado from '@/views/components/label/LabelPersonalizado';\nimport { actionTypes } from '@/core/constants';\nimport moment from 'moment';\nimport AcoesIconesCircularAdicionarRemover from '@/views/components/acoes/AcoesIconesCircularAdicionarRemover';\nexport default {\n  name: 'Empenho',\n  components: {\n    AcoesIconesCircularAdicionarRemover: AcoesIconesCircularAdicionarRemover,\n    LabelPersonalizado: LabelPersonalizado\n  },\n  props: {\n    value: Object,\n    obrigatorio: {\n      type: Boolean,\n      default: false\n    },\n    statusReconhecimento: {\n      type: Boolean,\n      default: true\n    },\n    primeiroEmpenho: {\n      type: Boolean,\n      default: false\n    },\n    idIncorporacao: {\n      required: true\n    },\n    quantidadeEmpenhos: {\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      placeholders: {\n        date: '__/__/____'\n      },\n      empenho: this.value,\n      nomeTela: 'INCORPORACAO_DADOS_GERAIS'\n    };\n  },\n  computed: {\n    camposPreenchidos: function camposPreenchidos() {\n      return this.empenho.numeroEmpenho && this.empenho.dataEmpenho && this.empenho.valorEmpenho;\n    },\n    verificaPermissaoEdicao: function verificaPermissaoEdicao() {\n      return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Normal']);\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions([actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.INSERIR_EMPENHO, actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.ATUALIZAR_EMPENHO, actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.REMOVER_EMPENHO])), {}, {\n    atualizarValorInserido: function atualizarValorInserido(valor) {\n      this.empenho.valorEmpenho = valor;\n      this.editarEmpenho();\n    },\n    editarEmpenho: function () {\n      var _editarEmpenho = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.camposPreenchidos) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.desabilitarLoadingGlobal();\n\n              case 3:\n                if (!this.empenho.id) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.editar();\n\n              case 6:\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return this.salvar();\n\n              case 10:\n                _context.next = 12;\n                return this.habilitarLoadingGlobal();\n\n              case 12:\n                this.$emit('buscarEmpenhos');\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function editarEmpenho() {\n        return _editarEmpenho.apply(this, arguments);\n      }\n\n      return editarEmpenho;\n    }(),\n    editar: function () {\n      var _editar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.empenho.dataEmpenho !== null) {\n                  this.empenho.dataEmpenho = moment(this.empenho.dataEmpenho).format('YYYY-MM-DDTHH:mm:ss.SSSZZ');\n                }\n\n                this.empenho.incorporacaoId = this.idIncorporacao;\n                _context2.next = 4;\n                return this.atualizarEmpenho(this.empenho);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function editar() {\n        return _editar.apply(this, arguments);\n      }\n\n      return editar;\n    }(),\n    salvar: function () {\n      var _salvar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.inserirEmpenho(this.empenho);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function salvar() {\n        return _salvar.apply(this, arguments);\n      }\n\n      return salvar;\n    }(),\n    adicionarNovoEmpenho: function () {\n      var _adicionarNovoEmpenho = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.quantidadeEmpenhos >= 10) {\n                  this.mostrarNotificacaoAviso('Não é possível cadastrar mais que 10 empenhos!');\n                }\n\n                if (this.camposPreenchidos && this.quantidadeEmpenhos < 10) {\n                  this.$emit('adicionarNovoEmpenho');\n                }\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function adicionarNovoEmpenho() {\n        return _adicionarNovoEmpenho.apply(this, arguments);\n      }\n\n      return adicionarNovoEmpenho;\n    }(),\n    remover: function () {\n      var _remover = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.empenho.id) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.removerEmpenho(this.empenho.id);\n\n              case 3:\n                this.$emit('removerEmpenho', this.empenho.id);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function remover() {\n        return _remover.apply(this, arguments);\n      }\n\n      return remover;\n    }()\n  })\n};",{"version":3,"sources":["Empenho.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,gBAAA,MAAA,gDAAA;AACA,OAAA,kBAAA,MAAA,6CAAA;AACA,SAAA,WAAA,QAAA,kBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,mCAAA,MAAA,8DAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,mCAAA,EAAA,mCAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAFA;AAMA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAUA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,cAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KAdA;AAiBA,IAAA,kBAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AAjBA,GAHA;AAwBA,EAAA,IAxBA,kBAwBA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OADA;AAIA,MAAA,OAAA,EAAA,KAAA,KAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAhCA;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,aAAA,KAAA,OAAA,CAAA,aAAA,IAAA,KAAA,OAAA,CAAA,WAAA,IAAA,KAAA,OAAA,CAAA,YAAA;AACA,KAHA;AAIA,IAAA,uBAJA,qCAIA;AACA,aAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA,CACA,mBADA,CAAA,CAAA;AAGA;AARA,GAjCA;AA2CA,EAAA,OAAA,kCACA,UAAA,CAAA,CACA,WAAA,CAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,eADA,EAEA,WAAA,CAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,iBAFA,EAGA,WAAA,CAAA,UAAA,CAAA,YAAA,CAAA,OAAA,CAAA,eAHA,CAAA,CADA;AAMA,IAAA,sBANA,kCAMA,KANA,EAMA;AACA,WAAA,OAAA,CAAA,YAAA,GAAA,KAAA;AACA,WAAA,aAAA;AACA,KATA;AAUA,IAAA,aAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWA,KAAA,iBAXA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYA,KAAA,wBAAA,EAZA;;AAAA;AAAA,qBAaA,KAAA,OAAA,CAAA,EAbA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAcA,KAAA,MAAA,EAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAgBA,KAAA,MAAA,EAhBA;;AAAA;AAAA;AAAA,uBAkBA,KAAA,sBAAA,EAlBA;;AAAA;AAmBA,qBAAA,KAAA,CAAA,gBAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBA,IAAA,MAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,oBAAA,KAAA,OAAA,CAAA,WAAA,KAAA,IAAA,EAAA;AACA,uBAAA,OAAA,CAAA,WAAA,GAAA,MAAA,CAAA,KAAA,OAAA,CAAA,WAAA,CAAA,CAAA,MAAA,CAAA,2BAAA,CAAA;AACA;;AACA,qBAAA,OAAA,CAAA,cAAA,GAAA,KAAA,cAAA;AA1BA;AAAA,uBA2BA,KAAA,gBAAA,CAAA,KAAA,OAAA,CA3BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8BA,IAAA,MA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+BA,KAAA,cAAA,CAAA,KAAA,OAAA,CA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA,IAAA,oBAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA,oBAAA,KAAA,kBAAA,IAAA,EAAA,EAAA;AACA,uBAAA,uBAAA,CAAA,gDAAA;AACA;;AACA,oBAAA,KAAA,iBAAA,IAAA,KAAA,kBAAA,GAAA,EAAA,EAAA;AACA,uBAAA,KAAA,CAAA,sBAAA;AACA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCA,IAAA,OAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA0CA,KAAA,OAAA,CAAA,EA1CA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2CA,KAAA,cAAA,CAAA,KAAA,OAAA,CAAA,EAAA,CA3CA;;AAAA;AA6CA,qBAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,OAAA,CAAA,EAAA;;AA7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3CA,CAAA","sourcesContent":["<template>\n    <div class=\"empenho\">\n        <div class=\"empenhoForm\">\n            <v-row class=\"form\">\n                <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" :class=\"[{active: !verificaPermissaoEdicao}, 'empenho']\">\n                    <v-text-field\n                        v-model=\"empenho.numeroEmpenho\"\n                        :disabled=\"!verificaPermissaoEdicao || statusReconhecimento\"\n                        :class=\"{desativado: !verificaPermissaoEdicao}\"\n                        :name=\"'numeroEmpenho'\"\n                        :placeholder=\"verificaPermissaoEdicao ? 'Informe o número' : ' '\"\n                        maxlength=\"50\"\n                        @change=\"editarEmpenho\"\n                        v-validate=\" obrigatorio ? 'required' : ''\"\n                        :error-messages=\"errors.collect('numeroEmpenho')\">\n                        <template v-slot:label>\n                            <label-personalizado campo=\"numeroEmpenho\" :tela=\"nomeTela\" :permissaoEdicao=\"obrigatorio && verificaPermissaoEdicao\"\n                                                 obrigatorioPorPadrao/>\n                        </template>\n                    </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                    <az-date\n                        v-model=\"empenho.dataEmpenho\"\n                        :is-disabled=\"!verificaPermissaoEdicao || statusReconhecimento\"\n                        :name-date=\"'dataEmpenho'\"\n                        :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                        :is-required=\"obrigatorio\"\n                        date\n                        :placeholderDate=\"(empenho.dataEmpenho) ? ' ' : placeholders.date\"\n                        @input=\"editarEmpenho\">\n                        <template v-slot:label-date>\n                            <label-personalizado campo=\"dataEmpenho\" :tela=\"nomeTela\" :permissaoEdicao=\"obrigatorio && verificaPermissaoEdicao\"\n                                                 obrigatorioPorPadrao/>\n                        </template>\n                    </az-date>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                    <az-money\n                        v-model=\"empenho.valorEmpenho\"\n                        :maxLength=\"18\"\n                        :name=\"'valorEmpenho'\"\n                        :event-submit=\"'blur'\"\n                        :required=\"obrigatorio\"\n                        requeridMessage=\"O campo é obrigatório\"\n                        class=\"botaoExcluirMoney\"\n                        :placeholder=\"verificaPermissaoEdicao ? 'Informe o valor' : ' '\"\n                        :disabled=\"!verificaPermissaoEdicao || statusReconhecimento\"\n                        :class=\"{desativado: !verificaPermissaoEdicao}\"\n                        v-validate=\" obrigatorio ? 'required' : ''\"\n                        @input=\"atualizarValorInserido($event)\">\n                        <template v-slot:label>\n                            <label-personalizado campo=\"valorEmpenho\" :tela=\"nomeTela\" :permissaoEdicao=\"obrigatorio && verificaPermissaoEdicao\"\n                                                 obrigatorioPorPadrao/>\n                        </template>\n                    </az-money>\n                </v-col>\n            </v-row>\n        </div>\n        <v-col cols=\"2\" class=\"botoesEmpenho\">\n            <acoes-icones-circular-adicionar-remover\n                :desabilitar-adicionar=\"!verificaPermissaoEdicao || !this.camposPreenchidos\"\n                :desabilitar-remover=\"!verificaPermissaoEdicao || quantidadeEmpenhos ===1\"\n                :ocultar-adicionar=\"primeiroEmpenho && quantidadeEmpenhos <10\"\n                @remover=\"remover\"\n                @adicionar=\"adicionarNovoEmpenho\"/>\n        </v-col>\n    </div>\n</template>\n\n<script>\n    import {mapActions} from 'vuex'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import LabelPersonalizado from '@/views/components/label/LabelPersonalizado'\n    import {actionTypes} from '@/core/constants'\n    import moment from 'moment'\n    import AcoesIconesCircularAdicionarRemover from '@/views/components/acoes/AcoesIconesCircularAdicionarRemover'\n\n    export default {\n        name: 'Empenho',\n        components:{AcoesIconesCircularAdicionarRemover, LabelPersonalizado},\n        props: {\n            value: Object,\n            obrigatorio: {\n                type: Boolean,\n                default: false\n            },\n            statusReconhecimento:{\n                type: Boolean,\n                default: true\n            },\n            primeiroEmpenho: {\n                type: Boolean,\n                default: false\n            },\n            idIncorporacao:{\n                required: true\n            },\n            quantidadeEmpenhos: {\n                required: true\n            }\n        },\n        data() {\n            return {\n                placeholders: {\n                    date: '__/__/____',\n                },\n                empenho: this.value,\n                nomeTela: 'INCORPORACAO_DADOS_GERAIS'\n            }\n        },\n        computed: {\n            camposPreenchidos() {\n                return this.empenho.numeroEmpenho && this.empenho.dataEmpenho && this.empenho.valorEmpenho\n            },\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, [\n                    'Mobiliario.Normal',\n                ])\n            },\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.INSERIR_EMPENHO,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.ATUALIZAR_EMPENHO,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.REMOVER_EMPENHO\n            ]),\n            atualizarValorInserido(valor) {\n                this.empenho.valorEmpenho = valor\n                this.editarEmpenho()\n            },\n            async editarEmpenho() {\n                if (this.camposPreenchidos) {\n                    await this.desabilitarLoadingGlobal()\n                    if (this.empenho.id) {\n                        await this.editar()\n                    } else {\n                        await this.salvar()\n                    }\n                    await this.habilitarLoadingGlobal()\n                    this.$emit('buscarEmpenhos')\n                }\n            },\n            async editar() {\n                if (this.empenho.dataEmpenho !== null) {\n                    this.empenho.dataEmpenho = moment(this.empenho.dataEmpenho).format('YYYY-MM-DDTHH:mm:ss.SSSZZ')\n                }\n                this.empenho.incorporacaoId = this.idIncorporacao\n                await this.atualizarEmpenho(this.empenho)\n\n            },\n            async salvar() {\n                await this.inserirEmpenho(this.empenho)\n            },\n            async adicionarNovoEmpenho() {\n                if (this.quantidadeEmpenhos >= 10) {\n                    this.mostrarNotificacaoAviso('Não é possível cadastrar mais que 10 empenhos!')\n                }\n                if (this.camposPreenchidos && this.quantidadeEmpenhos < 10) {\n                    this.$emit('adicionarNovoEmpenho')\n                }\n            },\n            async remover() {\n                if (this.empenho.id) {\n                    await this.removerEmpenho(this.empenho.id)\n                }\n                this.$emit('removerEmpenho', this.empenho.id)\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .form\n        margin 0\n\n    .empenho\n        display flex\n        align-items center\n        width 100%\n\n        .empenhoForm\n            width 100%\n\n    [class^=\"col\"]\n        padding 15px 12px 0 15px\n\n    .botoesEmpenho\n        max-width: 100px\n</style>\n"],"sourceRoot":"src/views/components/empenho"}]}