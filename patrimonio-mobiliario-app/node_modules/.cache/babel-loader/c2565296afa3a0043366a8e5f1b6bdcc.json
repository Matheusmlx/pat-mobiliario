{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/form/AzComboEnum.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/form/AzComboEnum.vue","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  props: {\n    enumObject: {\n      type: Object,\n      required: true\n    },\n    orderBy: {\n      type: String,\n      default: 'text'\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    chips: {\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    selectionSlot: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    isRequired: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    insertNullItem: {\n      type: Boolean,\n      default: true\n    }\n  },\n  inject: ['$validator'],\n  data: function data() {\n    return {\n      combo: []\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.combo = this.converteParaCombo(this.enumObject);\n  },\n  methods: {\n    alteraValor: function alteraValor(event) {\n      this.$emit('input', event);\n    },\n    converteParaCombo: function converteParaCombo(objeto) {\n      var novoArray = [];\n\n      if (objeto) {\n        for (var _i = 0, _Object$entries = Object.entries(objeto); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              chave = _Object$entries$_i[0],\n              valor = _Object$entries$_i[1];\n\n          novoArray.push({\n            text: valor,\n            value: chave\n          });\n        }\n\n        novoArray = _.sortBy(novoArray, this.orderBy);\n      }\n\n      if (this.insertNullItem) {\n        return _.union([{\n          text: 'Selecione',\n          value: null\n        }], novoArray);\n      }\n\n      return novoArray;\n    }\n  }\n};",{"version":3,"sources":["AzComboEnum.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KAbA;AAgBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApBA;AAwBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxBA;AA4BA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5BA;AAgCA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhCA;AAoCA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KApCA;AAuCA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAvCA;AA2CA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA3CA,GADA;AAiDA,EAAA,MAAA,EAAA,CAAA,YAAA,CAjDA;AAkDA,EAAA,IAlDA,kBAkDA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAtDA;AAuDA,EAAA,WAvDA,yBAuDA;AACA,SAAA,KAAA,GAAA,KAAA,iBAAA,CAAA,KAAA,UAAA,CAAA;AACA,GAzDA;AA0DA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,iBAJA,6BAIA,MAJA,EAIA;AACA,UAAA,SAAA,GAAA,EAAA;;AAEA,UAAA,MAAA,EAAA;AACA,2CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,qCAAA;AAAA;AAAA,cAAA,KAAA;AAAA,cAAA,KAAA;;AACA,UAAA,SAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,KAAA;AAAA,YAAA,KAAA,EAAA;AAAA,WAAA;AACA;;AACA,QAAA,SAAA,GAAA,CAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA,OAAA,CAAA;AACA;;AACA,UAAA,KAAA,cAAA,EAAA;AACA,eAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA,CAAA,EAAA,SAAA,CAAA;AACA;;AAEA,aAAA,SAAA;AACA;AAlBA;AA1DA,CAAA","sourcesContent":["<template>\n    <v-select\n        :items=\"combo\"\n        :value=\"value\"\n        @input=\"alteraValor\"\n        :label=\"label\"\n        :chips=\"chips\"\n        :multiple=\"multiple\"\n        :placeholder=\"placeholder\"\n        v-validate=\"{ required: isRequired }\"\n        :name=\"name\"\n        :error-messages=\"errors.collect(`${name}`)\"\n        :disabled=\"disabled\">\n        <template v-slot:label if=\"this.$slots['label']\">\n            <slot name=\"label\" />\n        </template>\n        <template v-slot:append-outer v-if=\"this.$slots['append-outer']\">\n            <slot name=\"append-outer\" />\n        </template>\n        <template v-if=\"selectionSlot\" v-slot:selection=\"{item,index}\">\n            <v-chip v-if=\"index ===0\">\n                <span>{{item.text}}</span>\n            </v-chip>\n            <span v-if=\"index === 1\" class=\"grey--text caption\">(+{{ value.length - 1 }} others)</span>\n        </template>\n        <template v-slot:append v-if=\"this.$slots['append']\">\n            <slot name=\"append\" />\n        </template>\n    </v-select>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n    props: {\n        enumObject: {\n            type: Object,\n            required: true\n        },\n        orderBy: {\n            type: String,\n            default: 'text'\n        },\n        label: {\n            type: String,\n            default: ''\n        },\n        chips: {\n            default: false\n        },\n        multiple: {\n            type:Boolean,\n            default: false\n        },\n        selectionSlot:{\n            type:Boolean,\n            default:false\n        },\n        name: {\n            type: String,\n            default: ''\n        },\n        placeholder: {\n            type: String,\n            default: ''\n        },\n        isRequired: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        insertNullItem: {\n            type: Boolean,\n            default: true\n        }\n    },\n    inject: ['$validator'],\n    data() {\n        return {\n            combo: []\n        }\n    },\n    beforeMount() {\n        this.combo = this.converteParaCombo(this.enumObject)\n    },\n    methods: {\n        alteraValor(event) {\n            this.$emit('input', event)\n        },\n        converteParaCombo(objeto) {\n            let novoArray = []\n\n            if (objeto) {\n                for (let [chave, valor] of Object.entries(objeto)) {\n                    novoArray.push({ text: valor, value: chave })\n                }\n                novoArray = _.sortBy(novoArray, this.orderBy)\n            }\n            if (this.insertNullItem) {\n                return _.union([{ text: 'Selecione', value: null }], novoArray)\n            }\n\n            return novoArray\n        }\n    }\n}\n</script>\n"],"sourceRoot":"node_modules/@azinformatica/loki/src/components/form"}]}