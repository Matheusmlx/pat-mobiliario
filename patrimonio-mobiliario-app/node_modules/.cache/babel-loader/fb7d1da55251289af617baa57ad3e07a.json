{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js??ref--13-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/exceptions/ExceptionHandler.js","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/exceptions/ExceptionHandler.js","mtime":1614737574280},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport router from '@/views/routers';\nimport store from '@/core/store';\nimport { Alert, PageUtils, LoadingScreen } from '@/core/utils';\nimport ApiErrorValidations from '@/core/exceptions/ApiErrorValidations';\nimport { mensagens, mutationTypes } from '@/core/constants';\nvar alert = new Alert(store);\nvar pageUtils = new PageUtils(router);\nvar loadingScreen = new LoadingScreen(store);\n\nvar ExceptionHandler = /*#__PURE__*/function () {\n  function ExceptionHandler() {\n    _classCallCheck(this, ExceptionHandler);\n  }\n\n  _createClass(ExceptionHandler, [{\n    key: \"execute\",\n    value: function execute(error) {\n      if (error instanceof ApiErrorValidations) {\n        this.tratarValidationError(error);\n      } else {\n        this.tratarError(error);\n      }\n\n      store.commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING);\n      loadingScreen.stop();\n    }\n  }, {\n    key: \"tratarValidationError\",\n    value: function tratarValidationError(error) {\n      if (error.multipleErrors()) {\n        this.handleMultipleErrors(error.response.data.errorMessages);\n      } else if (error.disconnected()) {\n        this.handleDisconnected();\n      } else if (error.unauthorized()) {\n        this.handleUnauthorized();\n      } else if (error.internalError()) {\n        this.handleInternalError(error);\n      } else if (error.notFound()) {\n        this.handleNotFound(error);\n      } else {\n        this.handleUnknown();\n      }\n    }\n  }, {\n    key: \"tratarError\",\n    value: function tratarError(error) {\n      console.error(error.message);\n    }\n  }, {\n    key: \"handleMultipleErrors\",\n    value: function handleMultipleErrors(errors) {\n      var errorMsg = errors.map(function (err) {\n        return err.message;\n      }).reduce(function (total, prox) {\n        return total + ' \\n' + prox;\n      });\n      alert.showError(errorMsg);\n    }\n  }, {\n    key: \"handleDisconnected\",\n    value: function handleDisconnected() {\n      alert.showError(mensagens.DISCONNECTED);\n      pageUtils.goToHome();\n    }\n  }, {\n    key: \"handleUnauthorized\",\n    value: function handleUnauthorized() {\n      alert.showError(mensagens.LOST_SESSION);\n      pageUtils.reload();\n    }\n  }, {\n    key: \"handleNotFound\",\n    value: function handleNotFound(error) {\n      this.handleInternalError(error);\n      pageUtils.goToHome();\n    }\n  }, {\n    key: \"handleInternalError\",\n    value: function handleInternalError(error) {\n      if (typeof error.response.data.message !== 'undefined') {\n        var msgFormatted = error.response.data.message;\n\n        if (msgFormatted) {\n          alert.showError(msgFormatted);\n        } else {\n          this.handleUnknown();\n        }\n      } else {\n        var dataView = new DataView(error.response.data);\n        var decoder = new TextDecoder('utf8');\n        var response = JSON.parse(decoder.decode(dataView));\n        var message = response['message'];\n        alert.showError(message);\n      }\n    }\n  }, {\n    key: \"handleUnknown\",\n    value: function handleUnknown() {\n      alert.showError(mensagens.UNKNOWN);\n    }\n  }]);\n\n  return ExceptionHandler;\n}();\n\nexport default new ExceptionHandler();",{"version":3,"sources":["/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/exceptions/ExceptionHandler.js"],"names":["router","store","Alert","PageUtils","LoadingScreen","ApiErrorValidations","mensagens","mutationTypes","alert","pageUtils","loadingScreen","ExceptionHandler","error","tratarValidationError","tratarError","commit","LOKI","DISABLE_AUTO_SAVING","stop","multipleErrors","handleMultipleErrors","response","data","errorMessages","disconnected","handleDisconnected","unauthorized","handleUnauthorized","internalError","handleInternalError","notFound","handleNotFound","handleUnknown","console","message","errors","errorMsg","map","err","reduce","total","prox","showError","DISCONNECTED","goToHome","LOST_SESSION","reload","msgFormatted","dataView","DataView","decoder","TextDecoder","JSON","parse","decode","UNKNOWN"],"mappings":"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","sourcesContent":["import router from '@/views/routers'\nimport store from '@/core/store'\nimport {Alert, PageUtils, LoadingScreen} from '@/core/utils'\nimport ApiErrorValidations from '@/core/exceptions/ApiErrorValidations'\nimport {mensagens, mutationTypes} from '@/core/constants'\n\nconst alert = new Alert(store)\nconst pageUtils = new PageUtils(router)\nconst loadingScreen = new LoadingScreen(store)\n\nclass ExceptionHandler {\n    execute(error) {\n        if (error instanceof ApiErrorValidations) {\n            this.tratarValidationError(error)\n        } else {\n            this.tratarError(error)\n        }\n        store.commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING)\n        loadingScreen.stop()\n    }\n\n    tratarValidationError(error) {\n        if (error.multipleErrors()) {\n            this.handleMultipleErrors(error.response.data.errorMessages)\n        } else if (error.disconnected()) {\n            this.handleDisconnected()\n        } else if (error.unauthorized()) {\n            this.handleUnauthorized()\n        } else if (error.internalError()) {\n            this.handleInternalError(error)\n        } else if (error.notFound()) {\n            this.handleNotFound(error)\n        } else {\n            this.handleUnknown()\n        }\n    }\n\n    tratarError(error) {\n        console.error(error.message)\n    }\n\n    handleMultipleErrors(errors) {\n        const errorMsg = errors.map(err => err.message).reduce((total, prox) => {\n            return total + ' \\n' + prox\n        })\n        alert.showError(errorMsg)\n    }\n\n    handleDisconnected() {\n        alert.showError(mensagens.DISCONNECTED)\n        pageUtils.goToHome()\n    }\n\n    handleUnauthorized() {\n        alert.showError(mensagens.LOST_SESSION)\n        pageUtils.reload()\n    }\n\n    handleNotFound(error) {\n        this.handleInternalError(error)\n        pageUtils.goToHome()\n    }\n\n    handleInternalError(error) {\n        if(typeof error.response.data.message !== 'undefined'){\n            const msgFormatted = error.response.data.message\n            if (msgFormatted) {\n                alert.showError(msgFormatted)\n            } else {\n                this.handleUnknown()\n            }\n        }else{\n            var dataView = new DataView(error.response.data)\n            var decoder = new TextDecoder('utf8')\n            var response = JSON.parse(decoder.decode(dataView))\n            var message = response['message']\n            alert.showError(message)\n        }\n    }\n\n    handleUnknown() {\n        alert.showError(mensagens.UNKNOWN)\n    }\n}\n\nexport default new ExceptionHandler()\n"]}]}