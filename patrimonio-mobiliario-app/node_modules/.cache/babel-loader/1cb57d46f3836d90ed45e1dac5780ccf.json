{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/label/LabelPersonalizado.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/label/LabelPersonalizado.vue","mtime":1614049852953},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TooltipInformativo from '@/views/components/tooltip/TooltipInformativo';\nimport { createNamespacedHelpers } from 'vuex';\n\nvar _createNamespacedHelp = createNamespacedHelpers('rotulosPersonalizados'),\n    mapGetters = _createNamespacedHelp.mapGetters;\n\nexport default {\n  name: 'TemplateSlotLabel',\n  props: {\n    campo: {\n      type: String,\n      required: true\n    },\n    tela: {\n      type: String,\n      required: true\n    },\n    obrigatorioPorPadrao: {\n      type: Boolean,\n      default: false\n    },\n    apresentaTooltip: {\n      type: Boolean,\n      default: false\n    },\n    apenasNome: {\n      type: Boolean,\n      default: false\n    },\n    permissaoEdicao: {\n      type: Boolean,\n      default: true\n    },\n    complementoLabel: {\n      type: String,\n      default: ''\n    },\n    mensagemPadraoTooltip: {\n      type: String\n    }\n  },\n  components: {\n    TooltipInformativo: TooltipInformativo\n  },\n  computed: _objectSpread({}, mapGetters(['getNomeRotulosPersonalizados', 'getObrigatorioRotulosPersonalizados', 'getTooltipRotulosPersonalizados']))\n};",{"version":3,"sources":["LabelPersonalizado.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAWA,OAAA,kBAAA,MAAA,+CAAA;AACA,SAAA,uBAAA,QAAA,MAAA;;4BAEA,uBAAA,CAAA,uBAAA,C;IAAA,U,yBAAA,U;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,qBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AA7BA,GAFA;AAmCA,EAAA,UAAA,EAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAnCA;AAoCA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,8BADA,EAEA,qCAFA,EAGA,iCAHA,CAAA,CADA;AApCA,CAAA","sourcesContent":["<template>\n    <div class=\"label-personalizado\">\n        {{getNomeRotulosPersonalizados(campo,tela)}} {{complementoLabel}}\n        <span\n            v-if=\"!apenasNome && ((permissaoEdicao && getObrigatorioRotulosPersonalizados(campo, tela)) || (permissaoEdicao && obrigatorioPorPadrao))\"\n            class=\"ml-1 red--text\">*</span>\n        <tooltip-informativo v-if=\"apresentaTooltip\" :campo=\"campo\" :tela=\"tela\" :mensagemPadraoTooltip=\"mensagemPadraoTooltip\"/>\n    </div>\n</template>\n\n<script>\n    import TooltipInformativo from '@/views/components/tooltip/TooltipInformativo'\n    import {createNamespacedHelpers} from 'vuex'\n\n    const {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n    export default {\n        name: 'TemplateSlotLabel',\n        props: {\n            campo: {\n                type: String,\n                required: true\n            },\n            tela: {\n                type: String,\n                required: true\n            },\n            obrigatorioPorPadrao: {\n                type: Boolean,\n                default: false\n            },\n            apresentaTooltip: {\n                type: Boolean,\n                default: false\n            },\n            apenasNome: {\n                type: Boolean,\n                default: false\n            },\n            permissaoEdicao: {\n                type: Boolean,\n                default: true\n            },\n            complementoLabel: {\n                type: String,\n                default: ''\n            },\n            mensagemPadraoTooltip:{\n                type: String\n            }\n        },\n        components:{TooltipInformativo},\n        computed: {\n            ...mapGetters([\n                'getNomeRotulosPersonalizados',\n                'getObrigatorioRotulosPersonalizados',\n                'getTooltipRotulosPersonalizados'\n            ]),\n        }\n    }\n</script>\n\n<style lang=\"stylus\">\n.label-personalizado\n    display inline\n</style>\n"],"sourceRoot":"src/views/components/label"}]}