{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/configuracao/reserva/edicao/ReservaEdicao.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/configuracao/reserva/edicao/ReservaEdicao.vue","mtime":1620040672253},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar';\nimport ReservaDadosGeraisEdicao from '@/views/pages/configuracao/reserva/edicao/ReservaDadosGeraisEdicao';\nimport ReservaIntervaloListagem from '@/views/pages/configuracao/reserva/edicao/intervalo/listagem/ReservaIntervaloListagem';\nimport { mapActions, mapMutations, mapState } from 'vuex';\nimport { actionTypes, mutationTypes } from '@/core/constants';\nexport default {\n  name: 'ReservaDadosGeraisEdicaoIntervalo',\n  components: {\n    AcoesBotoesFinalizarVoltar: AcoesBotoesFinalizarVoltar,\n    ReservaIntervaloListagem: ReservaIntervaloListagem,\n    ReservaDadosGeraisEdicao: ReservaDadosGeraisEdicao\n  },\n  data: function data() {\n    return {\n      reservaId: '',\n      reserva: {},\n      existeIntervalos: false,\n      tituloAlerta: 'Atenção!',\n      subTituloAlerta: 'A situação será alterada para Parcial, pois ainda possui intervalos disponíveis nesta reserva. Deseja confirmar?',\n      textoBotaoAlertaConfirm: 'Confirmar',\n      iconeAlerta: 'warning'\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setReservaId();\n              _context.next = 3;\n              return this.buscarReserva();\n\n            case 3:\n              _context.next = 5;\n              return this.verificarExistenciaIntervalosEmElaboracao();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: _objectSpread({}, mapState({\n    adicionandoIntervalos: function adicionandoIntervalos(state) {\n      return state.intervalo.existeEmElaboracao;\n    }\n  })),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapMutations([mutationTypes.CONFIGURACAO.RESERVA.INTERVALO.RESETA_PAGE_RESERVA_INTERVALO])), mapActions([actionTypes.CONFIGURACAO.RESERVA.BUSCAR_RESERVA_POR_ID, actionTypes.CONFIGURACAO.RESERVA.FINALIZAR, actionTypes.CONFIGURACAO.RESERVA.INTERVALO.EXISTE_EM_ELABORACAO, actionTypes.CONFIGURACAO.RESERVA.INTERVALO.BUSCAR_TODOS_INTERVALOS_LISTAGEM])), {}, {\n    recarregarDadosReserva: function () {\n      var _recarregarDadosReserva = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.buscarReserva();\n\n              case 2:\n                _context2.next = 4;\n                return this.verificarExistenciaIntervalosEmElaboracao();\n\n              case 4:\n                this.resetaPageReservaIntervalo();\n                _context2.next = 7;\n                return this.buscarTodosIntervalosListagem(this.reservaId);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function recarregarDadosReserva() {\n        return _recarregarDadosReserva.apply(this, arguments);\n      }\n\n      return recarregarDadosReserva;\n    }(),\n    setReservaId: function setReservaId() {\n      this.reservaId = this.$route.params.id.toString();\n    },\n    buscarReserva: function () {\n      var _buscarReserva = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.buscarReservaPorId(this.reservaId);\n\n              case 3:\n                this.reserva = _context3.sent;\n\n                if (this.reserva) {\n                  this.validarSeExisteIntervalos(this.reserva.quantidadeReservada, this.reserva.quantidadeRestante);\n                }\n\n                _context3.next = 11;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                _context3.next = 11;\n                return this.$router.replace({\n                  name: 'ReservaListagem'\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function buscarReserva() {\n        return _buscarReserva.apply(this, arguments);\n      }\n\n      return buscarReserva;\n    }(),\n    validarSeExisteIntervalos: function validarSeExisteIntervalos(quantidadeReservada, quantidadeRestante) {\n      this.existeIntervalos = quantidadeReservada !== quantidadeRestante;\n    },\n    verificarExistenciaIntervalosEmElaboracao: function () {\n      var _verificarExistenciaIntervalosEmElaboracao = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.existeIntervalosEmElaboracao(this.reservaId);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function verificarExistenciaIntervalosEmElaboracao() {\n        return _verificarExistenciaIntervalosEmElaboracao.apply(this, arguments);\n      }\n\n      return verificarExistenciaIntervalosEmElaboracao;\n    }(),\n    tratarEventoFinalizar: function tratarEventoFinalizar() {\n      var _this = this;\n\n      if (this.reserva.quantidadeRestante !== 0) {\n        this.mostrarConfirmacao({\n          titulo: this.tituloAlerta,\n          subTitulo: this.subTituloAlerta,\n          textoBotaoConfirm: this.textoBotaoAlertaConfirm,\n          icon: this.iconeAlerta\n        }, function (result) {\n          if (result.isConfirmed) {\n            _this.finalizar();\n          }\n        });\n      } else {\n        this.finalizar();\n      }\n    },\n    finalizar: function () {\n      var _finalizar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var sucesso;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.finalizarReserva(this.reservaId);\n\n              case 2:\n                sucesso = _context5.sent;\n\n                if (!sucesso) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                _context5.next = 6;\n                return this.$router.replace({\n                  name: 'ReservaVisualizacao'\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function finalizar() {\n        return _finalizar.apply(this, arguments);\n      }\n\n      return finalizar;\n    }(),\n    voltarParaListagem: function () {\n      var _voltarParaListagem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$router.replace({\n                  name: 'ReservaListagem'\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function voltarParaListagem() {\n        return _voltarParaListagem.apply(this, arguments);\n      }\n\n      return voltarParaListagem;\n    }()\n  })\n};",{"version":3,"sources":["ReservaEdicao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,0BAAA,MAAA,qDAAA;AACA,OAAA,wBAAA,MAAA,oEAAA;AACA,OAAA,wBAAA,MACA,uFADA;AAEA,SAAA,UAAA,EAAA,YAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,WAAA,EAAA,aAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mCADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,0BAAA,EAAA,0BAAA;AAAA,IAAA,wBAAA,EAAA,wBAAA;AAAA,IAAA,wBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,gBAAA,EAAA,KAHA;AAIA,MAAA,YAAA,EAAA,UAJA;AAKA,MAAA,eAAA,EAAA,kHALA;AAMA,MAAA,uBAAA,EAAA,WANA;AAOA,MAAA,WAAA,EAAA;AAPA,KAAA;AASA,GAbA;AAcA,EAAA,OAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,mBAAA,YAAA;AAfA;AAAA,qBAgBA,KAAA,aAAA,EAhBA;;AAAA;AAAA;AAAA,qBAiBA,KAAA,yCAAA,EAjBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,qBAAA,EAAA,+BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,SAAA,CAAA,kBAAA;AAAA;AADA,GAAA,CADA,CAnBA;AAwBA,EAAA,OAAA,gDACA,YAAA,CAAA,CAAA,aAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,CAAA,CADA,GAEA,UAAA,CAAA,CACA,WAAA,CAAA,YAAA,CAAA,OAAA,CAAA,qBADA,EAEA,WAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAFA,EAGA,WAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,oBAHA,EAIA,WAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,gCAJA,CAAA,CAFA;AAQA,IAAA,sBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASA,KAAA,aAAA,EATA;;AAAA;AAAA;AAAA,uBAUA,KAAA,yCAAA,EAVA;;AAAA;AAWA,qBAAA,0BAAA;AAXA;AAAA,uBAYA,KAAA,6BAAA,CAAA,KAAA,SAAA,CAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAcA,IAAA,YAdA,0BAcA;AACA,WAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,QAAA,EAAA;AACA,KAhBA;AAiBA,IAAA,aAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBA,KAAA,kBAAA,CAAA,KAAA,SAAA,CAnBA;;AAAA;AAmBA,qBAAA,OAnBA;;AAoBA,oBAAA,KAAA,OAAA,EAAA;AACA,uBAAA,yBAAA,CAAA,KAAA,OAAA,CAAA,mBAAA,EAAA,KAAA,OAAA,CAAA,kBAAA;AACA;;AAtBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwBA,KAAA,OAAA,CAAA,OAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA,CAxBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2BA,IAAA,yBA3BA,qCA2BA,mBA3BA,EA2BA,kBA3BA,EA2BA;AACA,WAAA,gBAAA,GAAA,mBAAA,KAAA,kBAAA;AACA,KA7BA;AA8BA,IAAA,yCA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA+BA,KAAA,4BAAA,CAAA,KAAA,SAAA,CA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA,IAAA,qBAjCA,mCAiCA;AAAA;;AACA,UAAA,KAAA,OAAA,CAAA,kBAAA,KAAA,CAAA,EAAA;AACA,aAAA,kBAAA,CAAA;AACA,UAAA,MAAA,EAAA,KAAA,YADA;AAEA,UAAA,SAAA,EAAA,KAAA,eAFA;AAGA,UAAA,iBAAA,EAAA,KAAA,uBAHA;AAIA,UAAA,IAAA,EAAA,KAAA;AAJA,SAAA,EAKA,UAAA,MAAA,EAAA;AACA,cAAA,MAAA,CAAA,WAAA,EAAA;AACA,YAAA,KAAA,CAAA,SAAA;AACA;AACA,SATA;AAUA,OAXA,MAWA;AACA,aAAA,SAAA;AACA;AACA,KAhDA;AAiDA,IAAA,SAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAkDA,KAAA,gBAAA,CAAA,KAAA,SAAA,CAlDA;;AAAA;AAkDA,gBAAA,OAlDA;;AAAA,qBAmDA,OAnDA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoDA,KAAA,OAAA,CAAA,OAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA,CApDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDA,IAAA,kBAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwDA,KAAA,OAAA,CAAA,OAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA,CAxDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxBA,CAAA","sourcesContent":["<template>\n    <div>\n        <router-view @recarregarDadosReserva=\"recarregarDadosReserva\"/>\n\n        <reserva-intervalo-listagem\n            :reserva-id=\"reservaId\" :reserva=\"reserva\"\n            @recarregarDadosReserva=\"recarregarDadosReserva\"\n            v-if=\"existeIntervalos\"\n        />\n        <reserva-dados-gerais-edicao\n            :reserva-id=\"reservaId\"\n            :reserva=\"reserva\"\n            @recarregarDadosReserva=\"recarregarDadosReserva\"\n            v-else\n        />\n\n        <v-divider/>\n\n        <acoes-botoes-finalizar-voltar\n            :desabilitado=\"!adicionandoIntervalos\"\n            texto-em-processamento=\"Aguarde\"\n            texto-bloqueio=\"Adicione órgãos na reserva para finalizar.\"\n            @finalizar=\"tratarEventoFinalizar\"\n            @voltar=\"voltarParaListagem\"\n        />\n    </div>\n</template>\n\n<script>\n    import AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar'\n    import ReservaDadosGeraisEdicao from '@/views/pages/configuracao/reserva/edicao/ReservaDadosGeraisEdicao'\n    import ReservaIntervaloListagem\n        from '@/views/pages/configuracao/reserva/edicao/intervalo/listagem/ReservaIntervaloListagem'\n    import {mapActions, mapMutations, mapState} from 'vuex'\n    import {actionTypes, mutationTypes} from '@/core/constants'\n\n    export default {\n        name: 'ReservaDadosGeraisEdicaoIntervalo',\n        components: {AcoesBotoesFinalizarVoltar, ReservaIntervaloListagem, ReservaDadosGeraisEdicao},\n        data() {\n            return {\n                reservaId: '',\n                reserva: {},\n                existeIntervalos: false,\n                tituloAlerta: 'Atenção!',\n                subTituloAlerta: 'A situação será alterada para Parcial, pois ainda possui intervalos disponíveis nesta reserva. Deseja confirmar?',\n                textoBotaoAlertaConfirm: 'Confirmar',\n                iconeAlerta: 'warning'\n            }\n        },\n        async mounted() {\n            this.setReservaId()\n            await this.buscarReserva()\n            await this.verificarExistenciaIntervalosEmElaboracao()\n        },\n        computed: {\n            ...mapState({\n                adicionandoIntervalos: state => state.intervalo.existeEmElaboracao\n            })\n        },\n        methods: {\n            ...mapMutations([mutationTypes.CONFIGURACAO.RESERVA.INTERVALO.RESETA_PAGE_RESERVA_INTERVALO]),\n            ...mapActions([\n                actionTypes.CONFIGURACAO.RESERVA.BUSCAR_RESERVA_POR_ID,\n                actionTypes.CONFIGURACAO.RESERVA.FINALIZAR,\n                actionTypes.CONFIGURACAO.RESERVA.INTERVALO.EXISTE_EM_ELABORACAO,\n                actionTypes.CONFIGURACAO.RESERVA.INTERVALO.BUSCAR_TODOS_INTERVALOS_LISTAGEM\n            ]),\n            async recarregarDadosReserva() {\n                await this.buscarReserva()\n                await this.verificarExistenciaIntervalosEmElaboracao()\n                this.resetaPageReservaIntervalo()\n                await this.buscarTodosIntervalosListagem(this.reservaId)\n            },\n            setReservaId() {\n                this.reservaId = this.$route.params.id.toString()\n            },\n            async buscarReserva() {\n                try {\n                    this.reserva = await this.buscarReservaPorId(this.reservaId)\n                    if (this.reserva) {\n                        this.validarSeExisteIntervalos(this.reserva.quantidadeReservada, this.reserva.quantidadeRestante)\n                    }\n                } catch (err) {\n                    await this.$router.replace({name: 'ReservaListagem'})\n                }\n            },\n            validarSeExisteIntervalos(quantidadeReservada, quantidadeRestante) {\n                this.existeIntervalos = quantidadeReservada !== quantidadeRestante\n            },\n            async verificarExistenciaIntervalosEmElaboracao() {\n                await this.existeIntervalosEmElaboracao(this.reservaId)\n            },\n            tratarEventoFinalizar() {\n                if(this.reserva.quantidadeRestante !== 0) {\n                    this.mostrarConfirmacao({\n                        titulo: this.tituloAlerta,\n                        subTitulo: this.subTituloAlerta,\n                        textoBotaoConfirm: this.textoBotaoAlertaConfirm,\n                        icon: this.iconeAlerta\n                    }, (result) => {\n                        if (result.isConfirmed) {\n                            this.finalizar()\n                        }\n                    })\n                } else {\n                    this.finalizar()\n                }\n            },\n            async finalizar() {\n                const sucesso = await this.finalizarReserva(this.reservaId)\n                if (sucesso) {\n                    await this.$router.replace({name: 'ReservaVisualizacao'})\n                }\n            },\n            async voltarParaListagem() {\n                await this.$router.replace({name: 'ReservaListagem'})\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/views/pages/configuracao/reserva/edicao"}]}