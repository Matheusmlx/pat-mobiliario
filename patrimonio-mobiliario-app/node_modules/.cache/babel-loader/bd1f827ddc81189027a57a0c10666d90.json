{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js??ref--13-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/notificacao/actions.js","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/notificacao/actions.js","mtime":1614200494685},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nvar _actionTypes$NOTIFICA;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport api from '@/core/apiclient';\nimport { actionTypes, mutationTypes } from '@/core/constants';\nimport Notificacoes from '@/core/utils/Notificacoes';\nexport default (_actionTypes$NOTIFICA = {}, _defineProperty(_actionTypes$NOTIFICA, actionTypes.NOTIFICACAO.BUSCAR_NOTIFICACOES, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _data$items;\n\n    var commit, state, _yield$api$notificaca, data, dados;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit, state = _ref.state;\n            _context.next = 3;\n            return api.notificacao.buscarNotificacoes(state.notificacao.page);\n\n          case 3:\n            _yield$api$notificaca = _context.sent;\n            data = _yield$api$notificaca.data;\n\n            (_data$items = data.items).unshift.apply(_data$items, _toConsumableArray(state.notificacao.items));\n\n            commit(mutationTypes.LOKI.SET_NOTIFICATION, Notificacoes.retornaArrayDeNotificacoes(data));\n            commit(mutationTypes.NOTIFICACAO.SET_NOTIFICACAO_ITENS, data.items);\n            dados = {\n              quantidadeNaoVisualizadasAtual: data.quantidadeNaoVisualizadas,\n              mostraVerMais: data.totalElements > data.items.length\n            };\n            return _context.abrupt(\"return\", dados);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_actionTypes$NOTIFICA, actionTypes.NOTIFICACAO.BUSCAR_QUANTIDADE_NOTIFICACOES_NAO_VISUALIZADAS, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var commit, _yield$api$notificaca2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit;\n            _context2.next = 3;\n            return api.notificacao.buscarQuantidadeNotificacoesNaoVisualizadas();\n\n          case 3:\n            _yield$api$notificaca2 = _context2.sent;\n            data = _yield$api$notificaca2.data;\n            commit(mutationTypes.LOKI.SET_NOTIFICATION, Notificacoes.retornaArrayDeNotificacoes(data));\n            return _context2.abrupt(\"return\", data.quantidadeNaoVisualizadas);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _actionTypes$NOTIFICA);",{"version":3,"sources":["/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/notificacao/actions.js"],"names":["api","actionTypes","mutationTypes","Notificacoes","NOTIFICACAO","BUSCAR_NOTIFICACOES","commit","state","notificacao","buscarNotificacoes","page","data","items","unshift","LOKI","SET_NOTIFICATION","retornaArrayDeNotificacoes","SET_NOTIFICACAO_ITENS","dados","quantidadeNaoVisualizadasAtual","quantidadeNaoVisualizadas","mostraVerMais","totalElements","length","BUSCAR_QUANTIDADE_NOTIFICACOES_NAO_VISUALIZADAS","buscarQuantidadeNotificacoesNaoVisualizadas"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,kBAAzC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,mFAEWF,WAAW,CAACG,WAAZ,CAAwBC,mBAFnC;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEyDC,YAAAA,MAFzD,QAEyDA,MAFzD,EAEiEC,KAFjE,QAEiEA,KAFjE;AAAA;AAAA,mBAG+BP,GAAG,CAACQ,WAAJ,CAAgBC,kBAAhB,CAAmCF,KAAK,CAACC,WAAN,CAAkBE,IAArD,CAH/B;;AAAA;AAAA;AAGgBC,YAAAA,IAHhB,yBAGgBA,IAHhB;;AAIQ,2BAAAA,IAAI,CAACC,KAAL,EAAWC,OAAX,uCAAsBN,KAAK,CAACC,WAAN,CAAkBI,KAAxC;;AACAN,YAAAA,MAAM,CAACJ,aAAa,CAACY,IAAd,CAAmBC,gBAApB,EAAsCZ,YAAY,CAACa,0BAAb,CAAwCL,IAAxC,CAAtC,CAAN;AACAL,YAAAA,MAAM,CAACJ,aAAa,CAACE,WAAd,CAA0Ba,qBAA3B,EAAiDN,IAAI,CAACC,KAAtD,CAAN;AACMM,YAAAA,KAPd,GAOsB;AACVC,cAAAA,8BAA8B,EAAER,IAAI,CAACS,yBAD3B;AAEVC,cAAAA,aAAa,EAAEV,IAAI,CAACW,aAAL,GAAsBX,IAAI,CAACC,KAAL,CAAWW;AAFtC,aAPtB;AAAA,6CAWgBL,KAXhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAcWjB,WAAW,CAACG,WAAZ,CAAwBoB,+CAdnC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAcqFlB,YAAAA,MAdrF,SAcqFA,MAdrF;AAAA;AAAA,mBAe+BN,GAAG,CAACQ,WAAJ,CAAgBiB,2CAAhB,EAf/B;;AAAA;AAAA;AAegBd,YAAAA,IAfhB,0BAegBA,IAfhB;AAgBQL,YAAAA,MAAM,CAACJ,aAAa,CAACY,IAAd,CAAmBC,gBAApB,EAAsCZ,YAAY,CAACa,0BAAb,CAAwCL,IAAxC,CAAtC,CAAN;AAhBR,8CAiBeA,IAAI,CAACS,yBAjBpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import api from '@/core/apiclient'\nimport {actionTypes, mutationTypes} from '@/core/constants'\nimport Notificacoes from '@/core/utils/Notificacoes'\n\nexport default {\n\n    async [actionTypes.NOTIFICACAO.BUSCAR_NOTIFICACOES]({commit, state}) {\n        const { data } = await api.notificacao.buscarNotificacoes(state.notificacao.page)\n        data.items.unshift(...state.notificacao.items)\n        commit(mutationTypes.LOKI.SET_NOTIFICATION, Notificacoes.retornaArrayDeNotificacoes(data))\n        commit(mutationTypes.NOTIFICACAO.SET_NOTIFICACAO_ITENS,data.items)\n        const dados = {\n            quantidadeNaoVisualizadasAtual: data.quantidadeNaoVisualizadas,\n            mostraVerMais: data.totalElements  > data.items.length\n        }\n        return  dados\n    },\n\n    async [actionTypes.NOTIFICACAO.BUSCAR_QUANTIDADE_NOTIFICACOES_NAO_VISUALIZADAS]({commit}) {\n        const { data } = await api.notificacao.buscarQuantidadeNotificacoesNaoVisualizadas()\n        commit(mutationTypes.LOKI.SET_NOTIFICATION, Notificacoes.retornaArrayDeNotificacoes(data))\n        return data.quantidadeNaoVisualizadas\n    }\n}\n"]}]}