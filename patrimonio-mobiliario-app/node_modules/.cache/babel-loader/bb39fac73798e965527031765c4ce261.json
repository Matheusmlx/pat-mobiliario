{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/form/AzMoney.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/form/AzMoney.vue","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport accounting from 'accounting';\nexport default {\n  props: {\n    value: {\n      required: true,\n      default: null\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    showClearButton: {\n      type: Boolean,\n      default: false\n    },\n    maxLength: {\n      type: Number,\n      default: 24\n    },\n    validateLength: {\n      type: Boolean,\n      default: false\n    },\n    negative: {\n      type: Boolean,\n      default: false\n    },\n    precision: {\n      type: Number,\n      default: 2\n    },\n    prefix: {\n      type: String,\n      default: 'R$ '\n    },\n    suffix: {\n      type: String,\n      default: ''\n    },\n    requeridMessage: {\n      type: String,\n      default: 'O campo {name} é obrigatório'\n    },\n    validationField: {\n      type: Number\n    },\n    eventSubmit: {\n      type: String\n    }\n  },\n  inject: ['$validator'],\n  data: function data() {\n    return {\n      moneyConfig: {\n        decimal: ',',\n        thousands: '.',\n        prefix: this.prefix,\n        suffix: this.suffix,\n        precision: this.precision,\n        masked: false\n      },\n      clickedField: false,\n      formatted: false,\n      select: false,\n      length: this.maxLength\n    };\n  },\n  computed: {\n    valueFormated: function valueFormated() {\n      if (this.value !== null) {\n        return accounting.formatMoney(this.value, this.prefix, this.precision, this.thousands, this.decimal);\n      } else {\n        return null;\n      }\n    },\n    conditionalMoneyConfig: function conditionalMoneyConfig() {\n      return this.value !== null || this.clickedField ? this.moneyConfig : null;\n    },\n    showClearButtonIf: function showClearButtonIf() {\n      return this.value !== null && this.showClearButton ? 'fas fa-times-circle' : '';\n    }\n  },\n  watch: {\n    validationField: function validationField() {\n      this.validateRequired(this.value);\n    }\n  },\n  updated: function updated() {\n    if (!this.required) {\n      this.clearErrorValidate();\n    }\n  },\n  methods: {\n    updateValue: function updateValue(value, event) {\n      this.formatted = true;\n      var valueNumber = value;\n\n      if (this.prefix) {\n        valueNumber = valueNumber.replace(this.prefix, '');\n      }\n\n      if (this.suffix) {\n        valueNumber = valueNumber.replace(this.suffix, '');\n      }\n\n      var valueFormatedSimple = accounting.unformat(valueNumber, ',');\n\n      if ((valueFormatedSimple !== this.value || event === 'keyupEnter' || event === 'keyupEsc') && this.clickedField) {\n        if (!this.eventSubmit || this.eventSubmit === event) {\n          this.$emit('input', valueFormatedSimple);\n          this.$emit(event, valueFormatedSimple);\n          this.clickedField = false;\n        }\n      }\n\n      this.validateRequired(value);\n    },\n    validatorNegative: function validatorNegative($event) {\n      if ($event.key === '-' && !this.negative) {\n        $event.preventDefault();\n      }\n    },\n    cleanValue: function cleanValue() {\n      this.$emit('blur', null);\n      this.clickedField = false;\n    },\n    checkKey: function checkKey($event) {\n      if ($event.key !== 'Tab') {\n        this.clickedField = true;\n      }\n\n      if ($event.key === 'Enter') {\n        this.updateValue($event.target.value, 'keyupEnter');\n      } else if ($event.key === 'Escape') {\n        this.updateValue($event.target.value, 'keyupEsc');\n      } else {\n        this.updateValue($event.target.value, 'keyup');\n      }\n    },\n    validateRequired: function validateRequired(value) {\n      if (this.required) {\n        this.clearErrorValidate();\n\n        if (!value) {\n          this.errors.add({\n            field: this.name,\n            msg: this.requeridMessage.replace('{name}', this.name)\n          });\n        }\n      }\n    },\n    checkMaxLength: function checkMaxLength($event) {\n      if (this.validateLength) {\n        if (this.formatted && this.isDigit($event.code) && !this.select) {\n          this.length = this.maxLength + Math.floor(this.maxLength / 3) + this.prefix.length;\n        } else {\n          this.length = this.maxLength;\n        }\n\n        if (this.isDigit($event.code)) {\n          this.select = false;\n        }\n      }\n    },\n    isDigit: function isDigit(key) {\n      var pattern = /Digit\\d|Numpad\\d/i;\n      return pattern.test(key);\n    },\n    selectValue: function selectValue() {\n      this.select = true;\n    },\n    checkKeyAndValidateLength: function checkKeyAndValidateLength($event) {\n      this.validatorNegative($event);\n      this.checkMaxLength($event);\n    },\n    clearErrorValidate: function clearErrorValidate() {\n      for (var index = 0; index < this.$validator.errors.items.length; index++) {\n        if (this.$validator.errors.items[index].field === this.name) {\n          this.$validator.errors.items.splice(index, 1);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["AzMoney.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-text-field\n        v-money=\"conditionalMoneyConfig\"\n        :name=\"name\"\n        :label=\"label\"\n        :maxLength=\"length\"\n        :disabled=\"disabled\"\n        :required=\"required\"\n        :value=\"valueFormated\"\n        :placeholder=\"placeholder\"\n        :showClearButton=\"showClearButton\"\n        class=\"clear-button\"\n        :prepend-inner-icon=\"showClearButtonIf\"\n        :error-messages=\"errors.collect(`${name}`)\"\n        @click:prepend-inner=\"cleanValue\"\n        @blur=\"updateValue($event.target.value, 'blur')\"\n        @keydown.ctrl.65=\"selectValue\"\n        @keydown=\"checkKeyAndValidateLength($event)\"\n        @keyup=\"checkKey($event)\">\n        <template v-slot:label if=\"this.$slots['label']\">\n            <slot name=\"label\" />\n        </template>\n        <template v-slot:append-outer v-if=\"this.$slots['append-outer']\">\n            <slot name=\"append-outer\" />\n        </template>\n        <template v-slot:append v-if=\"this.$slots['append']\">\n            <slot name=\"append\" />\n        </template>\n    </v-text-field>\n</template>\n\n<script>\nimport accounting from 'accounting'\n\nexport default {\n    props: {\n        value: {\n            required: true,\n            default: null\n        },\n        label: {\n            type: String,\n            default: ''\n        },\n        placeholder: {\n            type: String,\n            default: ''\n        },\n        name: {\n            type: String,\n            default: ''\n        },\n        required: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        showClearButton: {\n            type: Boolean,\n            default: false\n        },\n        maxLength: {\n            type: Number,\n            default: 24\n        },\n        validateLength: {\n            type: Boolean,\n            default: false\n        },\n        negative: {\n            type: Boolean,\n            default: false\n        },\n        precision: {\n            type: Number,\n            default: 2\n        },\n        prefix: {\n            type: String,\n            default: 'R$ '\n        },\n        suffix: {\n            type: String,\n            default: ''\n        },\n        requeridMessage: {\n            type: String,\n            default: 'O campo {name} é obrigatório'\n        },\n        validationField: {\n            type: Number\n        },\n        eventSubmit: {\n            type: String\n        }\n    },\n    inject: ['$validator'],\n    data() {\n        return {\n            moneyConfig: {\n                decimal: ',',\n                thousands: '.',\n                prefix: this.prefix,\n                suffix: this.suffix,\n                precision: this.precision,\n                masked: false\n            },\n            clickedField: false,\n            formatted: false,\n            select: false,\n            length: this.maxLength\n        }\n    },\n    computed: {\n        valueFormated() {\n            if (this.value !== null) {\n                return accounting.formatMoney(this.value, this.prefix, this.precision, this.thousands, this.decimal)\n            } else {\n                return null\n            }\n        },\n        conditionalMoneyConfig() {\n            return this.value !== null || this.clickedField ? this.moneyConfig : null\n        },\n        showClearButtonIf() {\n            return this.value !== null && this.showClearButton ? 'fas fa-times-circle' : ''\n        }\n    },\n    watch: {\n        validationField() {\n            this.validateRequired(this.value)\n        }\n    },\n    updated(){\n        if(!this.required){\n            this.clearErrorValidate()\n        }\n    },\n    methods: {\n        updateValue(value, event) {\n            this.formatted = true\n            let valueNumber = value\n            if (this.prefix) {\n                valueNumber = valueNumber.replace(this.prefix, '')\n            }\n            if (this.suffix) {\n                valueNumber = valueNumber.replace(this.suffix, '')\n            }\n            const valueFormatedSimple = accounting.unformat(valueNumber, ',')\n\n            if (\n                (valueFormatedSimple !== this.value || event === 'keyupEnter' || event === 'keyupEsc') &&\n                this.clickedField\n            ) {\n\n                if(!this.eventSubmit || this.eventSubmit === event ) {\n                    this.$emit('input', valueFormatedSimple)\n                    this.$emit(event, valueFormatedSimple)\n                    this.clickedField = false\n                }\n            }\n\n            this.validateRequired(value)\n        },\n        validatorNegative($event) {\n            if ($event.key === '-' && !this.negative) {\n                $event.preventDefault()\n            }\n        },\n        cleanValue() {\n            this.$emit('blur', null)\n            this.clickedField = false\n        },\n        checkKey($event) {\n            if ($event.key !== 'Tab') {\n                this.clickedField = true\n            }\n            if ($event.key === 'Enter') {\n                this.updateValue($event.target.value, 'keyupEnter')\n            } else if ($event.key === 'Escape') {\n                this.updateValue($event.target.value, 'keyupEsc')\n            } else {\n                this.updateValue($event.target.value, 'keyup')\n            }\n        },\n        validateRequired(value) {\n            if (this.required) {\n                this.clearErrorValidate()\n                if (!value) {\n                    this.errors.add({\n                        field: this.name,\n                        msg: this.requeridMessage.replace('{name}', this.name)\n                    })\n                }\n            }\n        },\n        checkMaxLength($event) {\n            if (this.validateLength) {\n                if (this.formatted && this.isDigit($event.code) && !this.select) {\n                    this.length = this.maxLength + Math.floor(this.maxLength / 3) + this.prefix.length\n                } else {\n                    this.length = this.maxLength\n                }\n\n                if (this.isDigit($event.code)) {\n                    this.select = false\n                }\n            }\n        },\n        isDigit(key) {\n            const pattern = /Digit\\d|Numpad\\d/i\n\n            return pattern.test(key)\n        },\n        selectValue() {\n            this.select = true\n        },\n        checkKeyAndValidateLength($event) {\n            this.validatorNegative($event)\n            this.checkMaxLength($event)\n        },\n        clearErrorValidate() {\n            for (var index = 0; index < this.$validator.errors.items.length; index++) {\n                if (this.$validator.errors.items[index].field === this.name) {\n                    this.$validator.errors.items.splice(index, 1)\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\">\n.clear-button\n    .v-input__icon\n        min-width 13px\n        width 13px\n\n    i\n        font-size 13px\n</style>\n"],"sourceRoot":"node_modules/@azinformatica/loki/src/components/form"}]}