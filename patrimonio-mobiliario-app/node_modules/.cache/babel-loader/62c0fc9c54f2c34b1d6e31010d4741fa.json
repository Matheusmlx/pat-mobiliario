{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/dados-gerais/DadosGerais.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/dados-gerais/DadosGerais.vue","mtime":1617037940145},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { actionTypes, mutationTypes } from '@/core/constants';\nimport Empenho from '@/views/components/empenho/Empenho';\nimport { createNamespacedHelpers, mapActions } from 'vuex';\nimport AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions';\nimport TooltipCamposInativos from '@/views/components/tooltip/TooltipCamposInativos';\nimport LabelPersonalizado from '@/views/components/label/LabelPersonalizado';\nimport AcoesBotoesContinuarVoltar from '@/views/components/acoes/AcoesBotoesContinuarVoltar';\nimport Axios from 'axios';\n\nvar _createNamespacedHelp = createNamespacedHelpers('rotulosPersonalizados'),\n    mapGetters = _createNamespacedHelp.mapGetters;\n\nexport default {\n  name: 'dadosGerais',\n  components: {\n    TooltipCamposInativos: TooltipCamposInativos,\n    Empenho: Empenho,\n    LabelPersonalizado: LabelPersonalizado,\n    AcoesBotoesContinuarVoltar: AcoesBotoesContinuarVoltar\n  },\n  data: function data() {\n    return {\n      dadosDeEntrada: {},\n      incorporacao: {},\n      empenhos: [{\n        incorporacaoId: this.$route.params.incorporacaoId\n      }],\n      reconhecimentos: [],\n      fornecedores: [],\n      comodantes: [],\n      convenios: [],\n      fundos: [],\n      orgaos: [],\n      setores: [],\n      buscaFornecedorDinamicamente: null,\n      buscarConvenioDinamicamente: null,\n      buscarComodantesDinamicamente: null,\n      estaBuscandoFornecedores: false,\n      estaBuscandoConvenios: false,\n      estaBuscandoComodantes: false,\n      cnpjPesquisadoContemMascara: false,\n      fornecedorSelecionado: true,\n      empenhoObrigatorio: false,\n      notaObrigatorio: false,\n      reconhecimentoInativo: false,\n      fornecedorInativo: false,\n      orgaoInativo: false,\n      setorInativo: false,\n      incorporacaoId: null,\n      nomeTela: 'INCORPORACAO_DADOS_GERAIS',\n      labelBtnCancel: 'Remover',\n      cpfCnpj: '',\n      rotaRedirecionamento: '',\n      placeholders: {\n        date: '__/__/____',\n        numeroNotaLancamentoContabil: '____NL_____'\n      }\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setaIncorporacaoId();\n              _context.next = 3;\n              return this.buscaIncorporacao();\n\n            case 3:\n              this.trataCamposReconhecimentoFornecedor();\n              this.trataCampoComodante();\n              this.trataCamposOrgaoSetor();\n              this.verificarSePodeProsseguir();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: _objectSpread(_objectSpread({}, mapGetters(['getObrigatorioRotulosPersonalizados', 'getIncorporacaoValidado'])), {}, {\n    verificaPermissaoRetroativa: function verificaPermissaoRetroativa() {\n      return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Retroativo']);\n    },\n    dataPermitida: function dataPermitida() {\n      var date = new Date();\n      return new Date(date.getFullYear(), date.getMonth(), 1);\n    },\n    podeContinuar: function podeContinuar() {\n      if (this.empenhoObrigatorio) {\n        if (!this.verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos()) {\n          return false;\n        }\n      }\n\n      return this.getIncorporacaoValidado(this.dadosDeEntrada, this.dadosDeEntrada.origemConvenio, this.dadosDeEntrada.origemFundo, this.dadosDeEntrada.origemProjeto, this.dadosDeEntrada.origemComodato, this.notaObrigatorio, this.nomeTela);\n    }\n  }),\n  filters: {\n    fornecedorFilter: function fornecedorFilter(fornecedor, fornecedores) {\n      if (_typeof(fornecedor) == 'object') {\n        return fornecedor.nome;\n      } else {\n        var encontrados = fornecedores.filter(function (f) {\n          return f.id === fornecedor;\n        });\n        return encontrados.length > 0 ? encontrados[0].nome : '';\n      }\n    }\n  },\n  watch: {\n    buscarConvenioDinamicamente: function buscarConvenioDinamicamente(val) {\n      var _this = this;\n\n      if (val) {\n        if (this.estaBuscandoConvenios) return;\n\n        if (val.length > 1) {\n          this.desabilitarLoadingGlobal();\n          this.estaBuscandoConvenios = true;\n          this.$store.dispatch(actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_DINAMICAMENTE, val).then(function (resultado) {\n            _this.convenios = resultado.items;\n            _this.estaBuscandoConvenios = false;\n\n            _this.habilitarLoadingGlobal();\n          });\n        }\n      } else {\n        this.dadosDeEntrada.convenio = null;\n        this.convenios = [];\n      }\n    },\n    buscaFornecedorDinamicamente: function buscaFornecedorDinamicamente(val) {\n      var _this2 = this;\n\n      if (!this.dadosDeEntrada.fornecedor) {\n        if (val !== this.cpfCnpj) {\n          this.fornecedorSelecionado = false;\n        }\n\n        if (val) {\n          if (this.estaBuscandoFornecedores) return;\n\n          if (val.length > 1) {\n            this.desabilitarLoadingGlobal();\n            this.estaBuscandoFornecedores = true;\n            this.$store.dispatch(actionTypes.COMUM.BUSCAR_FORNECEDORES, val).then(function (resultado) {\n              _this2.fornecedores = resultado.items;\n              _this2.estaBuscandoFornecedores = false;\n\n              _this2.habilitarLoadingGlobal();\n            });\n          }\n        } else {\n          this.dadosDeEntrada.fornecedor = null;\n          this.fornecedores = [];\n        }\n      }\n    },\n    buscarComodantesDinamicamente: function buscarComodantesDinamicamente(val) {\n      var _this3 = this;\n\n      if (val) {\n        if (this.estaBuscandoComodantes) return;\n\n        if (val.length > 1) {\n          this.desabilitarLoadingGlobal();\n          this.estaBuscandoComodantes = true;\n          this.$store.dispatch(actionTypes.COMODATO.BUSCAR_COMODANTES_DINAMICAMENTE, val).then(function (resultado) {\n            _this3.comodantes = resultado.items;\n            _this3.estaBuscandoComodantes = false;\n\n            _this3.habilitarLoadingGlobal();\n          });\n        }\n      } else {\n        this.dadosDeEntrada.comodante = null;\n        this.comodantes = [];\n      }\n    },\n    'dadosDeEntrada.reconhecimento': function dadosDeEntradaReconhecimento() {\n      this.verificaSeEmpenhoEOuNotaObrigatorio();\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions([actionTypes.COMUM.BUSCAR_FUNDOS, actionTypes.COMUM.BUSCAR_TODOS_ORGAOS, actionTypes.COMUM.BUSCAR_SETORES_ALMOXARIFADO, actionTypes.CONFIGURACAO.RECONHECIMENTO.BUSCAR_RECONHECIMENTOS_AUTO_COMPLETE, actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.BUSCAR_TODOS_EMPENHOS, actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.INSERIR_EMPENHO, actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_POR_ID, actionTypes.PATRIMONIO.INCORPORACAO.BUSCAR_INCORPORACAO_POR_ID, actionTypes.PATRIMONIO.INCORPORACAO.ATUALIZAR_INCORPORACAO, actionTypes.PATRIMONIO.INCORPORACAO.DELETAR_INCORPORACAO])), {}, {\n    adicionarNovoEmpenho: function adicionarNovoEmpenho() {\n      if (this.empenhos.length < 10) {\n        var empenhoVazio = {\n          incorporacaoId: this.incorporacaoId\n        };\n        this.empenhos.unshift(empenhoVazio);\n      }\n    },\n    removerEmpenho: function removerEmpenho(empenhoId) {\n      this.empenhos = this.empenhos.filter(function (entity) {\n        return entity.id !== empenhoId;\n      });\n      this.verificarSePodeProsseguir();\n    },\n    buscaEmpenhos: function () {\n      var _buscaEmpenhos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.buscarTodosEmpenhos(this.incorporacaoId);\n\n              case 2:\n                resultado = _context2.sent;\n\n                if (resultado && resultado.items.length > 0) {\n                  this.empenhos = resultado.items;\n                }\n\n                this.verificarSePodeProsseguir();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function buscaEmpenhos() {\n        return _buscaEmpenhos.apply(this, arguments);\n      }\n\n      return buscaEmpenhos;\n    }(),\n    buscaIncorporacao: function () {\n      var _buscaIncorporacao = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.buscarIncorporacaoPorId(this.incorporacaoId);\n\n              case 2:\n                this.dadosDeEntrada = _context3.sent;\n                this.incorporacao = Object.assign({}, this.dadosDeEntrada);\n                _context3.next = 6;\n                return Axios.all([this.buscarReconhecimentos(), this.buscarConvenio(), this.buscaEmpenhos(), this.buscarTodosFundos(), this.buscarUnidadesOrganizacionais()]);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function buscaIncorporacao() {\n        return _buscaIncorporacao.apply(this, arguments);\n      }\n\n      return buscaIncorporacao;\n    }(),\n    trataCamposReconhecimentoFornecedor: function trataCamposReconhecimentoFornecedor() {\n      this.trataCampoReconhecimento();\n      this.trataCampoFornecedor();\n    },\n    trataCamposOrgaoSetor: function trataCamposOrgaoSetor() {\n      this.trataCampoOrgao();\n      this.trataCampoSetor();\n    },\n    trataCampoReconhecimento: function trataCampoReconhecimento() {\n      if (this.dadosDeEntrada && this.dadosDeEntrada.reconhecimento) {\n        if (this.dadosDeEntrada.reconhecimento.situacao === 'INATIVO') {\n          this.dadosDeEntrada.reconhecimento.disabled = true;\n          this.reconhecimentoInativo = true;\n          this.reconhecimentos.unshift(this.dadosDeEntrada.reconhecimento);\n        } else if (this.dadosDeEntrada.reconhecimento.situacao === 'ATIVO') {\n          this.reconhecimentoInativo = false;\n        }\n      }\n    },\n    trataCampoFornecedor: function trataCampoFornecedor() {\n      if (this.dadosDeEntrada && this.dadosDeEntrada.fornecedor) {\n        if (this.dadosDeEntrada.fornecedor.situacao === 'INATIVO') {\n          this.dadosDeEntrada.fornecedor.disabled = true;\n          this.fornecedorInativo = true;\n          this.fornecedores.unshift(this.dadosDeEntrada.fornecedor);\n        } else if (this.dadosDeEntrada.fornecedor.situacao === 'ATIVO') {\n          this.fornecedorInativo = false;\n          this.fornecedores.push(this.dadosDeEntrada.fornecedor);\n        }\n      }\n    },\n    trataCampoComodante: function trataCampoComodante() {\n      if (this.dadosDeEntrada.comodante) {\n        this.comodantes.push(this.dadosDeEntrada.comodante);\n      }\n    },\n    trataCampoOrgao: function trataCampoOrgao() {\n      if (this.dadosDeEntrada && this.dadosDeEntrada.orgao) {\n        if (this.dadosDeEntrada.orgao.situacao === 'INATIVO') {\n          this.dadosDeEntrada.orgao.disabled = true;\n          this.orgaoInativo = true;\n          this.orgaos.unshift(this.dadosDeEntrada.orgao);\n        } else if (this.dadosDeEntrada.orgao.situacao === 'ATIVO') {\n          this.orgaoInativo = false;\n        }\n      }\n    },\n    trataCampoSetor: function trataCampoSetor() {\n      if (this.dadosDeEntrada && this.dadosDeEntrada.setor) {\n        if (this.dadosDeEntrada.setor.situacao === 'INATIVO') {\n          this.dadosDeEntrada.setor.disabled = true;\n          this.setorInativo = true;\n          this.setores.unshift(this.dadosDeEntrada.setor);\n        } else if (this.dadosDeEntrada.setor.situacao === 'ATIVO') {\n          this.setorInativo = false;\n        }\n      }\n    },\n    buscarConvenio: function () {\n      var _buscarConvenio = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var convenio;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.dadosDeEntrada.convenio) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.buscarConvenioPorId(this.dadosDeEntrada.convenio);\n\n              case 3:\n                convenio = _context4.sent;\n                this.dadosDeEntrada.convenio = convenio.id;\n                this.convenios.push(convenio);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function buscarConvenio() {\n        return _buscarConvenio.apply(this, arguments);\n      }\n\n      return buscarConvenio;\n    }(),\n    buscarReconhecimentos: function () {\n      var _buscarReconhecimentos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.setMensagemLoading('Carregando...');\n                _context5.next = 3;\n                return this.buscarReconhecimentosAutoComplete();\n\n              case 3:\n                resultado = _context5.sent;\n                this.reconhecimentos = resultado.items;\n                this.verificaSeEmpenhoEOuNotaObrigatorio();\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function buscarReconhecimentos() {\n        return _buscarReconhecimentos.apply(this, arguments);\n      }\n\n      return buscarReconhecimentos;\n    }(),\n    editarIncorporacao: function () {\n      var _editarIncorporacao = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var dadosAtualizados;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.desabilitarLoadingGlobal();\n                this.verificarSeFornecedorSelecionado();\n                _context6.prev = 2;\n                _context6.next = 5;\n                return this.atualizarIncorporacao(this.dadosDeEntrada);\n\n              case 5:\n                dadosAtualizados = _context6.sent;\n                this.setarDadosAtualizados(dadosAtualizados);\n                _context6.next = 15;\n                break;\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](2);\n                this.mostrarNotificacaoErro(_context6.t0.response.data.message);\n                this.$store.commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING);\n                _context6.next = 15;\n                return this.buscaIncorporacao();\n\n              case 15:\n                this.atualizaDadosAposEdicao(this.dadosDeEntrada);\n                this.verificarSePodeProsseguir();\n                this.trataCamposReconhecimentoFornecedor();\n                this.trataCamposOrgaoSetor();\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 9]]);\n      }));\n\n      function editarIncorporacao() {\n        return _editarIncorporacao.apply(this, arguments);\n      }\n\n      return editarIncorporacao;\n    }(),\n    atualizaDadosAposEdicao: function atualizaDadosAposEdicao(resultado) {\n      this.dadosDeEntrada.fornecedor = resultado.fornecedor;\n      this.dadosDeEntrada.reconhecimento = resultado.reconhecimento;\n      this.dadosDeEntrada.orgao = resultado.orgao;\n      this.dadosDeEntrada.setor = resultado.setor;\n      this.dadosDeEntrada.projeto = resultado.projeto;\n      this.dadosDeEntrada.comodante = resultado.comodante;\n    },\n    filtroComboAutoComplete: function filtroComboAutoComplete(item, queryText) {\n      var text = item.nome.toLowerCase();\n      var searchText = queryText.toLowerCase();\n      return text.indexOf(searchText) > -1;\n    },\n    verificarSeFornecedorSelecionado: function verificarSeFornecedorSelecionado() {\n      if (this.dadosDeEntrada.fornecedor !== null) {\n        this.fornecedorSelecionado = true;\n      }\n    },\n    atualizarValorInserido: function atualizarValorInserido(valor) {\n      this.dadosDeEntrada.valorNota = valor;\n      this.editarIncorporacao();\n    },\n    formataCnpj: function formataCnpj() {\n      var cnpj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      cnpj = cnpj.replace(/\\D/g, '');\n      cnpj = cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n      return cnpj;\n    },\n    verificarSePodeProsseguir: function verificarSePodeProsseguir() {\n      if (this.podeContinuar) {\n        this.$emit('habilitaPasso2');\n      } else {\n        this.$emit('desabilitaPasso2');\n      }\n    },\n    verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos: function verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos() {\n      return this.empenhos.every(function (empenho) {\n        return empenho.numeroEmpenho && empenho.dataEmpenho && empenho.valorEmpenho && empenho.valorEmpenho !== 0;\n      });\n    },\n    selecionarReconhecimento: function selecionarReconhecimento() {\n      var _this4 = this;\n\n      return this.reconhecimentos.filter(function (reconhecimento) {\n        return reconhecimento.id === _this4.dadosDeEntrada.reconhecimento.id;\n      });\n    },\n    verificaSeEmpenhoEOuNotaObrigatorio: function verificaSeEmpenhoEOuNotaObrigatorio() {\n      if (this.dadosDeEntrada.reconhecimento !== null) {\n        var reconhecimentoSelecionado = this.selecionarReconhecimento();\n\n        if (reconhecimentoSelecionado.length > 0) {\n          this.empenhoObrigatorio = reconhecimentoSelecionado[0].empenho;\n          this.notaObrigatorio = reconhecimentoSelecionado[0].notaFiscal;\n        }\n      }\n\n      this.verificarSePodeProsseguir();\n    },\n    buscarUnidadesOrganizacionais: function () {\n      var _buscarUnidadesOrganizacionais = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.buscarOrgaos();\n\n              case 2:\n                _context7.next = 4;\n                return this.buscarSetores();\n\n              case 4:\n                if (!this.orgaos) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                if (!(this.verificaSeArrayContemApenasUmOrgao(this.orgaos) || this.verificaSeArrayContemApenasUmSetor(this.setores))) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                this.selecionaOrgaoSeArrayConterApenasUmOrgao(this.orgaos);\n                this.selecionaSetorSeArrayConterApenasUmSetor(this.setores);\n                _context7.next = 10;\n                return this.editarIncorporacao();\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function buscarUnidadesOrganizacionais() {\n        return _buscarUnidadesOrganizacionais.apply(this, arguments);\n      }\n\n      return buscarUnidadesOrganizacionais;\n    }(),\n    selecionaOrgao: function () {\n      var _selecionaOrgao = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(orgao) {\n        var _yield$Axios$all, _yield$Axios$all2, setores, fundos;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.desabilitarLoadingGlobal();\n                this.dadosDeEntrada.setor = null;\n                this.setores = [];\n\n                if (!orgao) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                _context8.next = 6;\n                return Axios.all([this.buscarSetoresAlmoxarifado(orgao), this.buscarFundos(orgao)]);\n\n              case 6:\n                _yield$Axios$all = _context8.sent;\n                _yield$Axios$all2 = _slicedToArray(_yield$Axios$all, 2);\n                setores = _yield$Axios$all2[0];\n                fundos = _yield$Axios$all2[1];\n                this.setores = setores.items;\n                this.selecionaSetorSeArrayConterApenasUmSetor(this.setores);\n                this.fundos = fundos.items;\n                this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos);\n                _context8.next = 16;\n                return this.editarIncorporacao();\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function selecionaOrgao(_x) {\n        return _selecionaOrgao.apply(this, arguments);\n      }\n\n      return selecionaOrgao;\n    }(),\n    selecionaFundo: function () {\n      var _selecionaFundo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos);\n                _context9.next = 3;\n                return this.editarIncorporacao();\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function selecionaFundo() {\n        return _selecionaFundo.apply(this, arguments);\n      }\n\n      return selecionaFundo;\n    }(),\n    buscarSetores: function () {\n      var _buscarSetores = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!this.dadosDeEntrada.orgao) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                _context10.next = 3;\n                return this.buscarSetoresAlmoxarifado(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao);\n\n              case 3:\n                resultado = _context10.sent;\n                this.setores = resultado.items;\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function buscarSetores() {\n        return _buscarSetores.apply(this, arguments);\n      }\n\n      return buscarSetores;\n    }(),\n    buscarOrgaos: function () {\n      var _buscarOrgaos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.buscarTodosOrgaos();\n\n              case 2:\n                resultado = _context11.sent;\n                this.orgaos = resultado.items;\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function buscarOrgaos() {\n        return _buscarOrgaos.apply(this, arguments);\n      }\n\n      return buscarOrgaos;\n    }(),\n    buscarTodosFundos: function () {\n      var _buscarTodosFundos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (!this.dadosDeEntrada.orgao) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                _context12.next = 3;\n                return this.buscarFundos(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao);\n\n              case 3:\n                resultado = _context12.sent;\n                this.fundos = resultado.items;\n\n                if (!this.verificaSeArrayContemApenasUmFundo(this.fundos)) {\n                  _context12.next = 9;\n                  break;\n                }\n\n                this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos);\n                _context12.next = 9;\n                return this.editarIncorporacao();\n\n              case 9:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function buscarTodosFundos() {\n        return _buscarTodosFundos.apply(this, arguments);\n      }\n\n      return buscarTodosFundos;\n    }(),\n    selecionaSetorSeArrayConterApenasUmSetor: function selecionaSetorSeArrayConterApenasUmSetor(setores) {\n      if (this.verificaSeArrayContemApenasUmSetor(setores)) {\n        this.dadosDeEntrada.setor = setores[0].id;\n      }\n    },\n    selecionaFundoSeArrayConterApenasUmFundo: function selecionaFundoSeArrayConterApenasUmFundo(fundos) {\n      if (this.verificaSeArrayContemApenasUmFundo(fundos)) {\n        this.dadosDeEntrada.fundo = fundos[0].id;\n      }\n    },\n    selecionaOrgaoSeArrayConterApenasUmOrgao: function selecionaOrgaoSeArrayConterApenasUmOrgao(orgaos) {\n      if (this.verificaSeArrayContemApenasUmOrgao(orgaos)) {\n        this.dadosDeEntrada.orgao = orgaos[0].id;\n      }\n    },\n    filtroAutocompleteFornecedores: function filtroAutocompleteFornecedores(item, queryText) {\n      var textOne = item.nome.toLowerCase();\n      var searchText = queryText.toLowerCase();\n\n      if (item.cpfCnpj) {\n        var textTwo = item.cpfCnpj;\n        return textOne.indexOf(searchText) > -1 || textTwo.indexOf(searchText) > -1;\n      }\n\n      return textOne.indexOf(searchText) > -1;\n    },\n    removerFornecedor: function removerFornecedor() {\n      this.dadosDeEntrada.fornecedor = null;\n      this.editarIncorporacao();\n    },\n    removerIncorporacao: function () {\n      var _removerIncorporacao = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                _context13.next = 3;\n                return this.deletarIncorporacao(this.dadosDeEntrada.id);\n\n              case 3:\n                _context13.next = 8;\n                break;\n\n              case 5:\n                _context13.prev = 5;\n                _context13.t0 = _context13[\"catch\"](0);\n                this.mostrarNotificacaoErro(_context13.t0.response.data.message);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[0, 5]]);\n      }));\n\n      function removerIncorporacao() {\n        return _removerIncorporacao.apply(this, arguments);\n      }\n\n      return removerIncorporacao;\n    }(),\n    tratarEventoVoltar: function tratarEventoVoltar() {\n      this.$router.replace({\n        name: 'IncorporacaoListagem'\n      });\n    },\n    tratarEventoContinuar: function tratarEventoContinuar() {\n      this.$router.replace({\n        name: 'ItensIncorporacaoListagem',\n        params: {\n          incorporacaoId: this.incorporacaoId\n        }\n      });\n    },\n    setarDadosAtualizados: function setarDadosAtualizados(dados) {\n      this.verificarMudancasPropriedades(dados, this.incorporacao, this.dadosDeEntrada);\n    },\n    verificaSeArrayContemApenasUmOrgao: function verificaSeArrayContemApenasUmOrgao(orgaos) {\n      return orgaos.length === 1 && !this.dadosDeEntrada.orgao;\n    },\n    verificaSeArrayContemApenasUmSetor: function verificaSeArrayContemApenasUmSetor(setores) {\n      return setores.length === 1 && !this.dadosDeEntrada.setor;\n    },\n    verificaSeArrayContemApenasUmFundo: function verificaSeArrayContemApenasUmFundo(fundos) {\n      return fundos.length === 1 && !this.dadosDeEntrada.fundo;\n    },\n    obterLarguraAutoComplete: function obterLarguraAutoComplete(ref) {\n      if (this.$refs[ref] && this.$refs[ref].$el) {\n        return {\n          width: this.$refs[ref].$el.clientWidth - 30 + 'px'\n        };\n      }\n\n      return {};\n    },\n    setaIncorporacaoId: function setaIncorporacaoId() {\n      this.incorporacaoId = this.$route.params.incorporacaoId;\n    }\n  }),\n  beforeRouteLeave: function () {\n    var _beforeRouteLeave = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(to, from, next) {\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              if (!(this.dadosDeEntrada && this.dadosDeEntrada.id && !this.dadosDeEntrada.reconhecimento && this.rotaRedirecionamento !== to.name)) {\n                _context14.next = 4;\n                break;\n              }\n\n              this.rotaRedirecionamento = to.name;\n              _context14.next = 4;\n              return this.removerIncorporacao();\n\n            case 4:\n              next();\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, this);\n    }));\n\n    function beforeRouteLeave(_x2, _x3, _x4) {\n      return _beforeRouteLeave.apply(this, arguments);\n    }\n\n    return beforeRouteLeave;\n  }()\n};",{"version":3,"sources":["DadosGerais.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-form class=\"az-form-content pb-0\" ref=\"form\">\n            <v-container class=\"white form-dados-gerais\" fluid>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.reconhecimento\"\n                            ref=\"autoCompleteReconhecimento\"\n                            name=\"reconhecimento\"\n                            placeholder=\"Selecione o reconhecimento\"\n                            v-validate=\"'required'\"\n                            :items=\"reconhecimentos\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :error-messages=\"errors.collect('reconhecimento')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"reconhecimento\" :tela=\"nomeTela\" apresentaTooltip obrigatorioPorPadrao/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label :style=\"obterLarguraAutoComplete('autoCompleteReconhecimento')\"\n                                       class=\"auto-complete-item-text text-truncate cursor__pointer\">{{data.item.nome}}</label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"reconhecimentoInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este reconhecimento foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.numProcesso\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número do processo\"\n                            placeholder=\"Informe o número\"\n                            maxlength=\"30\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('numProcesso', nomeTela)?'required|max:30' : 'max:30'\"\n                            :error-messages=\"errors.collect('número do processo')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"numProcesso\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            style=\"max-height:35px;\"\n                            v-model=\"dadosDeEntrada.fornecedor\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :items=\"fornecedores\"\n                            :loading=\"estaBuscandoFornecedores\"\n                            :return-object=\"false\"\n                            :search-input.sync=\"buscaFornecedorDinamicamente\"\n                            ref=\"autoCompleteFornecedor\"\n                            :filter=\"filtroAutocompleteFornecedores\"\n                            item-text=\"cpfCnpj\"\n                            item-value=\"id\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('fornecedor', nomeTela)? 'required' : ''\"\n                            name=\"CNPJ Fornecedor\"\n                            :error-messages=\"errors.collect('CNPJ Fornecedor')\"\n                            no-data-text=\"Não há fornecedores com este CPF/CNPJ\"\n                            placeholder=\"Informe a razão social ou o CPF/CNPJ\"\n                            @blur=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"fornecedor\" :tela=\"nomeTela\"/>\n                            </template>\n                            <template slot=\"item\" slot-scope=\"data\">\n                                <span :style=\"obterLarguraAutoComplete('autoCompleteFornecedor')\"\n                                      class=\"text-truncate\">{{ formataCnpj(data.item.cpfCnpj) }} - {{ data.item.nome }}</span>\n                            </template>\n                            <template v-slot:append-outer v-if=\"fornecedorInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este fornecedor foi inativado, por favor selecione outro!\"/>\n                            </template>\n                            <template v-slot:append v-if=\"dadosDeEntrada.fornecedor\">\n                                <v-tooltip top>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-icon v-on=\"on\" class=\"pr-3 pt-1\" small @click=\"removerFornecedor\">fas fa-times</v-icon>\n                                    </template>\n                                    {{ labelBtnCancel }}\n                                </v-tooltip>\n                            </template>\n                        </v-autocomplete>\n                        <az-text-view\n                            :text=\"dadosDeEntrada.fornecedor ? $options.filters.fornecedorFilter(dadosDeEntrada.fornecedor, fornecedores) : ''\" class=\"mt-2\"/>\n                    </v-col>\n                </v-row>\n                <div class=\"empenhoBorder\">\n                    <empenho v-for=\"(empenho, index) in empenhos\" :key=\"empenho.id\"\n                             :value=\"empenho\"\n                             :idIncorporacao=\"dadosDeEntrada.id\"\n                             :quantidadeEmpenhos=\"empenhos.length\"\n                             :primeiroEmpenho=\"index === 0\"\n                             :obrigatorio=\"empenhoObrigatorio\"\n                             :status-reconhecimento=\"!dadosDeEntrada.reconhecimento\"\n                             @adicionarNovoEmpenho=\"adicionarNovoEmpenho\"\n                             @buscarEmpenhos=\"buscaEmpenhos\"\n                             @removerEmpenho=\"removerEmpenho\"\n                             @atualizarIncorporacao=\"editarIncorporacao\"/>\n                </div>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.nota\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número da nota\"\n                            placeholder=\"Informe o número\"\n                            maxlength=\"30\"\n                            v-validate=\"notaObrigatorio ? 'required|max:30' : 'max:30'\"\n                            :error-messages=\"errors.collect('número da nota')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"nota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataNota\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"data nota\"\n                            date\n                            :is-required=\"notaObrigatorio\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            @input=\"editarIncorporacao\"\n                            :placeholderDate=\"(dadosDeEntrada.dataNota) ? ' ' : placeholders.date\"\n                            :error-messages=\"errors.collect('data nota')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataNota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-money\n                            v-if=\"dadosDeEntrada.id\"\n                            v-model=\"dadosDeEntrada.valorNota\"\n                            :maxLength=\"18\"\n                            :event-submit=\"'blur'\"\n                            :required=\"notaObrigatorio\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            class=\"botaoExcluirMoney\"\n                            placeholder=\"Informe o valor\"\n                            @input=\"atualizarValorInserido($event)\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"valorNota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-money>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.orgao\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            no-data-text=\"Não há órgãos com este nome\"\n                            name=\"orgaoResponsavel\"\n                            ref=\"autoCompleteOrgao\"\n                            v-validate=\"'required'\"\n                            :items=\"orgaos\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            placeholder=\"Selecione o órgão responsável\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :error-messages=\"!dadosDeEntrada.orgao ? errors.collect('orgaoResponsavel') : ''\"\n                            @change=\"selecionaOrgao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"orgao\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label\n                                    :style=\"obterLarguraAutoComplete('autoCompleteOrgao')\"\n                                    class=\"uo__autocomplete cursor__pointer text-truncate\">\n                                    {{data.item.descricao}}\n                                </label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"orgaoInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este órgão foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.setor\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            name=\"setor\"\n                            ref=\"autoCompleteSetor\"\n                            no-data-text=\"Não há setores com este nome\"\n                            :placeholder=\"dadosDeEntrada.orgao ? 'Selecione o setor' : ' '\"\n                            :disabled=\"!dadosDeEntrada.orgao\"\n                            :items=\"setores\"\n                            :error-messages=\"!dadosDeEntrada.setor ? errors.collect('setor') : ''\"\n                            v-validate=\"dadosDeEntrada.orgao ? 'required' : ''\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"setor\" :tela=\"nomeTela\" :permissaoEdicao=\"!!dadosDeEntrada.orgao\"\n                                                     obrigatorioPorPadrao apresentaTooltip/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label\n                                    :style=\"obterLarguraAutoComplete('autoCompleteSetor')\"\n                                    class=\"uo__autocomplete cursor__pointer text-truncate\">\n                                    {{data.item.descricao}}\n                                </label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"setorInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este setor foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataRecebimento\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"recebimento\"\n                            date\n                            v-validate=\"'required'\"\n                            @input=\"editarIncorporacao\"\n                            :min-date=\"verificaPermissaoRetroativa ? '' : moment(dataPermitida).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            :placeholderDate=\"(dadosDeEntrada.dataRecebimento) ? ' ' : placeholders.date\"\n                            :is-required=\"true\"\n                            :error-messages=\"errors.collect('recebimento')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataRecebimento\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.numeroNotaLancamentoContabil\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número da NL\"\n                            :placeholder=\"placeholders.numeroNotaLancamentoContabil\"\n                            maxlength=\"12\"\n                            v-mask=\"'####NL######'\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('numeroNotaLancamentoContabil', nomeTela)?'required|max:12' : 'max:12'\"\n                            :error-messages=\"errors.collect('número da NL')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"numeroNotaLancamentoContabil\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataNotaLancamentoContabil\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"data da NL\"\n                            date\n                            :is-required=\"getObrigatorioRotulosPersonalizados('dataNotaLancamentoContabil', nomeTela)\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            @input=\"editarIncorporacao\"\n                            :placeholderDate=\"(dadosDeEntrada.dataNotaLancamentoContabil) ? ' ' : placeholders.date\"\n                            :error-messages=\"errors.collect('data da NL')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataNotaLancamentoContabil\" :tela=\"nomeTela\"/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" class=\"pt-0\">\n                        <p class=\"titulo_checkbox pb-0\"><label-personalizado campo=\"origem\" :tela=\"nomeTela\" :apenasNome=\"true\"/></p>\n                        <v-row class=\"checkbox_input tamanhoCheckbox\">\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemConvenio\"\n                                    @change=\"editarIncorporacao\"\n                                    label=\"Convênio\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"tamanhoCheckbox\"/>\n                            </v-col>\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemFundo\"\n                                    label=\"Fundo\"\n                                    @change=\"selecionaFundo\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"checkbox__fundo\"/>\n                            </v-col>\n                           <v-col cols=\"3\">\n                               <v-checkbox\n                                   v-model=\"dadosDeEntrada.origemProjeto\"\n                                   label=\"Projeto\"\n                                   @change=\"editarIncorporacao\"\n                                   :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                   class=\"checkbox__projeto\"/>\n                           </v-col>\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemComodato\"\n                                    label=\"Comodato\"\n                                    @change=\"editarIncorporacao\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"checkbox__comodato\"/>\n                            </v-col>\n                        </v-row>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemConvenio\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.convenio\"\n                            name=\"convenio\"\n                            placeholder=\"Pesquise pelo nome do convênio\"\n                            v-validate=\"(dadosDeEntrada.origemConvenio && getObrigatorioRotulosPersonalizados('convenio', nomeTela)) ? 'required' : ''\"\n                            :items=\"convenios\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            hide-no-data\n                            hide-selected\n                            @change=\"editarIncorporacao\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :search-input.sync=\"buscarConvenioDinamicamente\"\n                            :error-messages=\"errors.collect('convenio')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"convenio\" :tela=\"nomeTela\"/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label class=\"auto-complete-item-text\">{{data.item.nome}}</label>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemFundo\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.fundo\"\n                            name=\"fundo\"\n                            :placeholder=\"dadosDeEntrada.orgao ? 'Selecione o fundo' : ' '\"\n                            v-validate=\"(dadosDeEntrada.origemFundo && getObrigatorioRotulosPersonalizados('fundo', nomeTela)) ? 'required' : ''\"\n                            :items=\"fundos\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            :disabled=\"!dadosDeEntrada.orgao || !this.dadosDeEntrada.reconhecimento\"\n                            @change=\"editarIncorporacao\"\n                            :error-messages=\"errors.collect('fundo')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"fundo\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemProjeto\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.projeto\"\n                            name=\"projeto\"\n                            maxlength=\"100\"\n                            placeholder=\"Informe o projeto\"\n                            v-validate=\"(dadosDeEntrada.origemProjeto && getObrigatorioRotulosPersonalizados('projeto', nomeTela)) ? 'required' : ''\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            @change=\"editarIncorporacao\"\n                            :error-messages=\"errors.collect('projeto')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"projeto\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemComodato\">\n                        <v-autocomplete\n                            style=\"max-height:47px;\"\n                            v-model=\"dadosDeEntrada.comodante\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :items=\"comodantes\"\n                            :loading=\"estaBuscandoComodantes\"\n                            :return-object=\"false\"\n                            :search-input.sync=\"buscarComodantesDinamicamente\"\n                            :filter=\"filtroComboAutoComplete\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            v-validate=\"!!(dadosDeEntrada.origemComodato && getObrigatorioRotulosPersonalizados('comodante', nomeTela)) ? 'required' : ''\"\n                            name=\"Comodante\"\n                            :error-messages=\"errors.collect('Comodante')\"\n                            no-data-text=\"Não existe comodante cadastrado com este nome\"\n                            placeholder=\"Pesquise pelo nome do comodante\"\n                            @blur=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"comodante\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-form>\n        <acoes-botoes-continuar-voltar :controleContinuar=\"podeContinuar\" @voltar=\"tratarEventoVoltar\" @continuar=\"tratarEventoContinuar\"/>\n    </div>\n</template>\n\n<script>\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import Empenho from '@/views/components/empenho/Empenho'\n    import {createNamespacedHelpers, mapActions} from 'vuex'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import TooltipCamposInativos from '@/views/components/tooltip/TooltipCamposInativos'\n    import LabelPersonalizado from '@/views/components/label/LabelPersonalizado'\n    import AcoesBotoesContinuarVoltar from '@/views/components/acoes/AcoesBotoesContinuarVoltar'\n    import Axios from 'axios'\n\n    const {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n\n    export default {\n        name: 'dadosGerais',\n        components: {TooltipCamposInativos, Empenho, LabelPersonalizado, AcoesBotoesContinuarVoltar},\n        data() {\n            return {\n                dadosDeEntrada: {},\n                incorporacao: {},\n                empenhos: [{incorporacaoId: this.$route.params.incorporacaoId}],\n                reconhecimentos: [],\n                fornecedores: [],\n                comodantes: [],\n                convenios: [],\n                fundos: [],\n                orgaos: [],\n                setores: [],\n                buscaFornecedorDinamicamente: null,\n                buscarConvenioDinamicamente: null,\n                buscarComodantesDinamicamente: null,\n                estaBuscandoFornecedores: false,\n                estaBuscandoConvenios: false,\n                estaBuscandoComodantes: false,\n                cnpjPesquisadoContemMascara: false,\n                fornecedorSelecionado: true,\n                empenhoObrigatorio: false,\n                notaObrigatorio: false,\n                reconhecimentoInativo: false,\n                fornecedorInativo: false,\n                orgaoInativo: false,\n                setorInativo: false,\n                incorporacaoId: null,\n                nomeTela: 'INCORPORACAO_DADOS_GERAIS',\n                labelBtnCancel: 'Remover',\n                cpfCnpj: '',\n                rotaRedirecionamento: '',\n                placeholders: {\n                    date: '__/__/____',\n                    numeroNotaLancamentoContabil: '____NL_____'\n                }\n            }\n        },\n        async mounted() {\n            this.setaIncorporacaoId()\n            await this.buscaIncorporacao()\n            this.trataCamposReconhecimentoFornecedor()\n            this.trataCampoComodante()\n            this.trataCamposOrgaoSetor()\n            this.verificarSePodeProsseguir()\n        },\n        computed: {\n            ...mapGetters([\n                'getObrigatorioRotulosPersonalizados',\n                'getIncorporacaoValidado'\n            ]),\n            verificaPermissaoRetroativa() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Retroativo'])\n            },\n            dataPermitida() {\n                let date = new Date()\n                return new Date(date.getFullYear(), date.getMonth(), 1)\n            },\n            podeContinuar() {\n                if(this.empenhoObrigatorio){\n                    if(!this.verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos()){\n                        return false\n                    }\n                }\n                return this.getIncorporacaoValidado(this.dadosDeEntrada,\n                                                    this.dadosDeEntrada.origemConvenio,\n                                                    this.dadosDeEntrada.origemFundo,\n                                                    this.dadosDeEntrada.origemProjeto,\n                                                    this.dadosDeEntrada.origemComodato,\n                                                    this.notaObrigatorio,\n                                                    this.nomeTela)\n            }\n        },\n        filters: {\n            fornecedorFilter(fornecedor, fornecedores) {\n                if (typeof fornecedor == 'object') {\n                    return fornecedor.nome\n                } else {\n                    const encontrados = fornecedores.filter(f => f.id === fornecedor)\n                    return encontrados.length > 0 ? encontrados[0].nome : ''\n                }\n            },\n        },\n        watch: {\n            buscarConvenioDinamicamente(val) {\n                if (val) {\n                    if (this.estaBuscandoConvenios) return\n                    if (val.length > 1) {\n                        this.desabilitarLoadingGlobal()\n                        this.estaBuscandoConvenios = true\n\n                        this.$store.dispatch(actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_DINAMICAMENTE, val)\n                            .then(resultado => {\n                                this.convenios = resultado.items\n                                this.estaBuscandoConvenios = false\n                                this.habilitarLoadingGlobal()\n                            })\n                    }\n                } else {\n                    this.dadosDeEntrada.convenio = null\n                    this.convenios = []\n                }\n            },\n            buscaFornecedorDinamicamente(val) {\n                if(!this.dadosDeEntrada.fornecedor) {\n                    if (val !== this.cpfCnpj) {\n                        this.fornecedorSelecionado = false\n                    }\n                    if (val) {\n                        if (this.estaBuscandoFornecedores) return\n\n                        if (val.length > 1) {\n                            this.desabilitarLoadingGlobal()\n                            this.estaBuscandoFornecedores = true\n\n                            this.$store\n                                .dispatch(actionTypes.COMUM.BUSCAR_FORNECEDORES, val)\n                                .then(resultado => {\n                                    this.fornecedores = resultado.items\n\n                                    this.estaBuscandoFornecedores = false\n                                    this.habilitarLoadingGlobal()\n                                })\n                        }\n                    } else {\n                        this.dadosDeEntrada.fornecedor = null\n                        this.fornecedores = []\n                    }\n                }\n            },\n            buscarComodantesDinamicamente(val) {\n                if (val) {\n                    if (this.estaBuscandoComodantes) return\n                    if (val.length > 1) {\n                        this.desabilitarLoadingGlobal()\n                        this.estaBuscandoComodantes = true\n\n                        this.$store.dispatch(actionTypes.COMODATO.BUSCAR_COMODANTES_DINAMICAMENTE, val)\n                            .then(resultado => {\n                                this.comodantes = resultado.items\n                                this.estaBuscandoComodantes = false\n                                this.habilitarLoadingGlobal()\n                            })\n                    }\n                } else {\n                    this.dadosDeEntrada.comodante = null\n                    this.comodantes = []\n                }\n            },\n            'dadosDeEntrada.reconhecimento'() {\n                this.verificaSeEmpenhoEOuNotaObrigatorio()\n            }\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.COMUM.BUSCAR_FUNDOS,\n                actionTypes.COMUM.BUSCAR_TODOS_ORGAOS,\n                actionTypes.COMUM.BUSCAR_SETORES_ALMOXARIFADO,\n                actionTypes.CONFIGURACAO.RECONHECIMENTO.BUSCAR_RECONHECIMENTOS_AUTO_COMPLETE,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.BUSCAR_TODOS_EMPENHOS,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.INSERIR_EMPENHO,\n                actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_POR_ID,\n                actionTypes.PATRIMONIO.INCORPORACAO.BUSCAR_INCORPORACAO_POR_ID,\n                actionTypes.PATRIMONIO.INCORPORACAO.ATUALIZAR_INCORPORACAO,\n                actionTypes.PATRIMONIO.INCORPORACAO.DELETAR_INCORPORACAO\n            ]),\n            adicionarNovoEmpenho() {\n                if(this.empenhos.length<10){\n                    const empenhoVazio = {incorporacaoId: this.incorporacaoId}\n                    this.empenhos.unshift(empenhoVazio)\n                }\n            },\n            removerEmpenho(empenhoId) {\n                this.empenhos = this.empenhos.filter(entity => entity.id !== empenhoId)\n                this.verificarSePodeProsseguir()\n            },\n            async buscaEmpenhos() {\n                const resultado = await this.buscarTodosEmpenhos(this.incorporacaoId)\n                if (resultado && resultado.items.length > 0) {\n                    this.empenhos = resultado.items\n                }\n                this.verificarSePodeProsseguir()\n            },\n            async buscaIncorporacao() {\n                this.dadosDeEntrada = await this.buscarIncorporacaoPorId(this.incorporacaoId)\n                this.incorporacao = Object.assign({}, this.dadosDeEntrada)\n                await Axios.all([\n                    this.buscarReconhecimentos(),\n                    this.buscarConvenio(),\n                    this.buscaEmpenhos(),\n                    this.buscarTodosFundos(),\n                    this.buscarUnidadesOrganizacionais()\n                ])\n            },\n            trataCamposReconhecimentoFornecedor(){\n                this.trataCampoReconhecimento()\n                this.trataCampoFornecedor()\n            },\n            trataCamposOrgaoSetor(){\n                this.trataCampoOrgao()\n                this.trataCampoSetor()\n            },\n            trataCampoReconhecimento(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.reconhecimento){\n                    if(this.dadosDeEntrada.reconhecimento.situacao === 'INATIVO'){\n                        this.dadosDeEntrada.reconhecimento.disabled = true\n                        this.reconhecimentoInativo = true\n                        this.reconhecimentos.unshift(this.dadosDeEntrada.reconhecimento)\n                    }else if(this.dadosDeEntrada.reconhecimento.situacao === 'ATIVO'){\n                        this.reconhecimentoInativo = false\n                    }\n                }\n            },\n            trataCampoFornecedor(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.fornecedor) {\n                    if (this.dadosDeEntrada.fornecedor.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.fornecedor.disabled = true\n                        this.fornecedorInativo = true\n                        this.fornecedores.unshift(this.dadosDeEntrada.fornecedor)\n                    } else if(this.dadosDeEntrada.fornecedor.situacao === 'ATIVO') {\n                        this.fornecedorInativo = false\n                        this.fornecedores.push(this.dadosDeEntrada.fornecedor)\n                    }\n                }\n            },\n            trataCampoComodante(){\n                if(this.dadosDeEntrada.comodante){\n                    this.comodantes.push(this.dadosDeEntrada.comodante)\n                }\n            },\n            trataCampoOrgao(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.orgao) {\n                    if (this.dadosDeEntrada.orgao.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.orgao.disabled = true\n                        this.orgaoInativo = true\n                        this.orgaos.unshift(this.dadosDeEntrada.orgao)\n                    } else if(this.dadosDeEntrada.orgao.situacao === 'ATIVO'){\n                        this.orgaoInativo = false\n                    }\n                }\n            },\n            trataCampoSetor(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.setor) {\n                    if (this.dadosDeEntrada.setor.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.setor.disabled = true\n                        this.setorInativo = true\n                        this.setores.unshift(this.dadosDeEntrada.setor)\n                    } else if(this.dadosDeEntrada.setor.situacao === 'ATIVO'){\n                        this.setorInativo = false\n                    }\n                }\n            },\n            async buscarConvenio() {\n                if (this.dadosDeEntrada.convenio) {\n                    let convenio = await this.buscarConvenioPorId(this.dadosDeEntrada.convenio)\n                    this.dadosDeEntrada.convenio = convenio.id\n                    this.convenios.push(convenio)\n                }\n            },\n            async buscarReconhecimentos() {\n                this.setMensagemLoading('Carregando...')\n                const resultado = await this.buscarReconhecimentosAutoComplete()\n                this.reconhecimentos = resultado.items\n                this.verificaSeEmpenhoEOuNotaObrigatorio()\n            },\n            async editarIncorporacao() {\n                this.desabilitarLoadingGlobal()\n                this.verificarSeFornecedorSelecionado()\n                try {\n                    const dadosAtualizados = await this.atualizarIncorporacao(this.dadosDeEntrada)\n                    this.setarDadosAtualizados(dadosAtualizados)\n                } catch (err) {\n                    this.mostrarNotificacaoErro(err.response.data.message)\n                    this.$store.commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING)\n                    await this.buscaIncorporacao()\n                }\n                this.atualizaDadosAposEdicao(this.dadosDeEntrada)\n                this.verificarSePodeProsseguir()\n                this.trataCamposReconhecimentoFornecedor()\n                this.trataCamposOrgaoSetor()\n            },\n            atualizaDadosAposEdicao(resultado){\n                this.dadosDeEntrada.fornecedor = resultado.fornecedor\n                this.dadosDeEntrada.reconhecimento = resultado.reconhecimento\n                this.dadosDeEntrada.orgao = resultado.orgao\n                this.dadosDeEntrada.setor = resultado.setor\n                this.dadosDeEntrada.projeto = resultado.projeto\n                this.dadosDeEntrada.comodante = resultado.comodante\n            },\n            filtroComboAutoComplete(item, queryText) {\n                const text = item.nome.toLowerCase()\n                const searchText = queryText.toLowerCase()\n                return text.indexOf(searchText) > -1\n            },\n            verificarSeFornecedorSelecionado() {\n                if (this.dadosDeEntrada.fornecedor !== null) {\n                    this.fornecedorSelecionado = true\n                }\n            },\n            atualizarValorInserido(valor) {\n                this.dadosDeEntrada.valorNota = valor\n                this.editarIncorporacao()\n            },\n            formataCnpj(cnpj = '') {\n                cnpj = cnpj.replace(/\\D/g, '')\n                cnpj = cnpj.replace(\n                    /(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/,\n                    '$1.$2.$3/$4-$5'\n                )\n                return cnpj\n            },\n            verificarSePodeProsseguir() {\n                if (this.podeContinuar) {\n                    this.$emit('habilitaPasso2')\n                } else {\n                    this.$emit('desabilitaPasso2')\n                }\n            },\n            verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos() {\n                return this.empenhos.every(empenho => empenho.numeroEmpenho && empenho.dataEmpenho && empenho.valorEmpenho && empenho.valorEmpenho!==0)\n            },\n            selecionarReconhecimento() {\n                return this.reconhecimentos.filter(reconhecimento => reconhecimento.id === this.dadosDeEntrada.reconhecimento.id)\n            },\n            verificaSeEmpenhoEOuNotaObrigatorio() {\n                if (this.dadosDeEntrada.reconhecimento !== null) {\n                    const reconhecimentoSelecionado = this.selecionarReconhecimento()\n\n                    if (reconhecimentoSelecionado.length > 0) {\n                        this.empenhoObrigatorio = reconhecimentoSelecionado[0].empenho\n                        this.notaObrigatorio = reconhecimentoSelecionado[0].notaFiscal\n                    }\n                }\n                this.verificarSePodeProsseguir()\n            },\n            async buscarUnidadesOrganizacionais() {\n                await this.buscarOrgaos()\n                await this.buscarSetores()\n                if(this.orgaos) {\n                    if(this.verificaSeArrayContemApenasUmOrgao(this.orgaos) || this.verificaSeArrayContemApenasUmSetor(this.setores)) {\n                        this.selecionaOrgaoSeArrayConterApenasUmOrgao(this.orgaos)\n                        this.selecionaSetorSeArrayConterApenasUmSetor(this.setores)\n                        await this.editarIncorporacao()\n                    }\n                }\n            },\n            async selecionaOrgao(orgao) {\n                this.desabilitarLoadingGlobal()\n                this.dadosDeEntrada.setor = null\n                this.setores = []\n                if(orgao) {\n                    const [setores, fundos] = await Axios.all([\n                        this.buscarSetoresAlmoxarifado(orgao),\n                        this.buscarFundos(orgao)\n                    ])\n\n                    this.setores = setores.items\n                    this.selecionaSetorSeArrayConterApenasUmSetor(this.setores)\n                    this.fundos = fundos.items\n                    this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n\n                    await this.editarIncorporacao()\n                }\n            },\n            async selecionaFundo() {\n                this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n                await this.editarIncorporacao()\n            },\n            async buscarSetores() {\n                if(this.dadosDeEntrada.orgao) {\n                    const resultado = await this.buscarSetoresAlmoxarifado(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao)\n                    this.setores = resultado.items\n                }\n            },\n            async buscarOrgaos() {\n                const resultado = await this.buscarTodosOrgaos()\n                this.orgaos = resultado.items\n            },\n            async buscarTodosFundos() {\n                if (this.dadosDeEntrada.orgao) {\n                    const resultado = await this.buscarFundos(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao)\n                    this.fundos = resultado.items\n                    if(this.verificaSeArrayContemApenasUmFundo(this.fundos)) {\n                        this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n                        await this.editarIncorporacao()\n                    }\n                }\n            },\n            selecionaSetorSeArrayConterApenasUmSetor(setores) {\n                if(this.verificaSeArrayContemApenasUmSetor(setores)) {\n                    this.dadosDeEntrada.setor = setores[0].id\n                }\n            },\n            selecionaFundoSeArrayConterApenasUmFundo(fundos) {\n                if(this.verificaSeArrayContemApenasUmFundo(fundos)) {\n                    this.dadosDeEntrada.fundo = fundos[0].id\n                }\n            },\n            selecionaOrgaoSeArrayConterApenasUmOrgao(orgaos) {\n                if(this.verificaSeArrayContemApenasUmOrgao(orgaos)) {\n                    this.dadosDeEntrada.orgao = orgaos[0].id\n                }\n            },\n            filtroAutocompleteFornecedores(item, queryText) {\n                const textOne = item.nome.toLowerCase()\n                const searchText = queryText.toLowerCase()\n\n                if (item.cpfCnpj) {\n                    const textTwo = item.cpfCnpj\n                    return textOne.indexOf(searchText) > -1 ||\n                        textTwo.indexOf(searchText) > -1\n                }\n                return textOne.indexOf(searchText) > -1\n            },\n            removerFornecedor() {\n                this.dadosDeEntrada.fornecedor = null\n                this.editarIncorporacao()\n            },\n            async removerIncorporacao() {\n                try {\n                    await this.deletarIncorporacao(this.dadosDeEntrada.id)\n                } catch (err) {\n                    this.mostrarNotificacaoErro(err.response.data.message)\n                }\n            },\n            tratarEventoVoltar() {\n                this.$router.replace({name: 'IncorporacaoListagem'})\n            },\n            tratarEventoContinuar() {\n                this.$router.replace({name: 'ItensIncorporacaoListagem', params: {incorporacaoId: this.incorporacaoId}})\n            },\n            setarDadosAtualizados(dados) {\n                this.verificarMudancasPropriedades(dados, this.incorporacao, this.dadosDeEntrada)\n            },\n            verificaSeArrayContemApenasUmOrgao(orgaos) {\n                return orgaos.length === 1 && !this.dadosDeEntrada.orgao\n            },\n            verificaSeArrayContemApenasUmSetor(setores) {\n                return setores.length === 1 && !this.dadosDeEntrada.setor\n            },\n            verificaSeArrayContemApenasUmFundo(fundos) {\n                return fundos.length === 1 && !this.dadosDeEntrada.fundo\n            },\n            obterLarguraAutoComplete(ref) {\n                if (this.$refs[ref] && this.$refs[ref].$el) {\n                    return {\n                        width: (this.$refs[ref].$el.clientWidth-30)+'px'\n                    }\n                }\n                return {}\n            },\n            setaIncorporacaoId() {\n                this.incorporacaoId = this.$route.params.incorporacaoId\n            }\n        },\n        async beforeRouteLeave(to, from, next) {\n            if (this.dadosDeEntrada && this.dadosDeEntrada.id && !this.dadosDeEntrada.reconhecimento && this.rotaRedirecionamento !== to.name) {\n                this.rotaRedirecionamento = to.name\n                await this.removerIncorporacao()\n            }\n            next()\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .form-dados-gerais\n        min-height 62vh\n\n    .cursor__pointer\n        cursor pointer\n\n    .uo__autocomplete\n        font-size 14px\n\n    .tamanhoCheckbox\n        height 20px\n        .checkbox__fundo\n            margin-left 5px\n        .checkbox__projeto\n            margin-left -7px\n        .checkbox__comodato\n            margin-left -16px\n\n    .titulo_checkbox\n        font-size 14px\n        color #777777\n        display inline-flex\n        margin-left 5px\n        font-weight bold\n        margin-bottom 0!important\n\n    .empenhoBorder\n        width 100%\n        padding-top 8px\n        margin-bottom 15px\n        border-style solid\n        border-radius 5px\n        border-color #7777\n        border-width 1px\n\n    >>>\n        @media (max-width: 1280px)\n            .tamanhoCheckbox\n                label\n                    font-size 13px\n                .v-input--selection-controls__input\n                    margin-right 0\n                    width 12px\n                    padding-right 4px\n                .v-input--selection-controls__input:first-child\n                    margin-left 5px\n                .v-input--selection-controls__ripple:before,\n                .v-ripple__container\n                    top 3px\n                    bottom 3px\n                    left -5px\n                    right 10px\n</style>\n"],"sourceRoot":"src/views/pages/patrimonios/incorporacao/edicao/dados-gerais"}]}