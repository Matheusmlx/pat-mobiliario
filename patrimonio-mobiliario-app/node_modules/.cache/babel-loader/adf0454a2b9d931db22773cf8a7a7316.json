{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js??ref--13-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/movimentacao-interna/entre-estoques/actions.js","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/movimentacao-interna/entre-estoques/actions.js","mtime":1614049852949},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@babel/runtime/regenerator\";\n\nvar _actionTypes$MOVIMENT;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport api from '@/core/apiclient';\nimport { actionTypes, mutationTypes } from '@/core/constants';\nexport default (_actionTypes$MOVIMENT = {}, _defineProperty(_actionTypes$MOVIMENT, actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.ATUALIZAR_ENTRE_ESTOQUES, function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, entreEstoques) {\n    var commit, _yield$api$entreEstoq, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            commit(mutationTypes.LOKI.ENABLE_AUTO_SAVING);\n            commit(mutationTypes.MOVIMENTACAO_INTERNA.SET_MOVIMENTACAO_INTERNA, entreEstoques);\n            _context.next = 5;\n            return api.entreEstoques.atualizarMovimentacaoEntreEstoques(entreEstoques);\n\n          case 5:\n            _yield$api$entreEstoq = _context.sent;\n            data = _yield$api$entreEstoq.data;\n            commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING);\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}()), _defineProperty(_actionTypes$MOVIMENT, actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.BUSCAR_ENTRE_ESTOQUES_POR_ID, function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3, entreEstoquesId) {\n    var commit, _yield$api$entreEstoq2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit;\n            _context2.next = 3;\n            return api.entreEstoques.buscarMovimentacaoEntreEstoquesPorId(entreEstoquesId);\n\n          case 3:\n            _yield$api$entreEstoq2 = _context2.sent;\n            data = _yield$api$entreEstoq2.data;\n            commit(mutationTypes.MOVIMENTACAO_INTERNA.SET_MOVIMENTACAO_INTERNA, data);\n            return _context2.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}()), _defineProperty(_actionTypes$MOVIMENT, actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.FINALIZAR_ENTRE_ESTOQUES, function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(context, entreEstoques) {\n    var _yield$api$entreEstoq3, data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return api.entreEstoques.finalizarMovimentacaoEntreEstoques(entreEstoques);\n\n          case 2:\n            _yield$api$entreEstoq3 = _context3.sent;\n            data = _yield$api$entreEstoq3.data;\n            return _context3.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}()), _actionTypes$MOVIMENT);",{"version":3,"sources":["/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/core/store/movimentacao-interna/entre-estoques/actions.js"],"names":["api","actionTypes","mutationTypes","MOVIMENTACAO_INTERNA","ENTRE_ESTOQUES","ATUALIZAR_ENTRE_ESTOQUES","entreEstoques","commit","LOKI","ENABLE_AUTO_SAVING","SET_MOVIMENTACAO_INTERNA","atualizarMovimentacaoEntreEstoques","data","DISABLE_AUTO_SAVING","BUSCAR_ENTRE_ESTOQUES_POR_ID","entreEstoquesId","buscarMovimentacaoEntreEstoquesPorId","FINALIZAR_ENTRE_ESTOQUES","context","finalizarMovimentacaoEntreEstoques"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,kBAAzC;AAEA,mFAEWD,WAAW,CAACE,oBAAZ,CAAiCC,cAAjC,CAAgDC,wBAF3D;AAAA,8FAE+FC,aAF/F;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEsFC,YAAAA,MAFtF,QAEsFA,MAFtF;AAGQA,YAAAA,MAAM,CAACL,aAAa,CAACM,IAAd,CAAmBC,kBAApB,CAAN;AACAF,YAAAA,MAAM,CAACL,aAAa,CAACC,oBAAd,CAAmCO,wBAApC,EAA8DJ,aAA9D,CAAN;AAJR;AAAA,mBAK6BN,GAAG,CAACM,aAAJ,CAAkBK,kCAAlB,CAAqDL,aAArD,CAL7B;;AAAA;AAAA;AAKeM,YAAAA,IALf,yBAKeA,IALf;AAMQL,YAAAA,MAAM,CAACL,aAAa,CAACM,IAAd,CAAmBK,mBAApB,CAAN;AANR,6CAOeD,IAPf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAUWX,WAAW,CAACE,oBAAZ,CAAiCC,cAAjC,CAAgDU,4BAV3D;AAAA,gGAUmGC,eAVnG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAU0FR,YAAAA,MAV1F,SAU0FA,MAV1F;AAAA;AAAA,mBAW6BP,GAAG,CAACM,aAAJ,CAAkBU,oCAAlB,CAAuDD,eAAvD,CAX7B;;AAAA;AAAA;AAWeH,YAAAA,IAXf,0BAWeA,IAXf;AAYQL,YAAAA,MAAM,CAACL,aAAa,CAACC,oBAAd,CAAmCO,wBAApC,EAA8DE,IAA9D,CAAN;AAZR,8CAaeA,IAbf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAgBWX,WAAW,CAACE,oBAAZ,CAAiCC,cAAjC,CAAgDa,wBAhB3D;AAAA,yFAgBqFC,OAhBrF,EAgB8FZ,aAhB9F;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAiB6BN,GAAG,CAACM,aAAJ,CAAkBa,kCAAlB,CAAqDb,aAArD,CAjB7B;;AAAA;AAAA;AAiBeM,YAAAA,IAjBf,0BAiBeA,IAjBf;AAAA,8CAkBeA,IAlBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import api from '@/core/apiclient'\nimport {actionTypes, mutationTypes} from '@/core/constants'\n\nexport default {\n\n    async [actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.ATUALIZAR_ENTRE_ESTOQUES]({commit}, entreEstoques) {\n        commit(mutationTypes.LOKI.ENABLE_AUTO_SAVING)\n        commit(mutationTypes.MOVIMENTACAO_INTERNA.SET_MOVIMENTACAO_INTERNA, entreEstoques)\n        const {data} = await api.entreEstoques.atualizarMovimentacaoEntreEstoques(entreEstoques)\n        commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING)\n        return data\n    },\n\n    async [actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.BUSCAR_ENTRE_ESTOQUES_POR_ID]({commit}, entreEstoquesId) {\n        const {data} = await api.entreEstoques.buscarMovimentacaoEntreEstoquesPorId(entreEstoquesId)\n        commit(mutationTypes.MOVIMENTACAO_INTERNA.SET_MOVIMENTACAO_INTERNA, data)\n        return data\n    },\n\n    async [actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.FINALIZAR_ENTRE_ESTOQUES](context, entreEstoques) {\n        const {data} = await api.entreEstoques.finalizarMovimentacaoEntreEstoques(entreEstoques)\n        return data\n    }\n}\n"]}]}