{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/layout/AzNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/layout/AzNotification.vue","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nimport mutationTypes from '../../store/mutation-types';\nexport default {\n  name: 'AzNotification',\n  props: {\n    enableFiltering: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false,\n      processUpdate: undefined,\n      isViewMoreLoading: false,\n      menu: false\n    };\n  },\n  watch: {\n    'notification.messages.length': function notificationMessagesLength() {\n      this.isViewMoreLoading = false;\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(['loki'])), {}, {\n    activeFilter: function activeFilter() {\n      return this.loki.notificationConfig.activeFilter;\n    },\n    filters: function filters() {\n      return this.loki.notificationConfig.filters;\n    },\n    hasMessages: function hasMessages() {\n      return this.notification.messages && this.notification.messages.length > 0;\n    },\n    hasNotificationsToRead: function hasNotificationsToRead() {\n      return this.notification.unread > 0;\n    },\n    notification: function notification() {\n      return this.loki.notification;\n    },\n    notificationConfig: function notificationConfig() {\n      return this.loki.notificationConfig;\n    },\n    title: function title() {\n      return this.loki.notificationConfig.title;\n    },\n    notificationIcon: function notificationIcon() {\n      return this.loki.notificationConfig.notificationIcon;\n    },\n    whenIcon: function whenIcon() {\n      return this.loki.notificationConfig.whenIcon;\n    },\n    closeIcon: function closeIcon() {\n      return this.loki.notificationConfig.closeIcon;\n    },\n    allowLoadingViewMore: function allowLoadingViewMore() {\n      return this.loki.notificationConfig.allowLoadingViewMore;\n    },\n    endNotificationText: function endNotificationText() {\n      return this.loki.notificationConfig.endNotificationText;\n    },\n    noNotificationText: function noNotificationText() {\n      return this.loki.notificationConfig.noNotificationText;\n    },\n    viewMoreText: function viewMoreText() {\n      return this.loki.notificationConfig.viewMoreText;\n    },\n    closeMenuOnVisit: function closeMenuOnVisit() {\n      return this.loki.notificationConfig.closeMenuOnVisit;\n    }\n  }),\n  created: function created() {\n    this.setupUpdateInterval();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.cancelAutoUpdate();\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations([mutationTypes.SET_NOTIFICATION_ACTIVE_FILTER])), {}, {\n    askForPagination: function askForPagination() {\n      this.$emit('paginate');\n    },\n    askForRefresh: function askForRefresh() {\n      if (!this.isOpen) {\n        this.$emit('refresh', this.activeFilter);\n      }\n    },\n    cancelAutoUpdate: function cancelAutoUpdate() {\n      if (this.processUpdate) {\n        window.clearInterval(this.processUpdate);\n      }\n    },\n    filterBy: function filterBy(filter) {\n      this.setNotificationActiveFilter(filter);\n      this.askForRefresh();\n    },\n    getNotificationCardClass: function getNotificationCardClass(message) {\n      return {\n        notification__card: true,\n        notification__unread: !message.read\n      };\n    },\n    getActiveFilterClass: function getActiveFilterClass(filter) {\n      return {\n        'font-weight-bold': filter === this.activeFilter\n      };\n    },\n    setupUpdateInterval: function setupUpdateInterval() {\n      var refreshTimeout = this.notificationConfig.refreshTimeout;\n      this.processUpdate = window.setInterval(this.askForRefresh, refreshTimeout);\n    },\n    setVisibility: function setVisibility(visibility) {\n      this.isOpen = visibility;\n\n      if (this.isOpen) {\n        this.$emit('open');\n      } else {\n        this.$emit('close');\n      }\n    },\n    pagination: function pagination() {\n      if (this.allowLoadingViewMore) {\n        this.isViewMoreLoading = true;\n      }\n\n      this.$emit('paginate');\n    },\n    visit: function visit(message) {\n      if (this.closeMenuOnVisit) {\n        this.menu = false;\n      }\n\n      this.$emit('visit', message);\n    }\n  })\n};",{"version":3,"sources":["AzNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA,SAFA;AAGA,MAAA,iBAAA,EAAA,KAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAMA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,kCADA,wCACA;AACA,WAAA,iBAAA,GAAA,KAAA;AACA;AAHA,GAhBA;AAqBA,EAAA,QAAA,kCACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,YAAA;AACA,KAJA;AAKA,IAAA,OALA,qBAKA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,OAAA;AACA,KAPA;AAQA,IAAA,WARA,yBAQA;AACA,aAAA,KAAA,YAAA,CAAA,QAAA,IAAA,KAAA,YAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAVA;AAWA,IAAA,sBAXA,oCAWA;AACA,aAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAbA;AAcA,IAAA,YAdA,0BAcA;AACA,aAAA,KAAA,IAAA,CAAA,YAAA;AACA,KAhBA;AAiBA,IAAA,kBAjBA,gCAiBA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA;AACA,KAnBA;AAoBA,IAAA,KApBA,mBAoBA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,KAAA;AACA,KAtBA;AAuBA,IAAA,gBAvBA,8BAuBA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,gBAAA;AACA,KAzBA;AA0BA,IAAA,QA1BA,sBA0BA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,QAAA;AACA,KA5BA;AA6BA,IAAA,SA7BA,uBA6BA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,SAAA;AACA,KA/BA;AAgCA,IAAA,oBAhCA,kCAgCA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,oBAAA;AACA,KAlCA;AAmCA,IAAA,mBAnCA,iCAmCA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,mBAAA;AACA,KArCA;AAsCA,IAAA,kBAtCA,gCAsCA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,kBAAA;AACA,KAxCA;AAyCA,IAAA,YAzCA,0BAyCA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,YAAA;AACA,KA3CA;AA4CA,IAAA,gBA5CA,8BA4CA;AACA,aAAA,KAAA,IAAA,CAAA,kBAAA,CAAA,gBAAA;AACA;AA9CA,IArBA;AAqEA,EAAA,OArEA,qBAqEA;AACA,SAAA,mBAAA;AACA,GAvEA;AAwEA,EAAA,aAxEA,2BAwEA;AACA,SAAA,gBAAA;AACA,GA1EA;AA2EA,EAAA,OAAA,kCACA,YAAA,CAAA,CAAA,aAAA,CAAA,8BAAA,CAAA,CADA;AAEA,IAAA,gBAFA,8BAEA;AACA,WAAA,KAAA,CAAA,UAAA;AACA,KAJA;AAKA,IAAA,aALA,2BAKA;AACA,UAAA,CAAA,KAAA,MAAA,EAAA;AACA,aAAA,KAAA,CAAA,SAAA,EAAA,KAAA,YAAA;AACA;AACA,KATA;AAUA,IAAA,gBAVA,8BAUA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,QAAA,MAAA,CAAA,aAAA,CAAA,KAAA,aAAA;AACA;AACA,KAdA;AAeA,IAAA,QAfA,oBAeA,MAfA,EAeA;AACA,WAAA,2BAAA,CAAA,MAAA;AACA,WAAA,aAAA;AACA,KAlBA;AAmBA,IAAA,wBAnBA,oCAmBA,OAnBA,EAmBA;AACA,aAAA;AACA,QAAA,kBAAA,EAAA,IADA;AAEA,QAAA,oBAAA,EAAA,CAAA,OAAA,CAAA;AAFA,OAAA;AAIA,KAxBA;AAyBA,IAAA,oBAzBA,gCAyBA,MAzBA,EAyBA;AACA,aAAA;AACA,4BAAA,MAAA,KAAA,KAAA;AADA,OAAA;AAGA,KA7BA;AA8BA,IAAA,mBA9BA,iCA8BA;AACA,UAAA,cAAA,GAAA,KAAA,kBAAA,CAAA,cAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,WAAA,CAAA,KAAA,aAAA,EAAA,cAAA,CAAA;AACA,KAjCA;AAkCA,IAAA,aAlCA,yBAkCA,UAlCA,EAkCA;AACA,WAAA,MAAA,GAAA,UAAA;;AACA,UAAA,KAAA,MAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,OAAA;AACA;AACA,KAzCA;AA0CA,IAAA,UA1CA,wBA0CA;AACA,UAAA,KAAA,oBAAA,EAAA;AACA,aAAA,iBAAA,GAAA,IAAA;AACA;;AACA,WAAA,KAAA,CAAA,UAAA;AACA,KA/CA;AAgDA,IAAA,KAhDA,iBAgDA,OAhDA,EAgDA;AACA,UAAA,KAAA,gBAAA,EAAA;AACA,aAAA,IAAA,GAAA,KAAA;AACA;;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,OAAA;AACA;AArDA;AA3EA,CAAA","sourcesContent":["<template>\n    <v-menu\n        offset-y\n        transition=\"slide-x-transition\"\n        bottom\n        left\n        class=\"notification notification__no-mobile\"\n        :close-on-content-click=\"false\"\n        v-model=\"menu\"\n        @input=\"setVisibility\"\n    >\n        <template v-slot:activator=\"{ on }\">\n            <v-btn icon v-on=\"on\" @click=\"$emit('read')\">\n                <v-badge right overlap class=\"badge-number\">\n                    <span slot=\"badge\" v-if=\"hasNotificationsToRead\">{{ notification.unread }}</span>\n                    <v-icon class=\"notification-icon\">{{notificationIcon}}</v-icon>\n                </v-badge>\n            </v-btn>\n        </template>\n        <v-list>\n            <div v-if=\"title\" class=\"notification__top\">\n                <b>{{ title }}</b>\n                <div v-if=\"enableFiltering\">\n                    <a\n                        v-for=\"filter in filters\"\n                        :key=\"filter\"\n                        :class=\"getActiveFilterClass(filter)\"\n                        @click=\"filterBy(filter)\"\n                    >\n                        {{ filter }}\n                    </a>\n                </div>\n            </div>\n            <div class=\"notification__body\" id=\"notificationContainer\" v-if=\"hasMessages\">\n                <v-list-item\n                    v-for=\"(message, index) in notification.messages\"\n                    :key=\"index\"\n                    :class=\"getNotificationCardClass(message)\"\n                >\n                    <div @click=\"visit(message)\">\n                        <div v-html=\"message.text\" class=\"text\" />\n                        <div class=\"when\">\n                            <v-icon v-if=\"whenIcon\" class=\"when-icon\">{{whenIcon}}</v-icon>\n                            {{ message.when | azElapsedTime }}\n                        </div>\n                    </div>\n                    <div v-if=\"closeIcon\">\n                        <a @click.prevent=\"$emit('remove', message)\">\n                            <v-icon class=\"close-icon\">{{closeIcon}}</v-icon>\n                        </a>\n                    </div>\n                </v-list-item>\n                <v-list-item class=\"list-item-more\" v-if=\"notification.viewMore\">\n                    <div v-if=\"isViewMoreLoading\" class=\"more\">\n                        <v-progress-circular indeterminate class=\"loading-view-more\"/>\n                    </div>\n                    <a v-else class=\"more\" @click=\"pagination\">{{viewMoreText}}</a>\n                </v-list-item>\n                <div class=\"end-notification\">\n                    <span v-if=\"endNotificationText && notification.endNotification\" id=\"notificationListEnd\">{{endNotificationText}}</span>\n                </div>\n            </div>\n            <div v-else class=\"notification notification__top\">{{noNotificationText}}</div>\n        </v-list>\n    </v-menu>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport mutationTypes from '../../store/mutation-types'\n\nexport default {\n    name: 'AzNotification',\n    props: {\n        enableFiltering: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            isOpen: false,\n            processUpdate: undefined,\n            isViewMoreLoading: false,\n            menu: false\n        }\n    },\n    watch: {\n        'notification.messages.length'() {\n            this.isViewMoreLoading = false\n        }\n    },\n    computed: {\n        ...mapState(['loki']),\n        activeFilter() {\n            return this.loki.notificationConfig.activeFilter\n        },\n        filters() {\n            return this.loki.notificationConfig.filters\n        },\n        hasMessages() {\n            return this.notification.messages && this.notification.messages.length > 0\n        },\n        hasNotificationsToRead() {\n            return this.notification.unread > 0\n        },\n        notification() {\n            return this.loki.notification\n        },\n        notificationConfig() {\n            return this.loki.notificationConfig\n        },\n        title() {\n            return this.loki.notificationConfig.title\n        },\n        notificationIcon() {\n            return this.loki.notificationConfig.notificationIcon\n        },\n        whenIcon() {\n            return this.loki.notificationConfig.whenIcon\n        },\n        closeIcon() {\n            return this.loki.notificationConfig.closeIcon\n        },\n        allowLoadingViewMore() {\n            return this.loki.notificationConfig.allowLoadingViewMore\n        },\n        endNotificationText() {\n            return this.loki.notificationConfig.endNotificationText\n        },\n        noNotificationText() {\n            return this.loki.notificationConfig.noNotificationText\n        },\n        viewMoreText(){\n            return this.loki.notificationConfig.viewMoreText\n        },\n        closeMenuOnVisit(){\n            return this.loki.notificationConfig.closeMenuOnVisit\n        }\n    },\n    created() {\n        this.setupUpdateInterval()\n    },\n    beforeDestroy() {\n        this.cancelAutoUpdate()\n    },\n    methods: {\n        ...mapMutations([mutationTypes.SET_NOTIFICATION_ACTIVE_FILTER]),\n        askForPagination() {\n            this.$emit('paginate')\n        },\n        askForRefresh() {\n            if (!this.isOpen) {\n                this.$emit('refresh', this.activeFilter)\n            }\n        },\n        cancelAutoUpdate() {\n            if (this.processUpdate) {\n                window.clearInterval(this.processUpdate)\n            }\n        },\n        filterBy(filter) {\n            this.setNotificationActiveFilter(filter)\n            this.askForRefresh()\n        },\n        getNotificationCardClass(message) {\n            return {\n                notification__card: true,\n                notification__unread: !message.read\n            }\n        },\n        getActiveFilterClass(filter) {\n            return {\n                'font-weight-bold': filter === this.activeFilter\n            }\n        },\n        setupUpdateInterval() {\n            const refreshTimeout = this.notificationConfig.refreshTimeout\n            this.processUpdate = window.setInterval(this.askForRefresh, refreshTimeout)\n        },\n        setVisibility(visibility) {\n            this.isOpen = visibility\n            if (this.isOpen) {\n                this.$emit('open')\n            } else {\n                this.$emit('close')\n            }\n        },\n        pagination() {\n            if(this.allowLoadingViewMore){\n                this.isViewMoreLoading = true\n            }\n            this.$emit('paginate')\n        },\n        visit(message){\n            if(this.closeMenuOnVisit){\n                this.menu = false\n            }\n            this.$emit('visit', message)\n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\">\n.loading-view-more\n    color #487b9c\n    height 25px!important\n.close-icon\n    font-size 14px!important\n.when-icon\n    font-size 14px!important\n.notification-icon\n    color white!important\n.end-notification\n    width 100%\n    text-align center\n    color gray\n    font-size 14px\n.notification\n    &__body\n        cursor pointer\n        max-height 250px\n        overflow-y auto\n        .more\n            width 100%\n            text-align center\n            color gray\n            font-size 12px\n        .v-list-item\n            display flex\n            justify-content space-between\n            border-bottom 1px solid #eee\n            width 400px\n            padding 10px 20px !important\n            height auto !important\n            .text\n                font-size 13px\n                color #777\n            .when\n                margin-top 5px\n                font-size 11px\n                color #777\n    &__top\n        padding 10px 20px\n        justify-content space-between\n        border-bottom 1px solid #eee\n        display flex\n        font-size 13px\n        color #777\n        a\n            color #777\n            margin-left 15px\n    &__unread\n        background-color #edf2fa\n\n@media (max-width 720px)\n    .notification\n        &__no-mobile\n            display none !important\n</style>\n"],"sourceRoot":"node_modules/@azinformatica/loki/src/components/layout"}]}