{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/itens/ItensListagem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/itens/ItensListagem.vue","mtime":1617132782269},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport _ from 'lodash'\nimport {actionTypes, mutationTypes} from '@/core/constants'\nimport {createNamespacedHelpers, mapActions, mapMutations, mapState} from 'vuex'\nimport AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\nimport ItensTabela from './ItensTabela'\nimport ItensListagemVazio from './ItensListagemVazio'\nimport AcoesBotoesContinuarVoltar from '@/views/components/acoes/AcoesBotoesContinuarVoltar'\n\nconst {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\nexport default {\n    name: 'ItensIncorporacao',\n    components: {ItensListagemVazio, ItensTabela, AcoesBotoesContinuarVoltar},\n    data() {\n        return {\n            filtrosInterno: this.getFiltros(),\n            itens: [],\n            paginas: 0,\n            totalItens: 0,\n            incorporacaoId: null,\n        }\n    },\n    computed: {\n        existeItens() {\n            return !!(this.totalItens > 0 || (this.totalItens === 0 && this.filtrosInterno.conteudo.value))\n        },\n        verificaPermissaoEdicao() {\n            return AzHasPermissions(this.$store.state.loki.user.authorities, [\n                'Mobiliario.Normal',\n            ])\n        },\n        ...mapGetters([\n            'getItemIncorporacaoValidado'\n        ]),\n        ...mapState({todosItensIncorporacao: state => state.itemIncorporacao.resultadoBuscaTodosItensIncorporacao})\n    },\n    async mounted() {\n        this.setIncorporacaoId()\n        await this.buscaTodasIncorporacoes()\n        if (!this.verificaPermissaoEdicao) {\n            this.itensListagemVisualizacao()\n        }\n    },\n    methods: {\n        ...mapActions([\n            actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.BUSCAR_TODOS_ITENS_INCORPORACAO,\n            actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.DELETAR_ITEM_INCORPORACAO,\n            actionTypes.PATRIMONIO.CADASTRAR_PATRIMONIO\n        ]),\n        ...mapMutations([\n            mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.SET_FILTROS_BUSCA_TODOS_ITENS_INCORPORACAO,\n            mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.SET_PAGINACAO_BUSCA_TODOS_ITENS_INCORPORACAO,\n            mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.RESETA_PAGE_INCORPORACAO_ITEM\n        ]),\n        adicionarItem() {\n            if (this.verificaPermissaoEdicao) {\n                this.$router.push({name: 'ItensCatalogoModalNovo', params: {incorporacaoId: this.incorporacaoId}})\n            } else {\n                this.$router.push({\n                    name: 'ItensCatalogoModalVisualizacao',\n                    params: {incorporacaoId: this.incorporacaoId}\n                })\n            }\n        },\n        async buscar() {\n            this.setFiltrosBuscaTodosItensIncorporacao(this.getFiltrosInterno())\n            await this.buscaTodasIncorporacoes()\n        },\n        async buscaTodasIncorporacoes() {\n            const resultado = await this.buscarTodosItensIncorporacao(this.incorporacaoId)\n            if (resultado) {\n                this.itens = resultado.items\n                this.paginas = resultado.totalPages\n                this.totalItens = resultado.totalElements\n            }\n            this.controlaPasso3()\n        },\n        controlaPasso3() {\n            if (this.existeItens) {\n                this.$emit('habilitaPasso3')\n            } else {\n                this.$emit('desabilitaPasso3')\n            }\n        },\n        getFiltros() {\n            return _.cloneDeep(this.$store.state.itemIncorporacao.resultadoBuscaTodosItensIncorporacao.filtros)\n        },\n        getFiltrosInterno() {\n            return _.cloneDeep(this.filtrosInterno)\n        },\n        setIncorporacaoId() {\n            this.incorporacaoId = this.$route.params.incorporacaoId\n        },\n        itensListagemVisualizacao() {\n            this.$router.push({\n                name: 'VisualizarItensIncorporacao',\n                params: {\n                    incorporacaoId: this.incorporacaoId\n                }\n            })\n        },\n        async tratarEventoAcessar(item) {\n            let nomeRota = 'DadosGeraisDoItemModal'\n\n            if (this.verificaPermissaoEdicao) {\n                if (this.getItemIncorporacaoValidado(item, this.tipoVeiculo(item), 'ITEM_INCORPORACAO')) {\n                    await this.cadastraPatrimonio(item)\n                    nomeRota = 'IncorporacaoItemListagemPatrimonios'\n                }\n                this.$router.push({\n                    name: nomeRota,\n                    params: {incorporacaoId: this.incorporacaoId, itemIncorporacaoId: item.id}\n                })\n            } else {\n                nomeRota = 'VisualizacaoDadosGerais'\n                if (this.getItemIncorporacaoValidado(item, this.tipoVeiculo(item), 'ITEM_INCORPORACAO')) {\n                    nomeRota = 'IncorporacaoItemListagemPatrimoniosVisualizacao'\n                }\n                this.$router.push({\n                    name: nomeRota,\n                    params: {incorporacaoId: this.incorporacaoId, itemIncorporacaoId: item.id}\n                })\n            }\n        },\n        tipoVeiculo(item) {\n            return item.tipoBem === 'VEICULO'\n        },\n        async cadastraPatrimonio(item) {\n            if (item.quantidade && item.valorTotal && item.contaContabil && item.id) {\n                const patrimonio = {\n                    quantidade: item.quantidade,\n                    valorTotal: item.valorTotal,\n                    contaContabilId: item.contaContabil,\n                    itemIncorporacaoId: item.id\n                }\n                await this.cadastrarPatrimonio(patrimonio)\n            }\n        },\n        tratarEventoBuscaSimples(valor) {\n            this.resetaPageIncorporacaoItem()\n            this.filtrosInterno.conteudo.value = valor\n            this.buscar()\n        },\n        tratarEventoContinuar() {\n            if(this.verificaPermissaoEdicao) {\n                this.$router.push({\n                    name: 'IncorporacaoDocumentosEdicao',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            } else{\n                this.$router.push({\n                    name: 'VisualizarIncorporacaoDocumentos',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            }\n        },\n        async tratarEvendtoDeletarItem(id) {\n            if(!this.verificaPermissaoEdicao) return\n            const dados = {idIncorporacao: this.incorporacaoId, idItem: id}\n            await this.deletarItemIncorporacao(dados)\n            this.buscar()\n        },\n        tratarEventoPaginar(paginacao) {\n            this.setPaginacaoBuscaTodosItensIncorporacao(paginacao)\n            this.resetarPaginacaoSortBy(paginacao)\n            this.buscar()\n        },\n        tratarEventoRemoverFiltro(propriedade) {\n            if (this.filtrosInterno[propriedade]) {\n                this.filtrosInterno[propriedade].value = this.filtrosInterno[propriedade].default\n            }\n            this.buscar()\n        },\n        resetarPaginacaoSortBy(paginacao) {\n            if (!paginacao.sortBy[0]) {\n                this.todosItensIncorporacao.paginacao.sortBy[0] = paginacao.defaultSortBy\n            }\n        },\n        voltarPasso1() {\n            if (this.verificaPermissaoEdicao) {\n                this.$router.push({\n                    name: 'EditarIncorporacao',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            } else{\n                this.$router.push({\n                    name: 'VisualizarIncorporacao',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            }\n        }\n    }\n}\n",{"version":3,"sources":["ItensListagem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ItensListagem.vue","sourceRoot":"src/views/pages/patrimonios/incorporacao/edicao/itens","sourcesContent":["<template>\n    <div>\n        <div v-if=\"existeItens\" class=\"itens-listagem-tabela\">\n            <az-toolbar class=\"incorporacao-item-toolbar\">\n                <az-call-to-action\n                    slot=\"actions\"\n                    :disabled=\"!verificaPermissaoEdicao\"\n                    active\n                    @click=\"adicionarItem\">\n                    <v-icon>add_circle</v-icon>\n                    Adicionar Item\n                </az-call-to-action>\n                <v-flex slot=\"simpleSearch\">\n                    <az-search\n                        :filter=\"filtrosInterno\"\n                        @remove-filter=\"tratarEventoRemoverFiltro\"\n                        @simple-search=\"tratarEventoBuscaSimples\"\n                        :maxlengthInput=\"500\"\n                        id=\"azSearch\"\n                        simple-search-placeholder=\"Busque por código ou descrição\"\n                        class=\"searchItemIncorporacaoListagem\">\n                    </az-search>\n                </v-flex>\n            </az-toolbar>\n            <itens-tabela\n                :itens=\"itens\"\n                :paginas=\"paginas\"\n                :total-itens=\"totalItens\"\n                :paginacao=\"$store.state.itemIncorporacao.resultadoBuscaTodosItensIncorporacao.paginacao\"\n                @deletar=\"tratarEvendtoDeletarItem\"\n                @acessar=\"tratarEventoAcessar\"\n                @paginar=\"tratarEventoPaginar\"/>\n        </div>\n        <itens-listagem-vazio v-else @adicionarItem=\"adicionarItem\"/>\n\n        <router-view @fechar=\"buscaTodasIncorporacoes\"/>\n\n        <acoes-botoes-continuar-voltar :controleContinuar=\"existeItens\" @voltar=\"voltarPasso1\"\n                                @continuar=\"tratarEventoContinuar\"/>\n    </div>\n</template>\n\n<script>\n    import _ from 'lodash'\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import {createNamespacedHelpers, mapActions, mapMutations, mapState} from 'vuex'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import ItensTabela from './ItensTabela'\n    import ItensListagemVazio from './ItensListagemVazio'\n    import AcoesBotoesContinuarVoltar from '@/views/components/acoes/AcoesBotoesContinuarVoltar'\n\n    const {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n    export default {\n        name: 'ItensIncorporacao',\n        components: {ItensListagemVazio, ItensTabela, AcoesBotoesContinuarVoltar},\n        data() {\n            return {\n                filtrosInterno: this.getFiltros(),\n                itens: [],\n                paginas: 0,\n                totalItens: 0,\n                incorporacaoId: null,\n            }\n        },\n        computed: {\n            existeItens() {\n                return !!(this.totalItens > 0 || (this.totalItens === 0 && this.filtrosInterno.conteudo.value))\n            },\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, [\n                    'Mobiliario.Normal',\n                ])\n            },\n            ...mapGetters([\n                'getItemIncorporacaoValidado'\n            ]),\n            ...mapState({todosItensIncorporacao: state => state.itemIncorporacao.resultadoBuscaTodosItensIncorporacao})\n        },\n        async mounted() {\n            this.setIncorporacaoId()\n            await this.buscaTodasIncorporacoes()\n            if (!this.verificaPermissaoEdicao) {\n                this.itensListagemVisualizacao()\n            }\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.BUSCAR_TODOS_ITENS_INCORPORACAO,\n                actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.DELETAR_ITEM_INCORPORACAO,\n                actionTypes.PATRIMONIO.CADASTRAR_PATRIMONIO\n            ]),\n            ...mapMutations([\n                mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.SET_FILTROS_BUSCA_TODOS_ITENS_INCORPORACAO,\n                mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.SET_PAGINACAO_BUSCA_TODOS_ITENS_INCORPORACAO,\n                mutationTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.RESETA_PAGE_INCORPORACAO_ITEM\n            ]),\n            adicionarItem() {\n                if (this.verificaPermissaoEdicao) {\n                    this.$router.push({name: 'ItensCatalogoModalNovo', params: {incorporacaoId: this.incorporacaoId}})\n                } else {\n                    this.$router.push({\n                        name: 'ItensCatalogoModalVisualizacao',\n                        params: {incorporacaoId: this.incorporacaoId}\n                    })\n                }\n            },\n            async buscar() {\n                this.setFiltrosBuscaTodosItensIncorporacao(this.getFiltrosInterno())\n                await this.buscaTodasIncorporacoes()\n            },\n            async buscaTodasIncorporacoes() {\n                const resultado = await this.buscarTodosItensIncorporacao(this.incorporacaoId)\n                if (resultado) {\n                    this.itens = resultado.items\n                    this.paginas = resultado.totalPages\n                    this.totalItens = resultado.totalElements\n                }\n                this.controlaPasso3()\n            },\n            controlaPasso3() {\n                if (this.existeItens) {\n                    this.$emit('habilitaPasso3')\n                } else {\n                    this.$emit('desabilitaPasso3')\n                }\n            },\n            getFiltros() {\n                return _.cloneDeep(this.$store.state.itemIncorporacao.resultadoBuscaTodosItensIncorporacao.filtros)\n            },\n            getFiltrosInterno() {\n                return _.cloneDeep(this.filtrosInterno)\n            },\n            setIncorporacaoId() {\n                this.incorporacaoId = this.$route.params.incorporacaoId\n            },\n            itensListagemVisualizacao() {\n                this.$router.push({\n                    name: 'VisualizarItensIncorporacao',\n                    params: {\n                        incorporacaoId: this.incorporacaoId\n                    }\n                })\n            },\n            async tratarEventoAcessar(item) {\n                let nomeRota = 'DadosGeraisDoItemModal'\n\n                if (this.verificaPermissaoEdicao) {\n                    if (this.getItemIncorporacaoValidado(item, this.tipoVeiculo(item), 'ITEM_INCORPORACAO')) {\n                        await this.cadastraPatrimonio(item)\n                        nomeRota = 'IncorporacaoItemListagemPatrimonios'\n                    }\n                    this.$router.push({\n                        name: nomeRota,\n                        params: {incorporacaoId: this.incorporacaoId, itemIncorporacaoId: item.id}\n                    })\n                } else {\n                    nomeRota = 'VisualizacaoDadosGerais'\n                    if (this.getItemIncorporacaoValidado(item, this.tipoVeiculo(item), 'ITEM_INCORPORACAO')) {\n                        nomeRota = 'IncorporacaoItemListagemPatrimoniosVisualizacao'\n                    }\n                    this.$router.push({\n                        name: nomeRota,\n                        params: {incorporacaoId: this.incorporacaoId, itemIncorporacaoId: item.id}\n                    })\n                }\n            },\n            tipoVeiculo(item) {\n                return item.tipoBem === 'VEICULO'\n            },\n            async cadastraPatrimonio(item) {\n                if (item.quantidade && item.valorTotal && item.contaContabil && item.id) {\n                    const patrimonio = {\n                        quantidade: item.quantidade,\n                        valorTotal: item.valorTotal,\n                        contaContabilId: item.contaContabil,\n                        itemIncorporacaoId: item.id\n                    }\n                    await this.cadastrarPatrimonio(patrimonio)\n                }\n            },\n            tratarEventoBuscaSimples(valor) {\n                this.resetaPageIncorporacaoItem()\n                this.filtrosInterno.conteudo.value = valor\n                this.buscar()\n            },\n            tratarEventoContinuar() {\n                if(this.verificaPermissaoEdicao) {\n                    this.$router.push({\n                        name: 'IncorporacaoDocumentosEdicao',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                } else{\n                    this.$router.push({\n                        name: 'VisualizarIncorporacaoDocumentos',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                }\n            },\n            async tratarEvendtoDeletarItem(id) {\n                if(!this.verificaPermissaoEdicao) return\n                const dados = {idIncorporacao: this.incorporacaoId, idItem: id}\n                await this.deletarItemIncorporacao(dados)\n                this.buscar()\n            },\n            tratarEventoPaginar(paginacao) {\n                this.setPaginacaoBuscaTodosItensIncorporacao(paginacao)\n                this.resetarPaginacaoSortBy(paginacao)\n                this.buscar()\n            },\n            tratarEventoRemoverFiltro(propriedade) {\n                if (this.filtrosInterno[propriedade]) {\n                    this.filtrosInterno[propriedade].value = this.filtrosInterno[propriedade].default\n                }\n                this.buscar()\n            },\n            resetarPaginacaoSortBy(paginacao) {\n                if (!paginacao.sortBy[0]) {\n                    this.todosItensIncorporacao.paginacao.sortBy[0] = paginacao.defaultSortBy\n                }\n            },\n            voltarPasso1() {\n                if (this.verificaPermissaoEdicao) {\n                    this.$router.push({\n                        name: 'EditarIncorporacao',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                } else{\n                    this.$router.push({\n                        name: 'VisualizarIncorporacao',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .itens-listagem-tabela\n        min-height 62vh\n\n    >>>\n        .searchItemIncorporacaoListagem .input-search\n            background-color #fff !important\n\n            span\n                max-width 200px\n\n            .v-chip__content\n                width 100%\n\n                span\n                    white-space nowrap\n                    overflow hidden\n                    text-overflow ellipsis\n\n    .text-info\n        color #777\n\n    .incorporacao-item-toolbar\n        background-color white\n</style>\n"]}]}