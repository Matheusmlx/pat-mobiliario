{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/documentos/ListagemDocumentos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/documentos/ListagemDocumentos.vue","mtime":1616610237013},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {actionTypes, mutationTypes} from '@/core/constants'\nimport {mapActions, mapState} from 'vuex'\nimport AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\nimport AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar'\nimport Documentos from '@/views/components/documento/Documentos'\n\nexport default {\n    data() {\n        return {\n            documentos: [],\n            tiposDocumento: [],\n            possuiItensNaoFinalizados: false,\n            documentoVazio: true,\n            tituloAlerta: 'Tudo certo, incorporação em processamento',\n            subTituloAlerta: 'Sua incorporação foi adicionada na fila para processamento e iremos lhe notificar assim que estiver terminada.',\n            textoBotaoAlerta: 'Voltar para a listagem',\n            actions: {\n                cadastrarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.CADASTRAR_DOCUMENTO,\n                atualizarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.ATUALIZAR_DOCUMENTO,\n                enviarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DOCUMENTO_UPLOAD,\n                deletarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DELETAR_DOCUMENTO,\n                buscarTipoDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.BUSCAR_TIPO_DOCUMENTO,\n                buscarDocumentos: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.BUSCAR_DOCUMENTOS,\n            },\n            mutations: {\n                removerDocumentos: mutationTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.REMOVER_DOCUMENTOS\n            }\n        }\n    },\n    components: {Documentos, AcoesBotoesFinalizarVoltar},\n    async mounted() {\n        await this.buscarItensIncorporacao()\n    },\n    computed: {\n        ...mapState({situacaoIncorporacao: state => state.incorporacao.situacaoIncorporacao}),\n        incorporacaoEmProcessamento() {\n            return this.situacaoIncorporacao === 'EM_PROCESSAMENTO'\n        },\n        incorporacaoId() {\n            return parseInt(this.$route.params.incorporacaoId)\n        },\n        verificaPermissaoEdicao() {\n            return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Normal'])\n        },\n    },\n    methods: {\n        ...mapActions([\n            actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.BUSCAR_TODOS_ITENS_INCORPORACAO,\n            actionTypes.PATRIMONIO.INCORPORACAO.FINALIZAR_INCORPORACAO,\n            actionTypes.PATRIMONIO.INCORPORACAO.BUSCAR_SITUACAO_INCORPORACAO\n        ]),\n        async tratarEventoFinalizar() {\n            if (!this.possuiItensNaoFinalizados) {\n                try {\n                    const dadosFinalizacao = await this.finalizarIncorporacao(this.incorporacaoId)\n                    if (dadosFinalizacao.situacao === 'EM_PROCESSAMENTO') {\n                        this.mostrarNotificacaoSucessoComConfirmacao({\n                            titulo: this.tituloAlerta,\n                            subTitulo: this.subTituloAlerta,\n                            textoBotao: this.textoBotaoAlerta\n                        }, (result) => {\n                            if (result.isConfirmed) {\n                                this.$router.replace({name: 'IncorporacaoListagem'})\n                            }\n                        })\n                    } else {\n                        this.mostrarNotificacaoSucessoDefault()\n                        await this.$router.replace({\n                            name: 'VisualizarRegistroIncorporacao',\n                            params: {incorporacaoId: this.incorporacaoId}\n                        })\n                    }\n                } catch (err) {\n                    this.mostrarNotificacaoErro(err.response.data.message)\n                }\n            }\n        },\n        async buscarItensIncorporacao() {\n            const resultado = await this.buscarTodosItensIncorporacao(this.incorporacaoId)\n            if (resultado) {\n                this.possuiItensNaoFinalizados = !!resultado.items.find(element => element.situacao === 'EM_ELABORACAO')\n            }\n        },\n        tratarEventoVoltar() {\n            if (this.verificaPermissaoEdicao) {\n                this.$router.replace({\n                    name: 'ItensIncorporacaoListagem',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            } else {\n                this.$router.replace({\n                    name: 'VisualizarItensIncorporacao',\n                    params: {incorporacaoId: this.incorporacaoId},\n                })\n            }\n        },\n        retornaTextoBloqueio() {\n            if (!this.verificaPermissaoEdicao) {\n                return 'Você não possui permissão para finalizar.'\n            }\n            if (this.possuiItensNaoFinalizados) {\n                return 'Todos os itens do passo 2 devem estar finalizados.'\n            }\n            return ''\n        }\n    }\n}\n",{"version":3,"sources":["ListagemDocumentos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"ListagemDocumentos.vue","sourceRoot":"src/views/pages/patrimonios/incorporacao/edicao/documentos","sourcesContent":["<template>\n    <v-container fluid>\n        <documentos\n            :permissao-edicao=\"verificaPermissaoEdicao\"\n            :dono-documento=\"'incorporacao'\"\n            :dono-documento-id=\"incorporacaoId\"\n            :actions=\"actions\"\n            :mutations=\"mutations\"/>\n\n        <acoes-botoes-finalizar-voltar :desabilitado=\"!verificaPermissaoEdicao || possuiItensNaoFinalizados\"\n                                       :em-processamento=\"incorporacaoEmProcessamento\"\n                                       texto-em-processamento=\"A incorporação está em processamento e não pode ser finalizada\"\n                                       :texto-bloqueio=\"retornaTextoBloqueio()\"\n                                       @finalizar=\"tratarEventoFinalizar\"\n                                       @voltar=\"tratarEventoVoltar\"/>\n    </v-container>\n</template>\n\n<script>\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import {mapActions, mapState} from 'vuex'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar'\n    import Documentos from '@/views/components/documento/Documentos'\n\n    export default {\n        data() {\n            return {\n                documentos: [],\n                tiposDocumento: [],\n                possuiItensNaoFinalizados: false,\n                documentoVazio: true,\n                tituloAlerta: 'Tudo certo, incorporação em processamento',\n                subTituloAlerta: 'Sua incorporação foi adicionada na fila para processamento e iremos lhe notificar assim que estiver terminada.',\n                textoBotaoAlerta: 'Voltar para a listagem',\n                actions: {\n                    cadastrarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.CADASTRAR_DOCUMENTO,\n                    atualizarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.ATUALIZAR_DOCUMENTO,\n                    enviarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DOCUMENTO_UPLOAD,\n                    deletarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DELETAR_DOCUMENTO,\n                    buscarTipoDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.BUSCAR_TIPO_DOCUMENTO,\n                    buscarDocumentos: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.BUSCAR_DOCUMENTOS,\n                },\n                mutations: {\n                    removerDocumentos: mutationTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.REMOVER_DOCUMENTOS\n                }\n            }\n        },\n        components: {Documentos, AcoesBotoesFinalizarVoltar},\n        async mounted() {\n            await this.buscarItensIncorporacao()\n        },\n        computed: {\n            ...mapState({situacaoIncorporacao: state => state.incorporacao.situacaoIncorporacao}),\n            incorporacaoEmProcessamento() {\n                return this.situacaoIncorporacao === 'EM_PROCESSAMENTO'\n            },\n            incorporacaoId() {\n                return parseInt(this.$route.params.incorporacaoId)\n            },\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Normal'])\n            },\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.PATRIMONIO.INCORPORACAO.INCORPORACAO_ITEM.BUSCAR_TODOS_ITENS_INCORPORACAO,\n                actionTypes.PATRIMONIO.INCORPORACAO.FINALIZAR_INCORPORACAO,\n                actionTypes.PATRIMONIO.INCORPORACAO.BUSCAR_SITUACAO_INCORPORACAO\n            ]),\n            async tratarEventoFinalizar() {\n                if (!this.possuiItensNaoFinalizados) {\n                    try {\n                        const dadosFinalizacao = await this.finalizarIncorporacao(this.incorporacaoId)\n                        if (dadosFinalizacao.situacao === 'EM_PROCESSAMENTO') {\n                            this.mostrarNotificacaoSucessoComConfirmacao({\n                                titulo: this.tituloAlerta,\n                                subTitulo: this.subTituloAlerta,\n                                textoBotao: this.textoBotaoAlerta\n                            }, (result) => {\n                                if (result.isConfirmed) {\n                                    this.$router.replace({name: 'IncorporacaoListagem'})\n                                }\n                            })\n                        } else {\n                            this.mostrarNotificacaoSucessoDefault()\n                            await this.$router.replace({\n                                name: 'VisualizarRegistroIncorporacao',\n                                params: {incorporacaoId: this.incorporacaoId}\n                            })\n                        }\n                    } catch (err) {\n                        this.mostrarNotificacaoErro(err.response.data.message)\n                    }\n                }\n            },\n            async buscarItensIncorporacao() {\n                const resultado = await this.buscarTodosItensIncorporacao(this.incorporacaoId)\n                if (resultado) {\n                    this.possuiItensNaoFinalizados = !!resultado.items.find(element => element.situacao === 'EM_ELABORACAO')\n                }\n            },\n            tratarEventoVoltar() {\n                if (this.verificaPermissaoEdicao) {\n                    this.$router.replace({\n                        name: 'ItensIncorporacaoListagem',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                } else {\n                    this.$router.replace({\n                        name: 'VisualizarItensIncorporacao',\n                        params: {incorporacaoId: this.incorporacaoId},\n                    })\n                }\n            },\n            retornaTextoBloqueio() {\n                if (!this.verificaPermissaoEdicao) {\n                    return 'Você não possui permissão para finalizar.'\n                }\n                if (this.possuiItensNaoFinalizados) {\n                    return 'Todos os itens do passo 2 devem estar finalizados.'\n                }\n                return ''\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n    .incorporacao-documentos\n        min-height 62vh\n\n</style>\n\n\n"]}]}