{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/configuracao/reserva/global/edicao/ReservaDadosGeraisEdicao.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/configuracao/reserva/global/edicao/ReservaDadosGeraisEdicao.vue","mtime":1620403802837},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {actionTypes} from '@/core/constants'\nimport BotaoRemover from '@/views/components/botoes/BotaoRemover'\nimport {mapActions} from 'vuex'\nimport ReservaIntervaloDadosGeraisNovo\n    from '@/views/pages/configuracao/reserva/global/edicao/intervalo/novo/ReservaIntervaloDadosGeraisNovo'\n\nexport default {\n    name: 'ReservaDadosGeraisEdicao',\n    components: {ReservaIntervaloDadosGeraisNovo,BotaoRemover},\n    props: {\n        reservaId: {\n            type: String,\n            required: true\n        },\n        reserva: {\n            type: Object,\n            default: () => {\n                return {\n                    quantidadeReservada: '',\n                    preenchimento: 'AUTOMATICO',\n                    possuiNumerosUtilizados:false\n                }\n            }\n        }\n    },\n    watch: {\n        reserva(reserva) {\n            this.reservaEdicao = {...reserva}\n        }\n    },\n    data() {\n        return {\n            proximoNumeroDisponivel: '',\n            reservaEdicao: {},\n            tipoReserva: [{text: 'Automático', value: 'AUTOMATICO'}, {text: 'Manual', value: 'MANUAL'}],\n            possuiNumerosUtilizados:false\n        }\n    },\n    updated(){\n        this.verificarNumeroReservaUtilizando()\n    },\n    computed: {\n        ehTipoManual() {\n            return this.reservaEdicao.preenchimento === 'MANUAL'\n        },\n        quantidadeDigitosNumeroPatrimonio() {\n            return this.$store.state.parametros.parametros.quantidadeDigitosNumeroPatrimonio\n        }\n    },\n    async mounted() {\n        this.reservaEdicao = {...this.reserva}\n        await this.buscarProximoNumeroDisponivelDaReserva()\n    },\n    methods: {\n        ...mapActions([\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.EDITAR_RESERVA,\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.BUSCAR_PROXIMO_NUMERO_DISPONIVEL,\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.VERIFICAR_RESERVA_POSSUI_NUMERO_UTILIZADO,\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.DELETAR_RESERVA\n        ]),\n        resetarReserva() {\n            this.reservaEdicao.quantidadeReservada = this.reserva.quantidadeReservada\n            this.reservaEdicao.numeroInicio = this.reserva.numeroInicio\n            this.reservaEdicao.numeroFim = this.reserva.numeroFim\n        },\n        async verificarNumeroReservaUtilizando() {\n            let {possuiNumerosUtilizados} = await this.verificarReservaPossuiNumeroUtilizado(this.reservaId)\n            this.possuiNumerosUtilizados = possuiNumerosUtilizados\n        },\n        async buscarProximoNumeroDisponivelDaReserva() {\n            const resultado = await this.buscarProximoNumeroDisponivel()\n            this.proximoNumeroDisponivel = resultado.proximoNumero\n            if (!this.reservaEdicao.numeroInicio) {\n                this.reservaEdicao.numeroInicio = resultado.proximoNumero\n            }\n        },\n        async editar() {\n            if (await this.validarDadosFormulario() && this.validarQuantidade()) {\n                const reservaAtualizada = await this.editarReserva(this.reservaEdicao)\n\n                if (reservaAtualizada) {\n                    this.$emit('recarregarDadosReserva')\n                    this.mostrarNotificacaoSucessoDefault()\n                    await this.buscarProximoNumeroDisponivelDaReserva()\n                }\n            }\n        },\n        validarQuantidade() {\n            if(this.reservaEdicao && this.reservaEdicao.quantidadeReservada  > 999999999) {\n                this.mostrarNotificacaoErro('Quantidade de números por intervalo ultrapassada')\n                return false\n            }\n            return true\n        },\n        async removerReserva() {\n            await this.deletarReserva(this.reserva.id)\n            await this.$router.push({name:'ReservaListagem'})\n            this.mostrarNotificacaoSucessoDefault()\n        },\n        calcularQuantidadeIntervaloManual() {\n            if (this.ehTipoManual && this.reservaEdicao) {\n                const numeroInicio = this.reservaEdicao.numeroInicio\n                const numeroFim = this.reservaEdicao.numeroFim\n                if (numeroInicio && numeroFim && numeroFim >= numeroInicio) {\n                    this.reservaEdicao.quantidadeReservada = (numeroFim - numeroInicio) + 1\n                } else {\n                    this.reservaEdicao.quantidadeReservada = ''\n                }\n            }\n        },\n        async validarDadosFormulario() {\n            return await this.$validator.validateAll()\n        }\n    }\n}\n",{"version":3,"sources":["ReservaDadosGeraisEdicao.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReservaDadosGeraisEdicao.vue","sourceRoot":"src/views/pages/configuracao/reserva/global/edicao","sourcesContent":["<template>\n    <div>\n        <v-container fluid white>\n            <v-row class=\"ma-0 ml-2\">\n                <v-col>\n                    <v-card\n                        flat tile\n                        class=\"pa-2 text--darken-1 grey--text text-body-2 font-weight-bold\">\n                        {{ 'Reserva: ' + reservaEdicao.codigo }}\n                    </v-card>\n                </v-col>\n                <v-col md=\"3\" sm=\"2\" class=\"d-flex justify-end   pr-6\">\n                    <botao-remover @remover=\"removerReserva\" v-if=\"!possuiNumerosUtilizados\"/>\n                </v-col>\n            </v-row>\n            <v-divider/>\n            <v-row>\n                <v-col :cols=\"ehTipoManual ? 10 : 7\" class=\"\">\n                    <v-form ref=\"form\" class=\"az-form-content nova-reserva ml-2 d-flex\">\n                        <v-row>\n                            <v-col cols=\"12\" :md=\"ehTipoManual ? 3 : 4\">\n                                <v-select\n                                    flat\n                                    name=\"preenchimento\"\n                                    v-validate=\"'required'\"\n                                    :error-messages=\"errors.collect('preenchimento')\"\n                                    v-model=\"reservaEdicao.preenchimento\"\n                                    item-text=\"text\"\n                                    item-value=\"value\"\n                                    :items=\"tipoReserva\"\n                                    @change=\"resetarReserva\">\n                                    <template v-slot:label>\n                                        Preenchimento\n                                        <span class=\"ml-1 red--text\">*</span>\n                                    </template>\n                                </v-select>\n                            </v-col>\n                            <v-col cols=\"12\" md=\"4\" v-if=\"!ehTipoManual\">\n                                <v-text-field\n                                    v-model=\"reservaEdicao.quantidadeReservada\"\n                                    name=\"quantidade\"\n                                    key=\"quantidade\"\n                                    v-validate=\"`required|integer|max:${quantidadeDigitosNumeroPatrimonio}`\"\n                                    type=\"number\"\n                                    :error-messages=\"errors.collect('quantidade')\"\n                                    placeholder=\"Informe a quantidade\">\n                                    <template v-slot:label>\n                                        Quantidade\n                                        <span class=\"ml-1 red--text\">*</span>\n                                    </template>\n                                </v-text-field>\n                            </v-col>\n                            <v-row v-else class=\"ma-0\" style=\"display: contents\">\n                                <v-col cols=\"12\" md=\"2\">\n                                    <v-text-field\n                                        v-model=\"reservaEdicao.numeroInicio\"\n                                        name=\"número inicial\"\n                                        key=\"numero-inicial\"\n                                        v-validate=\"`required|integer|max:${quantidadeDigitosNumeroPatrimonio}`\"\n                                        type=\"number\"\n                                        :error-messages=\"errors.collect('número inicial')\"\n                                        placeholder=\"00\"\n                                        :hint=\"'Próxima Numeração: ' + proximoNumeroDisponivel\"\n                                        @input=\"calcularQuantidadeIntervaloManual\">\n                                        <template v-slot:label>\n                                            Intervalo\n                                            <span class=\"ml-1 red--text\">*</span>\n                                        </template>\n                                    </v-text-field>\n                                </v-col>\n                                <span class=\"intervalo\">a</span>\n                                <v-col cols=\"12\" md=\"2\">\n                                    <v-text-field\n                                        v-model=\"reservaEdicao.numeroFim\"\n                                        name=\"número final\"\n                                        key=\"numero-final\"\n                                        type=\"number\"\n                                        v-validate=\"`required|integer|max:${quantidadeDigitosNumeroPatrimonio}`\"\n                                        :error-messages=\"errors.collect('número final')\"\n                                        placeholder=\"00\"\n                                        @input=\"calcularQuantidadeIntervaloManual\"/>\n                                </v-col>\n                                <v-col cols=\"12\" md=\"2\">\n                                    <v-text-field\n                                        label=\"Quantidade\"\n                                        placeholder=\" \"\n                                        key=\"quantidade-label\"\n                                        :value=\"reservaEdicao.quantidadeReservada\"\n                                        disabled\n                                    ></v-text-field>\n                                </v-col>\n                                <v-col md=\"1\" cols=\"12\" class=\"d-flex align-center mb-2\">\n                                    <v-btn\n                                        outlined\n                                        @click=\"editar\"\n                                        elevation=\"0\"\n                                        color=\"primary\"\n                                        min-width=\"50\">\n                                        <v-icon>check</v-icon>\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                            <v-col v-if=\"!ehTipoManual\" md=\"2\" cols=\"12\" class=\"d-flex align-center mb-2\">\n                                <v-btn\n                                    outlined\n                                    @click=\"editar\"\n                                    elevation=\"0\"\n                                    color=\"primary\"\n                                    min-width=\"50\">\n                                    <v-icon>check</v-icon>\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-form>\n                </v-col>\n            </v-row>\n            <v-divider/>\n            <reserva-intervalo-dados-gerais-novo :reserva-id=\"reservaId\"/>\n        </v-container>\n    </div>\n</template>\n\n<script>\n    import {actionTypes} from '@/core/constants'\n    import BotaoRemover from '@/views/components/botoes/BotaoRemover'\n    import {mapActions} from 'vuex'\n    import ReservaIntervaloDadosGeraisNovo\n        from '@/views/pages/configuracao/reserva/global/edicao/intervalo/novo/ReservaIntervaloDadosGeraisNovo'\n\n    export default {\n        name: 'ReservaDadosGeraisEdicao',\n        components: {ReservaIntervaloDadosGeraisNovo,BotaoRemover},\n        props: {\n            reservaId: {\n                type: String,\n                required: true\n            },\n            reserva: {\n                type: Object,\n                default: () => {\n                    return {\n                        quantidadeReservada: '',\n                        preenchimento: 'AUTOMATICO',\n                        possuiNumerosUtilizados:false\n                    }\n                }\n            }\n        },\n        watch: {\n            reserva(reserva) {\n                this.reservaEdicao = {...reserva}\n            }\n        },\n        data() {\n            return {\n                proximoNumeroDisponivel: '',\n                reservaEdicao: {},\n                tipoReserva: [{text: 'Automático', value: 'AUTOMATICO'}, {text: 'Manual', value: 'MANUAL'}],\n                possuiNumerosUtilizados:false\n            }\n        },\n        updated(){\n            this.verificarNumeroReservaUtilizando()\n        },\n        computed: {\n            ehTipoManual() {\n                return this.reservaEdicao.preenchimento === 'MANUAL'\n            },\n            quantidadeDigitosNumeroPatrimonio() {\n                return this.$store.state.parametros.parametros.quantidadeDigitosNumeroPatrimonio\n            }\n        },\n        async mounted() {\n            this.reservaEdicao = {...this.reserva}\n            await this.buscarProximoNumeroDisponivelDaReserva()\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.EDITAR_RESERVA,\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.BUSCAR_PROXIMO_NUMERO_DISPONIVEL,\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.VERIFICAR_RESERVA_POSSUI_NUMERO_UTILIZADO,\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.DELETAR_RESERVA\n            ]),\n            resetarReserva() {\n                this.reservaEdicao.quantidadeReservada = this.reserva.quantidadeReservada\n                this.reservaEdicao.numeroInicio = this.reserva.numeroInicio\n                this.reservaEdicao.numeroFim = this.reserva.numeroFim\n            },\n            async verificarNumeroReservaUtilizando() {\n                let {possuiNumerosUtilizados} = await this.verificarReservaPossuiNumeroUtilizado(this.reservaId)\n                this.possuiNumerosUtilizados = possuiNumerosUtilizados\n            },\n            async buscarProximoNumeroDisponivelDaReserva() {\n                const resultado = await this.buscarProximoNumeroDisponivel()\n                this.proximoNumeroDisponivel = resultado.proximoNumero\n                if (!this.reservaEdicao.numeroInicio) {\n                    this.reservaEdicao.numeroInicio = resultado.proximoNumero\n                }\n            },\n            async editar() {\n                if (await this.validarDadosFormulario() && this.validarQuantidade()) {\n                    const reservaAtualizada = await this.editarReserva(this.reservaEdicao)\n\n                    if (reservaAtualizada) {\n                        this.$emit('recarregarDadosReserva')\n                        this.mostrarNotificacaoSucessoDefault()\n                        await this.buscarProximoNumeroDisponivelDaReserva()\n                    }\n                }\n            },\n            validarQuantidade() {\n                if(this.reservaEdicao && this.reservaEdicao.quantidadeReservada  > 999999999) {\n                    this.mostrarNotificacaoErro('Quantidade de números por intervalo ultrapassada')\n                    return false\n                }\n                return true\n            },\n            async removerReserva() {\n                await this.deletarReserva(this.reserva.id)\n                await this.$router.push({name:'ReservaListagem'})\n                this.mostrarNotificacaoSucessoDefault()\n            },\n            calcularQuantidadeIntervaloManual() {\n                if (this.ehTipoManual && this.reservaEdicao) {\n                    const numeroInicio = this.reservaEdicao.numeroInicio\n                    const numeroFim = this.reservaEdicao.numeroFim\n                    if (numeroInicio && numeroFim && numeroFim >= numeroInicio) {\n                        this.reservaEdicao.quantidadeReservada = (numeroFim - numeroInicio) + 1\n                    } else {\n                        this.reservaEdicao.quantidadeReservada = ''\n                    }\n                }\n            },\n            async validarDadosFormulario() {\n                return await this.$validator.validateAll()\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\">\n    .nova-reserva\n        padding 3px 0 3px 20px\n\n        .v-messages__message\n            font-size 10px\n\n        .v-select__selection\n            font-size 13px\n            color #777\n\n    .sem-orgao-adicionado\n        min-height 55vh\n        display flex\n        align-items center\n\n    .intervalo\n        margin-top 10px\n        display flex\n        font-size 13px\n        align-items center\n        color #777\n</style>\n"]}]}