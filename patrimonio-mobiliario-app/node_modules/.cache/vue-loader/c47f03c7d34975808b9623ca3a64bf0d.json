{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/documentos/ListagemDocumentosItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/documentos/ListagemDocumentosItem.vue","mtime":1616512748425},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\nimport {createNamespacedHelpers} from 'vuex'\nimport BotaoRemover from '@/views/components/botoes/BotaoRemover'\nimport LabelPersonalizado from '@/views/components/label/LabelPersonalizado'\n\nconst {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n\nexport default {\n    components: {BotaoRemover, LabelPersonalizado},\n    props: {\n        value: {\n            default: () => {\n                return {}\n            },\n        },\n        tipoDocumento: {\n            type: Array,\n            default: () => {\n                return []\n            },\n        },\n        index: {\n            type: Number,\n        },\n    },\n    $_veeValidate: {\n        validator: 'new',\n    },\n    data() {\n        return {\n            EhUsuarioNormal: true,\n            errorObrigatoriedadeAnexo: 0,\n            errorTamanhoExcedido: 0,\n            validateRequeridAzMoney: 0,\n            regrasAnexo: '',\n            nomeAnexo: '',\n            deletarBotao: 'grey',\n            apagar: true,\n            todosCamposObrigatorios: false,\n            incorporacaoId: null,\n            nomeTela: 'DOCUMENTOS'\n        }\n    },\n    async mounted() {\n        this.setIncorporacaoId()\n        this.tratarPerfilEhUsuarioNormal()\n        this.tratarCampoAnexo()\n        await this.verificarCamposObrigatorios()\n        if (!this.verificaPermissaoEdicao) {\n            this.documentosIncorporacaoVisualizacao()\n        }\n    },\n    watch: {\n        async 'value.uriAnexo'() {\n            this.tratarCampoAnexo()\n            if (typeof this.value.uriAnexo == 'string') {\n                await this.tratarEventoEdicaoCampo()\n            }\n        },\n    },\n    computed: {\n        ...mapGetters([\n            'getObrigatorioRotulosPersonalizados',\n            'getDocumentoTodosObrigatoriosValidado',\n            'getDocumentoNumeroTipoObrigatorioValidado'\n        ]),\n        verificaPermissaoEdicao() {\n            return AzHasPermissions(this.$store.state.loki.user.authorities, [\n                'Mobiliario.Normal',\n            ])\n        },\n    },\n    methods: {\n        tratarPerfilEhUsuarioNormal() {\n            this.EhUsuarioNormal = AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Normal'])\n        },\n        tratarCampoAnexo() {\n            if (typeof this.value.uriAnexo == 'string') {\n                this.nomeAnexo = this.value.uriAnexo.split('/')[1]\n            }\n        },\n        anularCampoAnexo() {\n            if (this.verificaPermissaoEdicao) {\n                this.value.uriAnexo = null\n                this.errorObrigatoriedadeAnexo = 0\n                this.errorTamanhoExcedido = 0\n            }\n        },\n        async verificarCamposObrigatorios() {\n            const documentoEncontrado = this.tipoDocumento.find(\n                element => element.id === this.value.tipo\n            )\n            if (documentoEncontrado &&\n                (documentoEncontrado.descricao === 'Nota Fiscal' || documentoEncontrado.descricao === 'Nota de Empenho')) {\n                this.todosCamposObrigatorios = true\n                this.validateRequeridAzMoney++\n                await this.$validator._base.validateAll()\n                return true\n            } else {\n                this.todosCamposObrigatorios = false\n                return true\n            }\n        },\n        async tratarEventoEdicaoCampo() {\n            if (\n                this.todosCamposObrigatorios ||\n                this.getObrigatorioRotulosPersonalizados('valor', this.nomeTela)\n            ) {\n                this.validateRequeridAzMoney++\n            }\n            if (this.errors.collect('uriAnexo')) {\n                this.errorObrigatoriedadeAnexo = 1\n            }\n            const verificarCamposObrigatorios = await this.verificarCamposObrigatorios()\n            if (verificarCamposObrigatorios && this.verificaPermissaoEdicao) {\n                this.retiraEspacosVazios()\n                await this.$validator._base.validateAll()\n\n                if(this.todosCamposObrigatorios) {\n                    if (this.getDocumentoTodosObrigatoriosValidado(this.value,this.nomeTela)) {\n                        this.$emit('salvar', this.value)\n                    }\n                }else{\n                    if (this.getDocumentoNumeroTipoObrigatorioValidado(this.value,this.nomeTela)) {\n                        this.$emit('salvar', this.value)\n                    }\n                }\n            }\n        },\n        retiraEspacosVazios() {\n            if (this.value.numero) {\n                this.value.numero = this.value.numero.trim()\n            }\n        },\n        baixarAnexo() {\n            this.$emit('baixarAnexo', this.value.uriAnexo)\n        },\n        async tratarEventoSalvarAnexo() {\n            if(this.value && this.value.uriAnexo) {\n                if (this.extensaoArquivoValida(this.value.uriAnexo) === -1) {\n                    this.mostrarNotificacaoErro(\n                        'Extensão do arquivo inválida. Envie arquivos nos seguintes formatos .pdf .jpg .png'\n                    )\n                    this.value.uriAnexo = null\n                } else {\n                    if (this.validarTamanhoMaximo(this.value.uriAnexo.size)) {\n                        this.errorTamanhoExcedido = 1\n                        this.value.uriAnexo = await null\n                        setTimeout(() => {\n                            this.errorTamanhoExcedido = 0\n                            this.errorObrigatoriedadeAnexo = 1\n                            this.$validator._base.validateAll()\n                        }, 3000)\n                    } else {\n                        await this.$emit('salvarAnexo')\n                    }\n                }\n            }\n        },\n        extensaoArquivoValida(nomeArquivo) {\n            const extensaoAceitas = [\n                '.pdf',\n                '.PDF',\n                '.jpg',\n                '.JPG',\n                '.png',\n                '.PNG',\n                '.jpeg',\n                '.JPEG',\n            ]\n            const extensao = nomeArquivo.name.substr(\n                nomeArquivo.name.lastIndexOf('.'),\n                nomeArquivo.name.length\n            )\n            return extensaoAceitas.indexOf(extensao)\n        },\n        validarTamanhoMaximo(tamanhoAnexo) {\n            return (tamanhoAnexo >= 15116247)\n        },\n        removerDocumento(documento) {\n            this.$emit('removerDocumento', documento)\n        },\n        setIncorporacaoId() {\n            this.incorporacaoId = this.$route.params.incorporacaoId\n        },\n        documentosIncorporacaoVisualizacao() {\n            this.$router.replace({\n                name: 'VisualizarIncorporacaoDocumentos',\n                params: {\n                    incorporacaoId: this.incorporacaoId\n                }\n            })\n        }\n    },\n}\n",{"version":3,"sources":["ListagemDocumentosItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListagemDocumentosItem.vue","sourceRoot":"src/views/pages/patrimonios/incorporacao/edicao/documentos","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"9\" lg=\"11\" xs=\"12\">\n            <v-card class=\"elevation-0 documento\">\n                <v-container fluid>\n                    <v-form enctype=\"multipart/form-data\" class=\"az-form-content pb-0\" lazy-validation ref=\"form\">\n                        <v-row class=\"ma-0\">\n                            <v-col cols=\"12\" lg=\"2\" sm=\"12\" xs=\"12\" md=\"2\" :class=\"{ active: !verificaPermissaoEdicao}\">\n                                <v-text-field\n                                    v-model=\"value.numero\"\n                                    name=\"numero\"\n                                    maxlength=\"50\"\n                                    v-validate=\"'required'\"\n                                    :error-messages=\"errors.collect('numero')\"\n                                    :counter=\"50\"\n                                    :disabled=\"!verificaPermissaoEdicao\"\n                                    placeholder=\"Informe o número\"\n                                    @blur=\"tratarEventoEdicaoCampo\">\n                                    <template v-slot:label>\n                                        <label-personalizado campo=\"numero\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                                    </template>\n                                </v-text-field>\n                            </v-col>\n                            <v-col cols=\"12\" lg=\"2\" sm=\"12\" xs=\"12\" md=\"2\" :class=\"{ active: !verificaPermissaoEdicao}\">\n                                <az-date\n                                    v-model=\"value.data\"\n                                    date\n                                    :is-disabled=\"!verificaPermissaoEdicao\"\n                                    v-mask=\"'##/##/####'\"\n                                    name-date=\"data\"\n                                    @input=\"tratarEventoEdicaoCampo\"\n                                    :is-required=\"todosCamposObrigatorios || getObrigatorioRotulosPersonalizados('data', nomeTela)\">\n                                    <template v-slot:label-date>\n                                        <label-personalizado campo=\"data\" :tela=\"nomeTela\"\n                                                             :permissaoEdicao=\"todosCamposObrigatorios || getObrigatorioRotulosPersonalizados('data', nomeTela)\"\n                                                             :obrigatorioPorPadrao=\"todosCamposObrigatorios\"/>\n                                    </template>\n                                </az-date>\n                            </v-col>\n                            <v-col cols=\"12\" lg=\"2\" sm=\"12\" xs=\"12\" md=\"2\" @focusout=\"tratarEventoEdicaoCampo\" :class=\"{ active: !verificaPermissaoEdicao}\">\n                                <az-money\n                                    v-model=\"value.valor\"\n                                    :required=\"todosCamposObrigatorios || getObrigatorioRotulosPersonalizados('valor', nomeTela)\"\n                                    requeridMessage=\"O campo é obrigatório\"\n                                    :disabled=\"!verificaPermissaoEdicao\"\n                                    :validation-field=\"validateRequeridAzMoney\"\n                                    :maxLength=\"18\"\n                                    :name=\"'valor'+index\"\n                                    placeholder=\"Informe o valor\">\n                                    <template v-slot:label>\n                                        <label-personalizado campo=\"valor\" :tela=\"nomeTela\"\n                                                             :permissaoEdicao=\"todosCamposObrigatorios || getObrigatorioRotulosPersonalizados('valor', nomeTela)\"\n                                                             :obrigatorioPorPadrao=\"todosCamposObrigatorios\"/>\n                                    </template>\n                                </az-money>\n                            </v-col>\n                            <v-col cols=\"12\" lg=\"3\" sm=\"12\" xs=\"12\" md=\"2\" :class=\"{ active: !verificaPermissaoEdicao}\">\n                                <v-autocomplete\n                                    v-model=\"value.tipo\"\n                                    :items=\"tipoDocumento\"\n                                    item-text=\"descricao\"\n                                    item-value=\"id\"\n                                    name=\"tipo\"\n                                    no-data-text=\"Não há tipos com esse nome\"\n                                    placeholder=\"Selecione\"\n                                    :error-messages=\"errors.collect('tipo')\"\n                                    :disabled=\"!verificaPermissaoEdicao\"\n                                    v-validate=\"'required'\"\n                                    @keydown.enter=\"tratarEventoEdicaoCampo\"\n                                    @blur=\"tratarEventoEdicaoCampo\"\n                                    @input=\"tratarEventoEdicaoCampo\">\n                                    <template v-slot:label>\n                                        <label-personalizado campo=\"tipo\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                                    </template>\n                                </v-autocomplete>\n                            </v-col>\n                            <v-col cols=\"12\" lg=\"3\" sm=\"12\" xs=\"12\" md=\"4\" :class=\"{ active: !verificaPermissaoEdicao}\">\n                                <v-file-input\n                                    class=\"mt-3\"\n                                    v-model=\"value.uriAnexo\"\n                                    v-show=\"!value.uriAnexo\"\n                                    name=\"uriAnexo\"\n                                    :error-messages=\"errorTamanhoExcedido === 1 ? 'Tamanho permitido: 15MB' : errors.collect('uriAnexo')\"\n                                    file\n                                    dense\n                                    outlined\n                                    append-icon=\"fa-file-upload\"\n                                    v-validate=\"getObrigatorioRotulosPersonalizados('uriAnexo', this.nomeTela) ? 'required' : ''\"\n                                    prepend-icon\n                                    accept=\"image/png, image/jpeg, image/jpg, application/pdf\"\n                                    placeholder=\"Selecione o Arquivo\"\n                                    @change=\"tratarEventoSalvarAnexo\">\n                                    <template v-slot:label>\n                                        <label-personalizado campo=\"uriAnexo\" :tela=\"nomeTela\"/>\n                                    </template>\n                                </v-file-input>\n                                <p class=\"tamanhoPermitidoClass\"\n                                   v-if=\" !value.uriAnexo && errorTamanhoExcedido!==1 && errorObrigatoriedadeAnexo!==1\">\n                                    Tamanho permitido: 15MB</p>\n                                <v-text-field\n                                    outlined\n                                    readonly\n                                    v-if=\"value.uriAnexo\"\n                                    :value=\"nomeAnexo\">\n                                    <template v-slot:label>\n                                        <label-personalizado campo=\"uriAnexo\" :tela=\"nomeTela\"/>\n                                    </template>\n                                    <template v-slot:append>\n                                        <v-tooltip top>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <a\n                                                    v-on=\"on\"\n                                                    slot=\"activator\"\n                                                    v-on:click=\"anularCampoAnexo\"\n                                                    target=\"_blank\"\n                                                    class=\"az-action-link-icon mt-1\"\n                                                >\n                                                    <i v-if=\"EhUsuarioNormal\" class=\"fas fa-times-circle\"></i>\n                                                </a>\n                                            </template>\n                                            Remover\n                                        </v-tooltip>\n                                    </template>\n                                    <template v-slot:append-outer>\n                                        <v-tooltip v-if=\"value.id\" top>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <a\n                                                    v-on=\"on\"\n                                                    slot=\"activator\"\n                                                    :href=\"criarLinkDownload(value.uriAnexo)\"\n                                                    target=\"_blank\"\n                                                    class=\"az-action-link-icon mt-1\"\n                                                >\n                                                    <i class=\"fas fa-download\"></i>\n                                                </a>\n                                            </template>\n                                            Download\n                                        </v-tooltip>\n                                    </template>\n                                </v-text-field>\n                            </v-col>\n                        </v-row>\n                    </v-form>\n                </v-container>\n            </v-card>\n        </v-col>\n        <v-col align=\"center\" class=\"mt-12\" lg=\"1\" md=\"1\" ml-1 pl-5 sm=\"1\" xs=\"12\">\n            <botao-remover\n                :color=\"deletarBotao\"\n                icon=\"fas fa-minus-circle\"\n                size=\"22\"\n                @remover=\"removerDocumento(value)\"/>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import {createNamespacedHelpers} from 'vuex'\n    import BotaoRemover from '@/views/components/botoes/BotaoRemover'\n    import LabelPersonalizado from '@/views/components/label/LabelPersonalizado'\n\n    const {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n\n    export default {\n        components: {BotaoRemover, LabelPersonalizado},\n        props: {\n            value: {\n                default: () => {\n                    return {}\n                },\n            },\n            tipoDocumento: {\n                type: Array,\n                default: () => {\n                    return []\n                },\n            },\n            index: {\n                type: Number,\n            },\n        },\n        $_veeValidate: {\n            validator: 'new',\n        },\n        data() {\n            return {\n                EhUsuarioNormal: true,\n                errorObrigatoriedadeAnexo: 0,\n                errorTamanhoExcedido: 0,\n                validateRequeridAzMoney: 0,\n                regrasAnexo: '',\n                nomeAnexo: '',\n                deletarBotao: 'grey',\n                apagar: true,\n                todosCamposObrigatorios: false,\n                incorporacaoId: null,\n                nomeTela: 'DOCUMENTOS'\n            }\n        },\n        async mounted() {\n            this.setIncorporacaoId()\n            this.tratarPerfilEhUsuarioNormal()\n            this.tratarCampoAnexo()\n            await this.verificarCamposObrigatorios()\n            if (!this.verificaPermissaoEdicao) {\n                this.documentosIncorporacaoVisualizacao()\n            }\n        },\n        watch: {\n            async 'value.uriAnexo'() {\n                this.tratarCampoAnexo()\n                if (typeof this.value.uriAnexo == 'string') {\n                    await this.tratarEventoEdicaoCampo()\n                }\n            },\n        },\n        computed: {\n            ...mapGetters([\n                'getObrigatorioRotulosPersonalizados',\n                'getDocumentoTodosObrigatoriosValidado',\n                'getDocumentoNumeroTipoObrigatorioValidado'\n            ]),\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, [\n                    'Mobiliario.Normal',\n                ])\n            },\n        },\n        methods: {\n            tratarPerfilEhUsuarioNormal() {\n                this.EhUsuarioNormal = AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Normal'])\n            },\n            tratarCampoAnexo() {\n                if (typeof this.value.uriAnexo == 'string') {\n                    this.nomeAnexo = this.value.uriAnexo.split('/')[1]\n                }\n            },\n            anularCampoAnexo() {\n                if (this.verificaPermissaoEdicao) {\n                    this.value.uriAnexo = null\n                    this.errorObrigatoriedadeAnexo = 0\n                    this.errorTamanhoExcedido = 0\n                }\n            },\n            async verificarCamposObrigatorios() {\n                const documentoEncontrado = this.tipoDocumento.find(\n                    element => element.id === this.value.tipo\n                )\n                if (documentoEncontrado &&\n                    (documentoEncontrado.descricao === 'Nota Fiscal' || documentoEncontrado.descricao === 'Nota de Empenho')) {\n                    this.todosCamposObrigatorios = true\n                    this.validateRequeridAzMoney++\n                    await this.$validator._base.validateAll()\n                    return true\n                } else {\n                    this.todosCamposObrigatorios = false\n                    return true\n                }\n            },\n            async tratarEventoEdicaoCampo() {\n                if (\n                    this.todosCamposObrigatorios ||\n                    this.getObrigatorioRotulosPersonalizados('valor', this.nomeTela)\n                ) {\n                    this.validateRequeridAzMoney++\n                }\n                if (this.errors.collect('uriAnexo')) {\n                    this.errorObrigatoriedadeAnexo = 1\n                }\n                const verificarCamposObrigatorios = await this.verificarCamposObrigatorios()\n                if (verificarCamposObrigatorios && this.verificaPermissaoEdicao) {\n                    this.retiraEspacosVazios()\n                    await this.$validator._base.validateAll()\n\n                    if(this.todosCamposObrigatorios) {\n                        if (this.getDocumentoTodosObrigatoriosValidado(this.value,this.nomeTela)) {\n                            this.$emit('salvar', this.value)\n                        }\n                    }else{\n                        if (this.getDocumentoNumeroTipoObrigatorioValidado(this.value,this.nomeTela)) {\n                            this.$emit('salvar', this.value)\n                        }\n                    }\n                }\n            },\n            retiraEspacosVazios() {\n                if (this.value.numero) {\n                    this.value.numero = this.value.numero.trim()\n                }\n            },\n            baixarAnexo() {\n                this.$emit('baixarAnexo', this.value.uriAnexo)\n            },\n            async tratarEventoSalvarAnexo() {\n                if(this.value && this.value.uriAnexo) {\n                    if (this.extensaoArquivoValida(this.value.uriAnexo) === -1) {\n                        this.mostrarNotificacaoErro(\n                            'Extensão do arquivo inválida. Envie arquivos nos seguintes formatos .pdf .jpg .png'\n                        )\n                        this.value.uriAnexo = null\n                    } else {\n                        if (this.validarTamanhoMaximo(this.value.uriAnexo.size)) {\n                            this.errorTamanhoExcedido = 1\n                            this.value.uriAnexo = await null\n                            setTimeout(() => {\n                                this.errorTamanhoExcedido = 0\n                                this.errorObrigatoriedadeAnexo = 1\n                                this.$validator._base.validateAll()\n                            }, 3000)\n                        } else {\n                            await this.$emit('salvarAnexo')\n                        }\n                    }\n                }\n            },\n            extensaoArquivoValida(nomeArquivo) {\n                const extensaoAceitas = [\n                    '.pdf',\n                    '.PDF',\n                    '.jpg',\n                    '.JPG',\n                    '.png',\n                    '.PNG',\n                    '.jpeg',\n                    '.JPEG',\n                ]\n                const extensao = nomeArquivo.name.substr(\n                    nomeArquivo.name.lastIndexOf('.'),\n                    nomeArquivo.name.length\n                )\n                return extensaoAceitas.indexOf(extensao)\n            },\n            validarTamanhoMaximo(tamanhoAnexo) {\n                return (tamanhoAnexo >= 15116247)\n            },\n            removerDocumento(documento) {\n                this.$emit('removerDocumento', documento)\n            },\n            setIncorporacaoId() {\n                this.incorporacaoId = this.$route.params.incorporacaoId\n            },\n            documentosIncorporacaoVisualizacao() {\n                this.$router.replace({\n                    name: 'VisualizarIncorporacaoDocumentos',\n                    params: {\n                        incorporacaoId: this.incorporacaoId\n                    }\n                })\n            }\n        },\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n    .active\n        cursor not-allowed\n\n    .documento\n        border 1px solid #d9d9d9\n\n    .tamanhoPermitidoClass\n        color #a5a5a5\n        margin-top -10px\n        font-size 12px\n</style>\n"]}]}