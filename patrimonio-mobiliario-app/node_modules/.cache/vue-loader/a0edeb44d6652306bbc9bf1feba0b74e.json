{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/botoes/DocumentoButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/botoes/DocumentoButton.vue","mtime":1615564333676},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {actionTypes} from '@/core/constants'\nimport {mapActions} from 'vuex'\n\nexport default {\n    data() {\n        return {\n            items: [\n                { title: 'Termo Responsabilidade',value:'TERMORESPONSABILIDADE' },\n                { title:'Memorando',value:'MEMORANDO'}\n            ],\n            carregando:false\n        }\n    },\n    props:{\n        sizeButton:{\n            type:Number,\n            default:25\n        },\n        visualizacao: {\n            type: Boolean,\n            default: false,\n            required: true\n        },\n        movimentacaoInternaId:{\n            required:true\n        },\n        movimentacaoTipo:{\n            type:String\n        }\n    },\n    methods:{\n        ...mapActions([\n            actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_TERMO_DE_RESPONSABILDADE,\n            actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_MEMORANDO_MOVIMENTACAO_EM_ELABORACAO,\n            actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_MEMORANDO_MOVIMENTACAO_FINALIZADA,\n            actionTypes.MOVIMENTACAO_INTERNA.TEMPORARIA.BUSCAR_TEMPORARIA_POR_ID\n        ]),\n        async tratarEventoGerarDocumento(value){\n            this.desabilitarLoadingGlobal()\n            this.setaCarregando(true)\n            try {\n                if (value === 'TERMORESPONSABILIDADE') {\n                    await this.gerarTermoDeResponsabilida(this.movimentacaoInternaId)\n                } else {\n                    await this.gerarMemorando()\n                }\n                this.setaCarregando(false)\n            } catch (err) {\n                this.setaCarregando(false)\n                this.mostraErro(err)\n            }\n            this.habilitarLoadingGlobal()\n        },\n        mostraErro(err){\n            let dataView = new DataView(err.response.data)\n            let decoder = new TextDecoder('utf8')\n            let response = JSON.parse(decoder.decode(dataView))\n            let message = response['message']\n            this.mostrarNotificacaoErro(message)\n        },\n        setaCarregando(value){\n            this.carregando = value\n        },\n\n        async gerarMemorando() {\n            let movimentacao = await this.buscarTemporariaPorId(this.movimentacaoInternaId)\n            if (movimentacao.tipo === 'TEMPORARIA') {\n                await this.gerarMemorandoParaMovimentacaoTemporaria(movimentacao)\n            }else {\n                await this.gerarMemorandoParaMovimentacaoNaoTemporaria(movimentacao)\n            }\n        },\n        async gerarMemorandoParaMovimentacaoTemporaria(movimentacao) {\n            if (movimentacao.situacao === 'EM_ELABORACAO' || movimentacao.situacao === 'AGUARDANDO_DEVOLUCAO' || movimentacao.situacao === 'DEVOLVIDO_PARCIAL') {\n                await this.gerarMemorandoMovimentacaoEmElaboracao(this.movimentacaoInternaId)\n            }else {\n                await this.gerarMemorandoMovimentacaoFinalizada(this.movimentacaoInternaId)\n            }\n        },\n        async gerarMemorandoParaMovimentacaoNaoTemporaria(movimentacao) {\n            if (movimentacao.situacao === 'EM_ELABORACAO') {\n                await this.gerarMemorandoMovimentacaoEmElaboracao(this.movimentacaoInternaId)\n            }\n\n            else {\n                await this.gerarMemorandoMovimentacaoFinalizada(this.movimentacaoInternaId)\n            }\n        }\n    }\n}\n",{"version":3,"sources":["DocumentoButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DocumentoButton.vue","sourceRoot":"src/views/components/botoes","sourcesContent":["<template>\n    <div class=\"text-start\" v-if=\"visualizacao\">\n        <v-menu offset-y open-on-hover>\n            <template v-slot:activator=\"{on,attrs}\">\n                <v-btn\n                    icon\n                    color=\"white\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    :disabled=\"carregando\"\n                    :loading=\"carregando\">\n                    <v-icon :size=\"sizeButton\">description</v-icon>\n                    <v-icon class=\"ml-5 mt-1\" :size=\"15\">keyboard_arrow_down</v-icon>\n                </v-btn>\n            </template>\n            <v-list>\n                <v-list-item v-for=\"(item, index) in items\" :key=\"index\" link>\n                    <v-list-item-title @click=\"tratarEventoGerarDocumento(item.value)\" :value=\"item\">{{ item.title }}</v-list-item-title>\n                </v-list-item>\n            </v-list>\n        </v-menu>\n    </div>\n    <div v-else>\n        <v-tooltip\n                   nudge-top=\"0\"\n                   top\n                   transition=\"scale-transition\"\n                   origin=\"center center\"\n                   max-width=\"300\">\n            <template v-slot:activator=\"{ on }\">\n                <v-btn\n                    color=\"grey\"\n                    text\n                    v-on=\"on\"\n                    outlined\n                    small\n                    width=\"100\"\n                    class=\"buttonMemorando mr-3 text-body-2\"\n                    @click=\"tratarEventoGerarDocumento('MEMORANDO')\"\n                    :disabled=\"carregando\"\n                    :loading=\"carregando\">\n                    <span class=\"text-capitalize\">Memorando</span>\n                </v-btn>\n            </template>\n            Esse memorando ainda não tem valor contábil final, visto que a movimentação ainda não foi finalizada\n        </v-tooltip>\n    </div>\n</template>\n\n<script>\n    import {actionTypes} from '@/core/constants'\n    import {mapActions} from 'vuex'\n\n    export default {\n        data() {\n            return {\n                items: [\n                    { title: 'Termo Responsabilidade',value:'TERMORESPONSABILIDADE' },\n                    { title:'Memorando',value:'MEMORANDO'}\n                ],\n                carregando:false\n            }\n        },\n        props:{\n            sizeButton:{\n                type:Number,\n                default:25\n            },\n            visualizacao: {\n                type: Boolean,\n                default: false,\n                required: true\n            },\n            movimentacaoInternaId:{\n                required:true\n            },\n            movimentacaoTipo:{\n                type:String\n            }\n        },\n        methods:{\n            ...mapActions([\n                actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_TERMO_DE_RESPONSABILDADE,\n                actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_MEMORANDO_MOVIMENTACAO_EM_ELABORACAO,\n                actionTypes.MOVIMENTACAO_INTERNA.RELATORIO.GERAR_MEMORANDO_MOVIMENTACAO_FINALIZADA,\n                actionTypes.MOVIMENTACAO_INTERNA.TEMPORARIA.BUSCAR_TEMPORARIA_POR_ID\n            ]),\n            async tratarEventoGerarDocumento(value){\n                this.desabilitarLoadingGlobal()\n                this.setaCarregando(true)\n                try {\n                    if (value === 'TERMORESPONSABILIDADE') {\n                        await this.gerarTermoDeResponsabilida(this.movimentacaoInternaId)\n                    } else {\n                        await this.gerarMemorando()\n                    }\n                    this.setaCarregando(false)\n                } catch (err) {\n                    this.setaCarregando(false)\n                    this.mostraErro(err)\n                }\n                this.habilitarLoadingGlobal()\n            },\n            mostraErro(err){\n                let dataView = new DataView(err.response.data)\n                let decoder = new TextDecoder('utf8')\n                let response = JSON.parse(decoder.decode(dataView))\n                let message = response['message']\n                this.mostrarNotificacaoErro(message)\n            },\n            setaCarregando(value){\n                this.carregando = value\n            },\n\n            async gerarMemorando() {\n                let movimentacao = await this.buscarTemporariaPorId(this.movimentacaoInternaId)\n                if (movimentacao.tipo === 'TEMPORARIA') {\n                    await this.gerarMemorandoParaMovimentacaoTemporaria(movimentacao)\n                }else {\n                    await this.gerarMemorandoParaMovimentacaoNaoTemporaria(movimentacao)\n                }\n            },\n            async gerarMemorandoParaMovimentacaoTemporaria(movimentacao) {\n                if (movimentacao.situacao === 'EM_ELABORACAO' || movimentacao.situacao === 'AGUARDANDO_DEVOLUCAO' || movimentacao.situacao === 'DEVOLVIDO_PARCIAL') {\n                    await this.gerarMemorandoMovimentacaoEmElaboracao(this.movimentacaoInternaId)\n                }else {\n                    await this.gerarMemorandoMovimentacaoFinalizada(this.movimentacaoInternaId)\n                }\n            },\n            async gerarMemorandoParaMovimentacaoNaoTemporaria(movimentacao) {\n                if (movimentacao.situacao === 'EM_ELABORACAO') {\n                    await this.gerarMemorandoMovimentacaoEmElaboracao(this.movimentacaoInternaId)\n                }\n\n                else {\n                    await this.gerarMemorandoMovimentacaoFinalizada(this.movimentacaoInternaId)\n                }\n            }\n        }\n    }\n</script>\n"]}]}