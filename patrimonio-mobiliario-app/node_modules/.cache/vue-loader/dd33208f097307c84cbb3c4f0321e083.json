{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/viewer/AzPdfDocumentViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/viewer/AzPdfDocumentViewer.vue","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Toolbar from './Toolbar'\nimport LoadingPlaceHolder from './LoadingPlaceHolder'\nimport LoadingPrint from './LoadingPrint'\nimport PrintService from './PrintService'\nimport PDFJSLib from 'pdfjs-dist/build/pdf'\nimport { PDFJS as PDFJSViewer } from 'pdfjs-dist/web/pdf_viewer.js'\nexport default {\n    components: {\n        Toolbar,\n        LoadingPlaceHolder,\n        LoadingPrint\n    },\n    mounted() {\n        this.start()\n        window.addEventListener('resize', this.updateScaleType)\n    },\n    destroyed() {\n        window.removeEventListener('resize', this.updateScaleType)\n    },\n    watch: {\n        src() {\n            this.start()\n        }\n    },\n    methods: {\n        start() {\n            this.startLoadingPlaceHolderIfNecessary()\n            this.getPdfContainer()\n            this.createEventBus()\n            this.createPdfLinkService()\n            this.createPdfViewer()\n            this.renderDocument()\n        },\n        getPdfContainer() {\n            this.pdf.container = document.querySelector('#az-pdf-viewer')\n        },\n        createEventBus() {\n            const eventBus = new PDFJSViewer.EventBus()\n            eventBus.on('pagesinit', this.pagesInitEventHandler)\n            eventBus.on('scalechange', this.scaleChangeEventHandler)\n            eventBus.on('pagechange', this.pageChangeEventHandler)\n            this.pdf.eventBus = eventBus\n        },\n        pagesInitEventHandler(e) {\n            this.setInitialPagination(e.source)\n            this.updateScaleType()\n            this.setInitialScale(e.source)\n        },\n        scaleChangeEventHandler(e) {\n            this.scale.current = e.scale\n            if (e.presetValue) this.scale.type = e.presetValue\n        },\n        pageChangeEventHandler(e) {\n            this.pagination.current = e.pageNumber\n        },\n        createPdfLinkService() {\n            this.pdf.linkService = new PDFJSViewer.PDFLinkService({\n                eventBus: this.pdf.eventBus\n            })\n        },\n        createPdfViewer() {\n            this.pdf.viewer = new PDFJSViewer.PDFViewer({\n                container: this.pdf.container,\n                eventBus: this.pdf.eventBus,\n                linkService: this.pdf.linkService\n            })\n        },\n        renderDocument() {\n            if (!this.src) return this.stopLoadingPlaceHolder()\n            PDFJSLib.getDocument({\n                url: this.src,\n                httpHeaders: this.httpHeader,\n                withCredentials: true\n            })\n                .then(pdf => {\n                    this.pdf.linkService.setViewer(this.pdf.viewer)\n                    this.pdf.linkService.setDocument(pdf, null)\n                    this.pdf.viewer.setDocument(pdf)\n                    this.stopLoadingPlaceHolder()\n                })\n                .catch(error => {\n                    this.stopLoadingPlaceHolder()\n                    this.handlePdfError(error)\n                })\n        },\n        async createPrinterService() {\n            this.pdf.printService = new PrintService({\n                pdfDocument: this.pdf.viewer.pdfDocument,\n                pagesOverview: await this.pdf.viewer.getPagesOverview()\n            })\n        },\n        setInitialPagination(pagination) {\n            this.pagination.current = pagination.currentPageNumber\n            this.pagination.total = pagination.pagesCount\n        },\n        updateScaleType(scaleType) {\n            if (scaleType && typeof scaleType === 'string') {\n                this.pdf.viewer.currentScaleValue = scaleType\n            } else {\n                if (this.defaultScaleType && typeof this.defaultScaleType === 'string') {\n                    this.pdf.viewer.currentScaleValue = this.defaultScaleType\n                } else if (this.isSmallScreen()) {\n                    this.pdf.viewer.currentScaleValue = 'page-width'\n                } else {\n                    this.pdf.viewer.currentScaleValue = 'page-fit'\n                }\n            }\n        },\n        setInitialScale(scale) {\n            this.scale.current = scale.currentScale\n            this.scale.default = scale.currentScale\n            this.scale.type = scale.currentScaleValue\n        },\n        isSmallScreen() {\n            return this.pdf.container.clientWidth <= 700\n        },\n        handlePdfError(error) {\n            if (error.name === 'InvalidPDFException') {\n                throw new Error('URL do documento inválida.')\n            } else if (error.name === 'MissingPDFException') {\n                throw new Error(error.message.replace('Missing PDF', 'Documento não encontrado em'))\n            } else if (error.status === 401) {\n                throw new Error('Não autorizado, verifique seu token de acesso.')\n            }\n        },\n        changeScaleType() {\n            if (this.scale.type === 'page-fit') {\n                this.updateScaleType('page-width')\n            } else {\n                this.updateScaleType('page-fit')\n            }\n        },\n        zoomIn() {\n            this.pdf.viewer.currentScale = this.scale.current * 1.1\n        },\n        zoomOut() {\n            if (this.scale.current > 0.2) {\n                this.pdf.viewer.currentScale = this.scale.current / 1.1\n            }\n        },\n        rotate() {\n            this.pdf.viewer.pagesRotation = (this.pdf.viewer.pagesRotation + 90) % 360\n        },\n        download() {\n            this.$emit('download')\n        },\n        async print() {\n            this.startLoadingPrint()\n\n            await this.createPrinterService()\n            this.pdf.printService.prepareLayout()\n            await this.pdf.printService.renderPages((currentPage, pageCount) => {\n                this.printProgress = (currentPage / pageCount) * 100\n            })\n            window.print()\n            this.pdf.printService.destroy()\n\n            this.stopLoadingPrint()\n        },\n        cancelPrint() {\n            this.pdf.printService.destroy()\n            this.stopLoadingPrint()\n        },\n        startLoadingPlaceHolderIfNecessary() {\n            this.loadingPlaceHolder = this.progressBar\n        },\n        stopLoadingPlaceHolder() {\n            this.loadingPlaceHolder = false\n        },\n        startLoadingPrint() {\n            this.isPrinting = true\n        },\n        stopLoadingPrint() {\n            this.isPrinting = false\n        }\n    },\n    props: {\n        src: {\n            type: String,\n            default: ''\n        },\n        cssClass: {\n            type: String,\n            default: ''\n        },\n        height: {\n            type: String,\n            default: '100vh'\n        },\n        httpHeader: {\n            type: Object,\n            default: () => new Object()\n        },\n        progressBar: {\n            type: Boolean,\n            default: false\n        },\n        downloadButton: {\n            type: Boolean,\n            default: false\n        },\n        defaultScaleType: {\n            type: String,\n            default: ''\n        },\n        rotateButton: {\n            type: Boolean,\n            default: false\n        },\n        printButton: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        customContainerClass() {\n            let classObject = {}\n            if (this.cssClass) {\n                const classes = this.cssClass.split(' ')\n                classes.forEach(clazz => (classObject[clazz] = true))\n            }\n            return classObject\n        }\n    },\n    data: () => ({\n        isPrinting: false,\n        loadingPlaceHolder: false,\n        pagination: {\n            current: null,\n            total: null\n        },\n        pdf: {\n            container: null,\n            eventBus: null,\n            linkService: null,\n            printService: null,\n            viewer: {}\n        },\n        printProgress: 0,\n        scale: {\n            default: null,\n            current: null,\n            type: ''\n        }\n    })\n}\n",{"version":3,"sources":["AzPdfDocumentViewer.vue"],"names":[],"mappingsfile":"AzPdfDocumentViewer.vue","sourceRoot":"node_modules/@azinformatica/loki/src/components/viewer","sourcesContent":["<template>\n    <div class=\"az-pdf-container\" :class=\"customContainerClass\" :style=\"{ height: height }\">\n        <Toolbar\n            :disableButtons=\"!src\"\n            :downloadButton=\"downloadButton\"\n            :pagination=\"pagination\"\n            :printButton=\"printButton\"\n            :rotateButton=\"rotateButton\"\n            :scaleType=\"scale.type\"\n            @changeScaleType=\"changeScaleType\"\n            @zoomIn=\"zoomIn\"\n            @zoomOut=\"zoomOut\"\n            @rotate=\"rotate\"\n            @download=\"download\"\n            @print=\"print\"\n            v-show=\"!loadingPlaceHolder\"\n        />\n        <div\n            id=\"az-pdf-viewer\"\n            class=\"Viewer\"\n            :style=\"{ height: `calc(${height} - 62px)` }\"\n            v-show=\"!loadingPlaceHolder\"\n        >\n            <div class=\"pdfViewer\"></div>\n        </div>\n        <LoadingPlaceHolder :loading=\"loadingPlaceHolder\" />\n        <LoadingPrint :isPrinting=\"isPrinting\" :printProgress=\"printProgress\" @cancel=\"cancelPrint\" />\n    </div>\n</template>\n\n<script>\nimport Toolbar from './Toolbar'\nimport LoadingPlaceHolder from './LoadingPlaceHolder'\nimport LoadingPrint from './LoadingPrint'\nimport PrintService from './PrintService'\nimport PDFJSLib from 'pdfjs-dist/build/pdf'\nimport { PDFJS as PDFJSViewer } from 'pdfjs-dist/web/pdf_viewer.js'\nexport default {\n    components: {\n        Toolbar,\n        LoadingPlaceHolder,\n        LoadingPrint\n    },\n    mounted() {\n        this.start()\n        window.addEventListener('resize', this.updateScaleType)\n    },\n    destroyed() {\n        window.removeEventListener('resize', this.updateScaleType)\n    },\n    watch: {\n        src() {\n            this.start()\n        }\n    },\n    methods: {\n        start() {\n            this.startLoadingPlaceHolderIfNecessary()\n            this.getPdfContainer()\n            this.createEventBus()\n            this.createPdfLinkService()\n            this.createPdfViewer()\n            this.renderDocument()\n        },\n        getPdfContainer() {\n            this.pdf.container = document.querySelector('#az-pdf-viewer')\n        },\n        createEventBus() {\n            const eventBus = new PDFJSViewer.EventBus()\n            eventBus.on('pagesinit', this.pagesInitEventHandler)\n            eventBus.on('scalechange', this.scaleChangeEventHandler)\n            eventBus.on('pagechange', this.pageChangeEventHandler)\n            this.pdf.eventBus = eventBus\n        },\n        pagesInitEventHandler(e) {\n            this.setInitialPagination(e.source)\n            this.updateScaleType()\n            this.setInitialScale(e.source)\n        },\n        scaleChangeEventHandler(e) {\n            this.scale.current = e.scale\n            if (e.presetValue) this.scale.type = e.presetValue\n        },\n        pageChangeEventHandler(e) {\n            this.pagination.current = e.pageNumber\n        },\n        createPdfLinkService() {\n            this.pdf.linkService = new PDFJSViewer.PDFLinkService({\n                eventBus: this.pdf.eventBus\n            })\n        },\n        createPdfViewer() {\n            this.pdf.viewer = new PDFJSViewer.PDFViewer({\n                container: this.pdf.container,\n                eventBus: this.pdf.eventBus,\n                linkService: this.pdf.linkService\n            })\n        },\n        renderDocument() {\n            if (!this.src) return this.stopLoadingPlaceHolder()\n            PDFJSLib.getDocument({\n                url: this.src,\n                httpHeaders: this.httpHeader,\n                withCredentials: true\n            })\n                .then(pdf => {\n                    this.pdf.linkService.setViewer(this.pdf.viewer)\n                    this.pdf.linkService.setDocument(pdf, null)\n                    this.pdf.viewer.setDocument(pdf)\n                    this.stopLoadingPlaceHolder()\n                })\n                .catch(error => {\n                    this.stopLoadingPlaceHolder()\n                    this.handlePdfError(error)\n                })\n        },\n        async createPrinterService() {\n            this.pdf.printService = new PrintService({\n                pdfDocument: this.pdf.viewer.pdfDocument,\n                pagesOverview: await this.pdf.viewer.getPagesOverview()\n            })\n        },\n        setInitialPagination(pagination) {\n            this.pagination.current = pagination.currentPageNumber\n            this.pagination.total = pagination.pagesCount\n        },\n        updateScaleType(scaleType) {\n            if (scaleType && typeof scaleType === 'string') {\n                this.pdf.viewer.currentScaleValue = scaleType\n            } else {\n                if (this.defaultScaleType && typeof this.defaultScaleType === 'string') {\n                    this.pdf.viewer.currentScaleValue = this.defaultScaleType\n                } else if (this.isSmallScreen()) {\n                    this.pdf.viewer.currentScaleValue = 'page-width'\n                } else {\n                    this.pdf.viewer.currentScaleValue = 'page-fit'\n                }\n            }\n        },\n        setInitialScale(scale) {\n            this.scale.current = scale.currentScale\n            this.scale.default = scale.currentScale\n            this.scale.type = scale.currentScaleValue\n        },\n        isSmallScreen() {\n            return this.pdf.container.clientWidth <= 700\n        },\n        handlePdfError(error) {\n            if (error.name === 'InvalidPDFException') {\n                throw new Error('URL do documento inválida.')\n            } else if (error.name === 'MissingPDFException') {\n                throw new Error(error.message.replace('Missing PDF', 'Documento não encontrado em'))\n            } else if (error.status === 401) {\n                throw new Error('Não autorizado, verifique seu token de acesso.')\n            }\n        },\n        changeScaleType() {\n            if (this.scale.type === 'page-fit') {\n                this.updateScaleType('page-width')\n            } else {\n                this.updateScaleType('page-fit')\n            }\n        },\n        zoomIn() {\n            this.pdf.viewer.currentScale = this.scale.current * 1.1\n        },\n        zoomOut() {\n            if (this.scale.current > 0.2) {\n                this.pdf.viewer.currentScale = this.scale.current / 1.1\n            }\n        },\n        rotate() {\n            this.pdf.viewer.pagesRotation = (this.pdf.viewer.pagesRotation + 90) % 360\n        },\n        download() {\n            this.$emit('download')\n        },\n        async print() {\n            this.startLoadingPrint()\n\n            await this.createPrinterService()\n            this.pdf.printService.prepareLayout()\n            await this.pdf.printService.renderPages((currentPage, pageCount) => {\n                this.printProgress = (currentPage / pageCount) * 100\n            })\n            window.print()\n            this.pdf.printService.destroy()\n\n            this.stopLoadingPrint()\n        },\n        cancelPrint() {\n            this.pdf.printService.destroy()\n            this.stopLoadingPrint()\n        },\n        startLoadingPlaceHolderIfNecessary() {\n            this.loadingPlaceHolder = this.progressBar\n        },\n        stopLoadingPlaceHolder() {\n            this.loadingPlaceHolder = false\n        },\n        startLoadingPrint() {\n            this.isPrinting = true\n        },\n        stopLoadingPrint() {\n            this.isPrinting = false\n        }\n    },\n    props: {\n        src: {\n            type: String,\n            default: ''\n        },\n        cssClass: {\n            type: String,\n            default: ''\n        },\n        height: {\n            type: String,\n            default: '100vh'\n        },\n        httpHeader: {\n            type: Object,\n            default: () => new Object()\n        },\n        progressBar: {\n            type: Boolean,\n            default: false\n        },\n        downloadButton: {\n            type: Boolean,\n            default: false\n        },\n        defaultScaleType: {\n            type: String,\n            default: ''\n        },\n        rotateButton: {\n            type: Boolean,\n            default: false\n        },\n        printButton: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        customContainerClass() {\n            let classObject = {}\n            if (this.cssClass) {\n                const classes = this.cssClass.split(' ')\n                classes.forEach(clazz => (classObject[clazz] = true))\n            }\n            return classObject\n        }\n    },\n    data: () => ({\n        isPrinting: false,\n        loadingPlaceHolder: false,\n        pagination: {\n            current: null,\n            total: null\n        },\n        pdf: {\n            container: null,\n            eventBus: null,\n            linkService: null,\n            printService: null,\n            viewer: {}\n        },\n        printProgress: 0,\n        scale: {\n            default: null,\n            current: null,\n            type: ''\n        }\n    })\n}\n</script>\n\n<style src=\"pdfjs-dist/web/pdf_viewer.css\"></style>\n\n<style lang=\"stylus\">\n.az-pdf-container\n    background-color #e4e4e4\n\n    .Viewer\n        width 100%\n        position relative\n        overflow scroll\n        background-color #e4e4e4\n\n        .page\n            margin 15px auto\n            border none\n            border-image none\n\n            .canvasWrapper\n                -webkit-box-shadow 0 3px 6px -1px rgba(0, 0, 0, .2)\n                box-shadow 0 3px 6px -1px rgba(0, 0, 0, .2)\n\n@media print\n    body[data-pdf-printing] #app\n        display none\n\n    body[data-pdf-printing] #print-container\n        display block\n\n        img\n            display block\n            width 100%\n            height 100%\n\n    body[data-pdf-printing] #print-container:first-child\n        position relative\n        top 0\n        left 0\n        width 1px\n        height 1px\n        overflow visible\n        page-break-after always\n        page-break-inside avoid\n\n    body[data-pdf-printing] #print-container div\n        page-break-after always\n        page-break-inside avoid\n</style>\n"]}]}