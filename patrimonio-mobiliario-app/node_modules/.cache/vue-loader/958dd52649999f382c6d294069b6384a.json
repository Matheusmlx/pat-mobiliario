{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/movimentacao/movimentacao-interna/edicao/documentos/MovimentacaoInternaEdicaoDocumentos.vue?vue&type=style&index=0&id=53149192&lang=stylus&scoped=true&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/movimentacao/movimentacao-interna/edicao/documentos/MovimentacaoInternaEdicaoDocumentos.vue","mtime":1616510521156},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.movimentacao-edicao-documentos\n    min-height 70vh\n\n.movimentacao-interna-documentos\n    min-height 62vh\n",{"version":3,"sources":["MovimentacaoInternaEdicaoDocumentos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;;AAEA;AACA","file":"MovimentacaoInternaEdicaoDocumentos.vue","sourceRoot":"src/views/pages/movimentacao/movimentacao-interna/edicao/documentos","sourcesContent":["<template>\n    <div class=\"movimentacao-edicao-documentos\">\n        <documentos\n            :actions=\"actions\"\n            :dono-documento=\"'movimentacao'\"\n            :dono-documento-id=\"movimentacaoInternaId\"\n            :mutations=\"mutations\"\n            :permissao-edicao=\"verificaPermissaoEdicao\"/>\n\n        <acoes-botoes-finalizar-voltar :desabilitado=\"!verificaPermissaoEdicao\"\n                                       :em-processamento=\"movimentacaoEmProcessamento\"\n                                       :textoButton=\"retornarTextoButton()\"\n                                       texto-bloqueio=\"Você não possui permissão para finalizar.\"\n                                       texto-em-processamento=\"A movimentação está em processamento e não pode ser finalizada\"\n                                       @finalizar=\"tratarEventoFinalizar\"\n                                       @voltar=\"tratarEventoVoltar\"/>\n    </div>\n</template>\n\n<script>\n\n    import {mapActions, mapState} from 'vuex'\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import Documentos from '@/views/components/documento/Documentos'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar'\n\n    export default {\n        name: 'MovimentacaoInternaEdicaoDocumentos',\n        components: {Documentos, AcoesBotoesFinalizarVoltar},\n        data() {\n            return {\n                tipoMovimentacao: null,\n                actions: {\n                    cadastrarDocumento: actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.CADASTRAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                    atualizarDocumento: actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.ATUALIZAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                    enviarDocumento: actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DOCUMENTO_UPLOAD,\n                    deletarDocumento: actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.DELETAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                    buscarTipoDocumento: actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.BUSCAR_TIPO_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                    buscarDocumentos: actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.BUSCAR_DOCUMENTOS_MOVIMENTACAO_INTERNA,\n                },\n                mutations: {\n                    removerDocumentos: mutationTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.REMOVER_DOCUMENTO_MOVIMENTACAO_INTERNA\n                }\n            }\n        },\n        async mounted() {\n            await this.buscarTipoMovimentacao()\n        },\n        computed: {\n            ...mapState({situacaoMovimentacao: state => state.movimentacaointerna.situacaoMovimentacaoInterna}),\n            movimentacaoEmProcessamento() {\n                return this.situacaoMovimentacao === 'EM_PROCESSAMENTO'\n            },\n            movimentacaoInternaId() {\n                return parseInt(this.$route.params.movimentacaoInternaId)\n            },\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Movimentacoes'])\n            },\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.MOVIMENTACAO_INTERNA.TEMPORARIA.ENVIAR_TEMPORARIA,\n                actionTypes.MOVIMENTACAO_INTERNA.BUSCAR_TIPO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DISTRIBUICAO.FINALIZAR_DISTRIBUICAO,\n                actionTypes.MOVIMENTACAO_INTERNA.ENTRE_SETORES.FINALIZAR_ENTRE_SETORES,\n                actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.FINALIZAR_ENTRE_ESTOQUES,\n                actionTypes.MOVIMENTACAO_INTERNA.DEVOLUCAO_ALMOXARIFADO.FINALIZAR_DEVOLUCAO_ALMOXARIFADO\n            ]),\n            async buscarTipoMovimentacao() {\n                this.tipoMovimentacao = await this.buscarTipoMovimentacaoInterna(this.movimentacaoInternaId)\n            },\n            retornarTextoButton() {\n                if (this.tipoMovimentacao === 'TEMPORARIA') {\n                    return 'Enviar'\n                }\n                return 'Finalizar'\n            },\n            tratarEventoVoltar() {\n                if (this.verificaPermissaoEdicao) {\n                    this.$router.push({\n                        name: 'MovimentacaoInternaEdicaoItens',\n                        params: {movimentacaoInternaId: this.movimentacaoInternaId},\n                    })\n                } else {\n                    this.$router.push({\n                        name: 'IncorporacaoListagem'\n                    })\n                }\n            },\n            async tratarEventoFinalizar() {\n                let dadosFinalizacao = null\n                if (this.tipoMovimentacao === 'DISTRIBUICAO') {\n                    dadosFinalizacao = await this.finalizarDistribuicao(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'ENTRE_SETORES') {\n                    dadosFinalizacao = await this.finalizarEntreSetores(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'ENTRE_ESTOQUES') {\n                    dadosFinalizacao = await this.finalizarEntreEstoques(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'DEVOLUCAO_ALMOXARIFADO') {\n                    dadosFinalizacao = await this.finalizarDevolucaoAlmoxarifado(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'TEMPORARIA') {\n                    dadosFinalizacao = await this.enviarTemporaria(this.movimentacaoInternaId)\n                }\n                if (dadosFinalizacao && dadosFinalizacao.situacao) {\n                    await this.tratarRedirecionamentoAposFinalizacao(dadosFinalizacao)\n                }\n            },\n            async tratarRedirecionamentoAposFinalizacao(dadosFinalizacao) {\n                if (dadosFinalizacao.situacao === 'EM_PROCESSAMENTO') {\n                    if (this.tipoMovimentacao === 'DISTRIBUICAO') {\n                        this.redirecionarMovimentacaoEmProcessamento('distribuição')\n                    } else if (this.tipoMovimentacao === 'ENTRE_SETORES') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação entre setores')\n                    } else if (this.tipoMovimentacao === 'ENTRE_ESTOQUES') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação entre estoques')\n                    } else if (this.tipoMovimentacao === 'DEVOLUCAO_ALMOXARIFADO') {\n                        this.redirecionarMovimentacaoEmProcessamento('devolução para almoxarifado')\n                    } else if (this.tipoMovimentacao === 'TEMPORARIA') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação temporária')\n                    }\n                } else {\n                    this.mostrarNotificacaoSucessoDefault()\n                    await this.$router.replace({\n                        name: 'VisualizarRegistroMovimentacaoInterna',\n                        params: {movimentacaoInternaId: this.movimentacaoInternaId}\n                    })\n                }\n            },\n            redirecionarMovimentacaoEmProcessamento(tipoMovimentacao) {\n                this.mostrarNotificacaoSucessoComConfirmacao({\n                                                                 titulo: 'Tudo certo, ' + tipoMovimentacao + ' em processamento',\n                                                                 subTitulo: 'Sua ' + tipoMovimentacao + ' foi adicionada na fila para processamento e iremos ' +\n                                                                     'lhe notificar assim que estiver terminada.',\n                                                                 textoBotao: 'Voltar para a listagem',\n                                                             },\n                                                             (result) => {\n                                                                 if (result.isConfirmed) {\n                                                                     this.$router.replace({name: 'MovimentacaoInternaListagem'})\n                                                                 }\n                                                             })\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n.movimentacao-edicao-documentos\n    min-height 70vh\n\n.movimentacao-interna-documentos\n    min-height 62vh\n</style>\n"]}]}