{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/dados-gerais/DadosGerais.vue?vue&type=style&index=0&id=f4833200&scoped=true&lang=stylus&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/patrimonios/incorporacao/edicao/dados-gerais/DadosGerais.vue","mtime":1617037940145},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form-dados-gerais\n    min-height 62vh\n\n.cursor__pointer\n    cursor pointer\n\n.uo__autocomplete\n    font-size 14px\n\n.tamanhoCheckbox\n    height 20px\n    .checkbox__fundo\n        margin-left 5px\n    .checkbox__projeto\n        margin-left -7px\n    .checkbox__comodato\n        margin-left -16px\n\n.titulo_checkbox\n    font-size 14px\n    color #777777\n    display inline-flex\n    margin-left 5px\n    font-weight bold\n    margin-bottom 0!important\n\n.empenhoBorder\n    width 100%\n    padding-top 8px\n    margin-bottom 15px\n    border-style solid\n    border-radius 5px\n    border-color #7777\n    border-width 1px\n\n>>>\n    @media (max-width: 1280px)\n        .tamanhoCheckbox\n            label\n                font-size 13px\n            .v-input--selection-controls__input\n                margin-right 0\n                width 12px\n                padding-right 4px\n            .v-input--selection-controls__input:first-child\n                margin-left 5px\n            .v-input--selection-controls__ripple:before,\n            .v-ripple__container\n                top 3px\n                bottom 3px\n                left -5px\n                right 10px\n",{"version":3,"sources":["DadosGerais.vue"],"names":[],"mappingsg2BA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DadosGerais.vue","sourceRoot":"src/views/pages/patrimonios/incorporacao/edicao/dados-gerais","sourcesContent":["<template>\n    <div>\n        <v-form class=\"az-form-content pb-0\" ref=\"form\">\n            <v-container class=\"white form-dados-gerais\" fluid>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.reconhecimento\"\n                            ref=\"autoCompleteReconhecimento\"\n                            name=\"reconhecimento\"\n                            placeholder=\"Selecione o reconhecimento\"\n                            v-validate=\"'required'\"\n                            :items=\"reconhecimentos\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :error-messages=\"errors.collect('reconhecimento')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"reconhecimento\" :tela=\"nomeTela\" apresentaTooltip obrigatorioPorPadrao/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label :style=\"obterLarguraAutoComplete('autoCompleteReconhecimento')\"\n                                       class=\"auto-complete-item-text text-truncate cursor__pointer\">{{data.item.nome}}</label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"reconhecimentoInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este reconhecimento foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.numProcesso\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número do processo\"\n                            placeholder=\"Informe o número\"\n                            maxlength=\"30\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('numProcesso', nomeTela)?'required|max:30' : 'max:30'\"\n                            :error-messages=\"errors.collect('número do processo')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"numProcesso\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            style=\"max-height:35px;\"\n                            v-model=\"dadosDeEntrada.fornecedor\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :items=\"fornecedores\"\n                            :loading=\"estaBuscandoFornecedores\"\n                            :return-object=\"false\"\n                            :search-input.sync=\"buscaFornecedorDinamicamente\"\n                            ref=\"autoCompleteFornecedor\"\n                            :filter=\"filtroAutocompleteFornecedores\"\n                            item-text=\"cpfCnpj\"\n                            item-value=\"id\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('fornecedor', nomeTela)? 'required' : ''\"\n                            name=\"CNPJ Fornecedor\"\n                            :error-messages=\"errors.collect('CNPJ Fornecedor')\"\n                            no-data-text=\"Não há fornecedores com este CPF/CNPJ\"\n                            placeholder=\"Informe a razão social ou o CPF/CNPJ\"\n                            @blur=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"fornecedor\" :tela=\"nomeTela\"/>\n                            </template>\n                            <template slot=\"item\" slot-scope=\"data\">\n                                <span :style=\"obterLarguraAutoComplete('autoCompleteFornecedor')\"\n                                      class=\"text-truncate\">{{ formataCnpj(data.item.cpfCnpj) }} - {{ data.item.nome }}</span>\n                            </template>\n                            <template v-slot:append-outer v-if=\"fornecedorInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este fornecedor foi inativado, por favor selecione outro!\"/>\n                            </template>\n                            <template v-slot:append v-if=\"dadosDeEntrada.fornecedor\">\n                                <v-tooltip top>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-icon v-on=\"on\" class=\"pr-3 pt-1\" small @click=\"removerFornecedor\">fas fa-times</v-icon>\n                                    </template>\n                                    {{ labelBtnCancel }}\n                                </v-tooltip>\n                            </template>\n                        </v-autocomplete>\n                        <az-text-view\n                            :text=\"dadosDeEntrada.fornecedor ? $options.filters.fornecedorFilter(dadosDeEntrada.fornecedor, fornecedores) : ''\" class=\"mt-2\"/>\n                    </v-col>\n                </v-row>\n                <div class=\"empenhoBorder\">\n                    <empenho v-for=\"(empenho, index) in empenhos\" :key=\"empenho.id\"\n                             :value=\"empenho\"\n                             :idIncorporacao=\"dadosDeEntrada.id\"\n                             :quantidadeEmpenhos=\"empenhos.length\"\n                             :primeiroEmpenho=\"index === 0\"\n                             :obrigatorio=\"empenhoObrigatorio\"\n                             :status-reconhecimento=\"!dadosDeEntrada.reconhecimento\"\n                             @adicionarNovoEmpenho=\"adicionarNovoEmpenho\"\n                             @buscarEmpenhos=\"buscaEmpenhos\"\n                             @removerEmpenho=\"removerEmpenho\"\n                             @atualizarIncorporacao=\"editarIncorporacao\"/>\n                </div>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.nota\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número da nota\"\n                            placeholder=\"Informe o número\"\n                            maxlength=\"30\"\n                            v-validate=\"notaObrigatorio ? 'required|max:30' : 'max:30'\"\n                            :error-messages=\"errors.collect('número da nota')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"nota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataNota\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"data nota\"\n                            date\n                            :is-required=\"notaObrigatorio\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            @input=\"editarIncorporacao\"\n                            :placeholderDate=\"(dadosDeEntrada.dataNota) ? ' ' : placeholders.date\"\n                            :error-messages=\"errors.collect('data nota')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataNota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-money\n                            v-if=\"dadosDeEntrada.id\"\n                            v-model=\"dadosDeEntrada.valorNota\"\n                            :maxLength=\"18\"\n                            :event-submit=\"'blur'\"\n                            :required=\"notaObrigatorio\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            class=\"botaoExcluirMoney\"\n                            placeholder=\"Informe o valor\"\n                            @input=\"atualizarValorInserido($event)\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"valorNota\" :tela=\"nomeTela\" :permissaoEdicao=\"notaObrigatorio\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-money>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.orgao\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            no-data-text=\"Não há órgãos com este nome\"\n                            name=\"orgaoResponsavel\"\n                            ref=\"autoCompleteOrgao\"\n                            v-validate=\"'required'\"\n                            :items=\"orgaos\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            placeholder=\"Selecione o órgão responsável\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :error-messages=\"!dadosDeEntrada.orgao ? errors.collect('orgaoResponsavel') : ''\"\n                            @change=\"selecionaOrgao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"orgao\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label\n                                    :style=\"obterLarguraAutoComplete('autoCompleteOrgao')\"\n                                    class=\"uo__autocomplete cursor__pointer text-truncate\">\n                                    {{data.item.descricao}}\n                                </label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"orgaoInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este órgão foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.setor\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            name=\"setor\"\n                            ref=\"autoCompleteSetor\"\n                            no-data-text=\"Não há setores com este nome\"\n                            :placeholder=\"dadosDeEntrada.orgao ? 'Selecione o setor' : ' '\"\n                            :disabled=\"!dadosDeEntrada.orgao\"\n                            :items=\"setores\"\n                            :error-messages=\"!dadosDeEntrada.setor ? errors.collect('setor') : ''\"\n                            v-validate=\"dadosDeEntrada.orgao ? 'required' : ''\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"setor\" :tela=\"nomeTela\" :permissaoEdicao=\"!!dadosDeEntrada.orgao\"\n                                                     obrigatorioPorPadrao apresentaTooltip/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label\n                                    :style=\"obterLarguraAutoComplete('autoCompleteSetor')\"\n                                    class=\"uo__autocomplete cursor__pointer text-truncate\">\n                                    {{data.item.descricao}}\n                                </label>\n                            </template>\n                            <template v-slot:append-outer v-if=\"setorInativo\">\n                                <tooltip-campos-inativos mensagem=\"Este setor foi inativado, por favor selecione outro!\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataRecebimento\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"recebimento\"\n                            date\n                            v-validate=\"'required'\"\n                            @input=\"editarIncorporacao\"\n                            :min-date=\"verificaPermissaoRetroativa ? '' : moment(dataPermitida).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            :placeholderDate=\"(dadosDeEntrada.dataRecebimento) ? ' ' : placeholders.date\"\n                            :is-required=\"true\"\n                            :error-messages=\"errors.collect('recebimento')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataRecebimento\" :tela=\"nomeTela\" obrigatorioPorPadrao/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.numeroNotaLancamentoContabil\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name=\"número da NL\"\n                            :placeholder=\"placeholders.numeroNotaLancamentoContabil\"\n                            maxlength=\"12\"\n                            v-mask=\"'####NL######'\"\n                            v-validate=\"getObrigatorioRotulosPersonalizados('numeroNotaLancamentoContabil', nomeTela)?'required|max:12' : 'max:12'\"\n                            :error-messages=\"errors.collect('número da NL')\"\n                            @change=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"numeroNotaLancamentoContabil\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\">\n                        <az-date\n                            v-model=\"dadosDeEntrada.dataNotaLancamentoContabil\"\n                            :is-disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            name-date=\"data da NL\"\n                            date\n                            :is-required=\"getObrigatorioRotulosPersonalizados('dataNotaLancamentoContabil', nomeTela)\"\n                            :max-date=\"moment(new Date()).format('YYYY-MM-DDTHH:mm:ssZZ')\"\n                            @input=\"editarIncorporacao\"\n                            :placeholderDate=\"(dadosDeEntrada.dataNotaLancamentoContabil) ? ' ' : placeholders.date\"\n                            :error-messages=\"errors.collect('data da NL')\">\n                            <template v-slot:label-date>\n                                <label-personalizado campo=\"dataNotaLancamentoContabil\" :tela=\"nomeTela\"/>\n                            </template>\n                        </az-date>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" class=\"pt-0\">\n                        <p class=\"titulo_checkbox pb-0\"><label-personalizado campo=\"origem\" :tela=\"nomeTela\" :apenasNome=\"true\"/></p>\n                        <v-row class=\"checkbox_input tamanhoCheckbox\">\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemConvenio\"\n                                    @change=\"editarIncorporacao\"\n                                    label=\"Convênio\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"tamanhoCheckbox\"/>\n                            </v-col>\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemFundo\"\n                                    label=\"Fundo\"\n                                    @change=\"selecionaFundo\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"checkbox__fundo\"/>\n                            </v-col>\n                           <v-col cols=\"3\">\n                               <v-checkbox\n                                   v-model=\"dadosDeEntrada.origemProjeto\"\n                                   label=\"Projeto\"\n                                   @change=\"editarIncorporacao\"\n                                   :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                   class=\"checkbox__projeto\"/>\n                           </v-col>\n                            <v-col cols=\"3\">\n                                <v-checkbox\n                                    v-model=\"dadosDeEntrada.origemComodato\"\n                                    label=\"Comodato\"\n                                    @change=\"editarIncorporacao\"\n                                    :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                                    class=\"checkbox__comodato\"/>\n                            </v-col>\n                        </v-row>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemConvenio\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.convenio\"\n                            name=\"convenio\"\n                            placeholder=\"Pesquise pelo nome do convênio\"\n                            v-validate=\"(dadosDeEntrada.origemConvenio && getObrigatorioRotulosPersonalizados('convenio', nomeTela)) ? 'required' : ''\"\n                            :items=\"convenios\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            hide-no-data\n                            hide-selected\n                            @change=\"editarIncorporacao\"\n                            :filter=\"filtroComboAutoComplete\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :search-input.sync=\"buscarConvenioDinamicamente\"\n                            :error-messages=\"errors.collect('convenio')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"convenio\" :tela=\"nomeTela\"/>\n                            </template>\n                            <template v-slot:item=\"data\">\n                                <label class=\"auto-complete-item-text\">{{data.item.nome}}</label>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemFundo\">\n                        <v-autocomplete\n                            v-model=\"dadosDeEntrada.fundo\"\n                            name=\"fundo\"\n                            :placeholder=\"dadosDeEntrada.orgao ? 'Selecione o fundo' : ' '\"\n                            v-validate=\"(dadosDeEntrada.origemFundo && getObrigatorioRotulosPersonalizados('fundo', nomeTela)) ? 'required' : ''\"\n                            :items=\"fundos\"\n                            item-text=\"descricao\"\n                            item-value=\"id\"\n                            :disabled=\"!dadosDeEntrada.orgao || !this.dadosDeEntrada.reconhecimento\"\n                            @change=\"editarIncorporacao\"\n                            :error-messages=\"errors.collect('fundo')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"fundo\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemProjeto\">\n                        <v-text-field\n                            v-model=\"dadosDeEntrada.projeto\"\n                            name=\"projeto\"\n                            maxlength=\"100\"\n                            placeholder=\"Informe o projeto\"\n                            v-validate=\"(dadosDeEntrada.origemProjeto && getObrigatorioRotulosPersonalizados('projeto', nomeTela)) ? 'required' : ''\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            @change=\"editarIncorporacao\"\n                            :error-messages=\"errors.collect('projeto')\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"projeto\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col cols=\"12\" md=\"4\" sm=\"6\" xs=\"12\" v-if=\"dadosDeEntrada.origemComodato\">\n                        <v-autocomplete\n                            style=\"max-height:47px;\"\n                            v-model=\"dadosDeEntrada.comodante\"\n                            :disabled=\"!this.dadosDeEntrada.reconhecimento\"\n                            :items=\"comodantes\"\n                            :loading=\"estaBuscandoComodantes\"\n                            :return-object=\"false\"\n                            :search-input.sync=\"buscarComodantesDinamicamente\"\n                            :filter=\"filtroComboAutoComplete\"\n                            item-text=\"nome\"\n                            item-value=\"id\"\n                            v-validate=\"!!(dadosDeEntrada.origemComodato && getObrigatorioRotulosPersonalizados('comodante', nomeTela)) ? 'required' : ''\"\n                            name=\"Comodante\"\n                            :error-messages=\"errors.collect('Comodante')\"\n                            no-data-text=\"Não existe comodante cadastrado com este nome\"\n                            placeholder=\"Pesquise pelo nome do comodante\"\n                            @blur=\"editarIncorporacao\">\n                            <template v-slot:label>\n                                <label-personalizado campo=\"comodante\" :tela=\"nomeTela\"/>\n                            </template>\n                        </v-autocomplete>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-form>\n        <acoes-botoes-continuar-voltar :controleContinuar=\"podeContinuar\" @voltar=\"tratarEventoVoltar\" @continuar=\"tratarEventoContinuar\"/>\n    </div>\n</template>\n\n<script>\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import Empenho from '@/views/components/empenho/Empenho'\n    import {createNamespacedHelpers, mapActions} from 'vuex'\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import TooltipCamposInativos from '@/views/components/tooltip/TooltipCamposInativos'\n    import LabelPersonalizado from '@/views/components/label/LabelPersonalizado'\n    import AcoesBotoesContinuarVoltar from '@/views/components/acoes/AcoesBotoesContinuarVoltar'\n    import Axios from 'axios'\n\n    const {mapGetters} = createNamespacedHelpers('rotulosPersonalizados')\n\n    export default {\n        name: 'dadosGerais',\n        components: {TooltipCamposInativos, Empenho, LabelPersonalizado, AcoesBotoesContinuarVoltar},\n        data() {\n            return {\n                dadosDeEntrada: {},\n                incorporacao: {},\n                empenhos: [{incorporacaoId: this.$route.params.incorporacaoId}],\n                reconhecimentos: [],\n                fornecedores: [],\n                comodantes: [],\n                convenios: [],\n                fundos: [],\n                orgaos: [],\n                setores: [],\n                buscaFornecedorDinamicamente: null,\n                buscarConvenioDinamicamente: null,\n                buscarComodantesDinamicamente: null,\n                estaBuscandoFornecedores: false,\n                estaBuscandoConvenios: false,\n                estaBuscandoComodantes: false,\n                cnpjPesquisadoContemMascara: false,\n                fornecedorSelecionado: true,\n                empenhoObrigatorio: false,\n                notaObrigatorio: false,\n                reconhecimentoInativo: false,\n                fornecedorInativo: false,\n                orgaoInativo: false,\n                setorInativo: false,\n                incorporacaoId: null,\n                nomeTela: 'INCORPORACAO_DADOS_GERAIS',\n                labelBtnCancel: 'Remover',\n                cpfCnpj: '',\n                rotaRedirecionamento: '',\n                placeholders: {\n                    date: '__/__/____',\n                    numeroNotaLancamentoContabil: '____NL_____'\n                }\n            }\n        },\n        async mounted() {\n            this.setaIncorporacaoId()\n            await this.buscaIncorporacao()\n            this.trataCamposReconhecimentoFornecedor()\n            this.trataCampoComodante()\n            this.trataCamposOrgaoSetor()\n            this.verificarSePodeProsseguir()\n        },\n        computed: {\n            ...mapGetters([\n                'getObrigatorioRotulosPersonalizados',\n                'getIncorporacaoValidado'\n            ]),\n            verificaPermissaoRetroativa() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Retroativo'])\n            },\n            dataPermitida() {\n                let date = new Date()\n                return new Date(date.getFullYear(), date.getMonth(), 1)\n            },\n            podeContinuar() {\n                if(this.empenhoObrigatorio){\n                    if(!this.verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos()){\n                        return false\n                    }\n                }\n                return this.getIncorporacaoValidado(this.dadosDeEntrada,\n                                                    this.dadosDeEntrada.origemConvenio,\n                                                    this.dadosDeEntrada.origemFundo,\n                                                    this.dadosDeEntrada.origemProjeto,\n                                                    this.dadosDeEntrada.origemComodato,\n                                                    this.notaObrigatorio,\n                                                    this.nomeTela)\n            }\n        },\n        filters: {\n            fornecedorFilter(fornecedor, fornecedores) {\n                if (typeof fornecedor == 'object') {\n                    return fornecedor.nome\n                } else {\n                    const encontrados = fornecedores.filter(f => f.id === fornecedor)\n                    return encontrados.length > 0 ? encontrados[0].nome : ''\n                }\n            },\n        },\n        watch: {\n            buscarConvenioDinamicamente(val) {\n                if (val) {\n                    if (this.estaBuscandoConvenios) return\n                    if (val.length > 1) {\n                        this.desabilitarLoadingGlobal()\n                        this.estaBuscandoConvenios = true\n\n                        this.$store.dispatch(actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_DINAMICAMENTE, val)\n                            .then(resultado => {\n                                this.convenios = resultado.items\n                                this.estaBuscandoConvenios = false\n                                this.habilitarLoadingGlobal()\n                            })\n                    }\n                } else {\n                    this.dadosDeEntrada.convenio = null\n                    this.convenios = []\n                }\n            },\n            buscaFornecedorDinamicamente(val) {\n                if(!this.dadosDeEntrada.fornecedor) {\n                    if (val !== this.cpfCnpj) {\n                        this.fornecedorSelecionado = false\n                    }\n                    if (val) {\n                        if (this.estaBuscandoFornecedores) return\n\n                        if (val.length > 1) {\n                            this.desabilitarLoadingGlobal()\n                            this.estaBuscandoFornecedores = true\n\n                            this.$store\n                                .dispatch(actionTypes.COMUM.BUSCAR_FORNECEDORES, val)\n                                .then(resultado => {\n                                    this.fornecedores = resultado.items\n\n                                    this.estaBuscandoFornecedores = false\n                                    this.habilitarLoadingGlobal()\n                                })\n                        }\n                    } else {\n                        this.dadosDeEntrada.fornecedor = null\n                        this.fornecedores = []\n                    }\n                }\n            },\n            buscarComodantesDinamicamente(val) {\n                if (val) {\n                    if (this.estaBuscandoComodantes) return\n                    if (val.length > 1) {\n                        this.desabilitarLoadingGlobal()\n                        this.estaBuscandoComodantes = true\n\n                        this.$store.dispatch(actionTypes.COMODATO.BUSCAR_COMODANTES_DINAMICAMENTE, val)\n                            .then(resultado => {\n                                this.comodantes = resultado.items\n                                this.estaBuscandoComodantes = false\n                                this.habilitarLoadingGlobal()\n                            })\n                    }\n                } else {\n                    this.dadosDeEntrada.comodante = null\n                    this.comodantes = []\n                }\n            },\n            'dadosDeEntrada.reconhecimento'() {\n                this.verificaSeEmpenhoEOuNotaObrigatorio()\n            }\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.COMUM.BUSCAR_FUNDOS,\n                actionTypes.COMUM.BUSCAR_TODOS_ORGAOS,\n                actionTypes.COMUM.BUSCAR_SETORES_ALMOXARIFADO,\n                actionTypes.CONFIGURACAO.RECONHECIMENTO.BUSCAR_RECONHECIMENTOS_AUTO_COMPLETE,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.BUSCAR_TODOS_EMPENHOS,\n                actionTypes.PATRIMONIO.INCORPORACAO.EMPENHO.INSERIR_EMPENHO,\n                actionTypes.CONFIGURACAO.CONVENIO.BUSCAR_CONVENIO_POR_ID,\n                actionTypes.PATRIMONIO.INCORPORACAO.BUSCAR_INCORPORACAO_POR_ID,\n                actionTypes.PATRIMONIO.INCORPORACAO.ATUALIZAR_INCORPORACAO,\n                actionTypes.PATRIMONIO.INCORPORACAO.DELETAR_INCORPORACAO\n            ]),\n            adicionarNovoEmpenho() {\n                if(this.empenhos.length<10){\n                    const empenhoVazio = {incorporacaoId: this.incorporacaoId}\n                    this.empenhos.unshift(empenhoVazio)\n                }\n            },\n            removerEmpenho(empenhoId) {\n                this.empenhos = this.empenhos.filter(entity => entity.id !== empenhoId)\n                this.verificarSePodeProsseguir()\n            },\n            async buscaEmpenhos() {\n                const resultado = await this.buscarTodosEmpenhos(this.incorporacaoId)\n                if (resultado && resultado.items.length > 0) {\n                    this.empenhos = resultado.items\n                }\n                this.verificarSePodeProsseguir()\n            },\n            async buscaIncorporacao() {\n                this.dadosDeEntrada = await this.buscarIncorporacaoPorId(this.incorporacaoId)\n                this.incorporacao = Object.assign({}, this.dadosDeEntrada)\n                await Axios.all([\n                    this.buscarReconhecimentos(),\n                    this.buscarConvenio(),\n                    this.buscaEmpenhos(),\n                    this.buscarTodosFundos(),\n                    this.buscarUnidadesOrganizacionais()\n                ])\n            },\n            trataCamposReconhecimentoFornecedor(){\n                this.trataCampoReconhecimento()\n                this.trataCampoFornecedor()\n            },\n            trataCamposOrgaoSetor(){\n                this.trataCampoOrgao()\n                this.trataCampoSetor()\n            },\n            trataCampoReconhecimento(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.reconhecimento){\n                    if(this.dadosDeEntrada.reconhecimento.situacao === 'INATIVO'){\n                        this.dadosDeEntrada.reconhecimento.disabled = true\n                        this.reconhecimentoInativo = true\n                        this.reconhecimentos.unshift(this.dadosDeEntrada.reconhecimento)\n                    }else if(this.dadosDeEntrada.reconhecimento.situacao === 'ATIVO'){\n                        this.reconhecimentoInativo = false\n                    }\n                }\n            },\n            trataCampoFornecedor(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.fornecedor) {\n                    if (this.dadosDeEntrada.fornecedor.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.fornecedor.disabled = true\n                        this.fornecedorInativo = true\n                        this.fornecedores.unshift(this.dadosDeEntrada.fornecedor)\n                    } else if(this.dadosDeEntrada.fornecedor.situacao === 'ATIVO') {\n                        this.fornecedorInativo = false\n                        this.fornecedores.push(this.dadosDeEntrada.fornecedor)\n                    }\n                }\n            },\n            trataCampoComodante(){\n                if(this.dadosDeEntrada.comodante){\n                    this.comodantes.push(this.dadosDeEntrada.comodante)\n                }\n            },\n            trataCampoOrgao(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.orgao) {\n                    if (this.dadosDeEntrada.orgao.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.orgao.disabled = true\n                        this.orgaoInativo = true\n                        this.orgaos.unshift(this.dadosDeEntrada.orgao)\n                    } else if(this.dadosDeEntrada.orgao.situacao === 'ATIVO'){\n                        this.orgaoInativo = false\n                    }\n                }\n            },\n            trataCampoSetor(){\n                if(this.dadosDeEntrada && this.dadosDeEntrada.setor) {\n                    if (this.dadosDeEntrada.setor.situacao === 'INATIVO') {\n                        this.dadosDeEntrada.setor.disabled = true\n                        this.setorInativo = true\n                        this.setores.unshift(this.dadosDeEntrada.setor)\n                    } else if(this.dadosDeEntrada.setor.situacao === 'ATIVO'){\n                        this.setorInativo = false\n                    }\n                }\n            },\n            async buscarConvenio() {\n                if (this.dadosDeEntrada.convenio) {\n                    let convenio = await this.buscarConvenioPorId(this.dadosDeEntrada.convenio)\n                    this.dadosDeEntrada.convenio = convenio.id\n                    this.convenios.push(convenio)\n                }\n            },\n            async buscarReconhecimentos() {\n                this.setMensagemLoading('Carregando...')\n                const resultado = await this.buscarReconhecimentosAutoComplete()\n                this.reconhecimentos = resultado.items\n                this.verificaSeEmpenhoEOuNotaObrigatorio()\n            },\n            async editarIncorporacao() {\n                this.desabilitarLoadingGlobal()\n                this.verificarSeFornecedorSelecionado()\n                try {\n                    const dadosAtualizados = await this.atualizarIncorporacao(this.dadosDeEntrada)\n                    this.setarDadosAtualizados(dadosAtualizados)\n                } catch (err) {\n                    this.mostrarNotificacaoErro(err.response.data.message)\n                    this.$store.commit(mutationTypes.LOKI.DISABLE_AUTO_SAVING)\n                    await this.buscaIncorporacao()\n                }\n                this.atualizaDadosAposEdicao(this.dadosDeEntrada)\n                this.verificarSePodeProsseguir()\n                this.trataCamposReconhecimentoFornecedor()\n                this.trataCamposOrgaoSetor()\n            },\n            atualizaDadosAposEdicao(resultado){\n                this.dadosDeEntrada.fornecedor = resultado.fornecedor\n                this.dadosDeEntrada.reconhecimento = resultado.reconhecimento\n                this.dadosDeEntrada.orgao = resultado.orgao\n                this.dadosDeEntrada.setor = resultado.setor\n                this.dadosDeEntrada.projeto = resultado.projeto\n                this.dadosDeEntrada.comodante = resultado.comodante\n            },\n            filtroComboAutoComplete(item, queryText) {\n                const text = item.nome.toLowerCase()\n                const searchText = queryText.toLowerCase()\n                return text.indexOf(searchText) > -1\n            },\n            verificarSeFornecedorSelecionado() {\n                if (this.dadosDeEntrada.fornecedor !== null) {\n                    this.fornecedorSelecionado = true\n                }\n            },\n            atualizarValorInserido(valor) {\n                this.dadosDeEntrada.valorNota = valor\n                this.editarIncorporacao()\n            },\n            formataCnpj(cnpj = '') {\n                cnpj = cnpj.replace(/\\D/g, '')\n                cnpj = cnpj.replace(\n                    /(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/,\n                    '$1.$2.$3/$4-$5'\n                )\n                return cnpj\n            },\n            verificarSePodeProsseguir() {\n                if (this.podeContinuar) {\n                    this.$emit('habilitaPasso2')\n                } else {\n                    this.$emit('desabilitaPasso2')\n                }\n            },\n            verificarSeTodosEmpenhosObrigatoriosEstaoPreenchidos() {\n                return this.empenhos.every(empenho => empenho.numeroEmpenho && empenho.dataEmpenho && empenho.valorEmpenho && empenho.valorEmpenho!==0)\n            },\n            selecionarReconhecimento() {\n                return this.reconhecimentos.filter(reconhecimento => reconhecimento.id === this.dadosDeEntrada.reconhecimento.id)\n            },\n            verificaSeEmpenhoEOuNotaObrigatorio() {\n                if (this.dadosDeEntrada.reconhecimento !== null) {\n                    const reconhecimentoSelecionado = this.selecionarReconhecimento()\n\n                    if (reconhecimentoSelecionado.length > 0) {\n                        this.empenhoObrigatorio = reconhecimentoSelecionado[0].empenho\n                        this.notaObrigatorio = reconhecimentoSelecionado[0].notaFiscal\n                    }\n                }\n                this.verificarSePodeProsseguir()\n            },\n            async buscarUnidadesOrganizacionais() {\n                await this.buscarOrgaos()\n                await this.buscarSetores()\n                if(this.orgaos) {\n                    if(this.verificaSeArrayContemApenasUmOrgao(this.orgaos) || this.verificaSeArrayContemApenasUmSetor(this.setores)) {\n                        this.selecionaOrgaoSeArrayConterApenasUmOrgao(this.orgaos)\n                        this.selecionaSetorSeArrayConterApenasUmSetor(this.setores)\n                        await this.editarIncorporacao()\n                    }\n                }\n            },\n            async selecionaOrgao(orgao) {\n                this.desabilitarLoadingGlobal()\n                this.dadosDeEntrada.setor = null\n                this.setores = []\n                if(orgao) {\n                    const [setores, fundos] = await Axios.all([\n                        this.buscarSetoresAlmoxarifado(orgao),\n                        this.buscarFundos(orgao)\n                    ])\n\n                    this.setores = setores.items\n                    this.selecionaSetorSeArrayConterApenasUmSetor(this.setores)\n                    this.fundos = fundos.items\n                    this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n\n                    await this.editarIncorporacao()\n                }\n            },\n            async selecionaFundo() {\n                this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n                await this.editarIncorporacao()\n            },\n            async buscarSetores() {\n                if(this.dadosDeEntrada.orgao) {\n                    const resultado = await this.buscarSetoresAlmoxarifado(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao)\n                    this.setores = resultado.items\n                }\n            },\n            async buscarOrgaos() {\n                const resultado = await this.buscarTodosOrgaos()\n                this.orgaos = resultado.items\n            },\n            async buscarTodosFundos() {\n                if (this.dadosDeEntrada.orgao) {\n                    const resultado = await this.buscarFundos(this.dadosDeEntrada.orgao.id ? this.dadosDeEntrada.orgao.id : this.dadosDeEntrada.orgao)\n                    this.fundos = resultado.items\n                    if(this.verificaSeArrayContemApenasUmFundo(this.fundos)) {\n                        this.selecionaFundoSeArrayConterApenasUmFundo(this.fundos)\n                        await this.editarIncorporacao()\n                    }\n                }\n            },\n            selecionaSetorSeArrayConterApenasUmSetor(setores) {\n                if(this.verificaSeArrayContemApenasUmSetor(setores)) {\n                    this.dadosDeEntrada.setor = setores[0].id\n                }\n            },\n            selecionaFundoSeArrayConterApenasUmFundo(fundos) {\n                if(this.verificaSeArrayContemApenasUmFundo(fundos)) {\n                    this.dadosDeEntrada.fundo = fundos[0].id\n                }\n            },\n            selecionaOrgaoSeArrayConterApenasUmOrgao(orgaos) {\n                if(this.verificaSeArrayContemApenasUmOrgao(orgaos)) {\n                    this.dadosDeEntrada.orgao = orgaos[0].id\n                }\n            },\n            filtroAutocompleteFornecedores(item, queryText) {\n                const textOne = item.nome.toLowerCase()\n                const searchText = queryText.toLowerCase()\n\n                if (item.cpfCnpj) {\n                    const textTwo = item.cpfCnpj\n                    return textOne.indexOf(searchText) > -1 ||\n                        textTwo.indexOf(searchText) > -1\n                }\n                return textOne.indexOf(searchText) > -1\n            },\n            removerFornecedor() {\n                this.dadosDeEntrada.fornecedor = null\n                this.editarIncorporacao()\n            },\n            async removerIncorporacao() {\n                try {\n                    await this.deletarIncorporacao(this.dadosDeEntrada.id)\n                } catch (err) {\n                    this.mostrarNotificacaoErro(err.response.data.message)\n                }\n            },\n            tratarEventoVoltar() {\n                this.$router.replace({name: 'IncorporacaoListagem'})\n            },\n            tratarEventoContinuar() {\n                this.$router.replace({name: 'ItensIncorporacaoListagem', params: {incorporacaoId: this.incorporacaoId}})\n            },\n            setarDadosAtualizados(dados) {\n                this.verificarMudancasPropriedades(dados, this.incorporacao, this.dadosDeEntrada)\n            },\n            verificaSeArrayContemApenasUmOrgao(orgaos) {\n                return orgaos.length === 1 && !this.dadosDeEntrada.orgao\n            },\n            verificaSeArrayContemApenasUmSetor(setores) {\n                return setores.length === 1 && !this.dadosDeEntrada.setor\n            },\n            verificaSeArrayContemApenasUmFundo(fundos) {\n                return fundos.length === 1 && !this.dadosDeEntrada.fundo\n            },\n            obterLarguraAutoComplete(ref) {\n                if (this.$refs[ref] && this.$refs[ref].$el) {\n                    return {\n                        width: (this.$refs[ref].$el.clientWidth-30)+'px'\n                    }\n                }\n                return {}\n            },\n            setaIncorporacaoId() {\n                this.incorporacaoId = this.$route.params.incorporacaoId\n            }\n        },\n        async beforeRouteLeave(to, from, next) {\n            if (this.dadosDeEntrada && this.dadosDeEntrada.id && !this.dadosDeEntrada.reconhecimento && this.rotaRedirecionamento !== to.name) {\n                this.rotaRedirecionamento = to.name\n                await this.removerIncorporacao()\n            }\n            next()\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .form-dados-gerais\n        min-height 62vh\n\n    .cursor__pointer\n        cursor pointer\n\n    .uo__autocomplete\n        font-size 14px\n\n    .tamanhoCheckbox\n        height 20px\n        .checkbox__fundo\n            margin-left 5px\n        .checkbox__projeto\n            margin-left -7px\n        .checkbox__comodato\n            margin-left -16px\n\n    .titulo_checkbox\n        font-size 14px\n        color #777777\n        display inline-flex\n        margin-left 5px\n        font-weight bold\n        margin-bottom 0!important\n\n    .empenhoBorder\n        width 100%\n        padding-top 8px\n        margin-bottom 15px\n        border-style solid\n        border-radius 5px\n        border-color #7777\n        border-width 1px\n\n    >>>\n        @media (max-width: 1280px)\n            .tamanhoCheckbox\n                label\n                    font-size 13px\n                .v-input--selection-controls__input\n                    margin-right 0\n                    width 12px\n                    padding-right 4px\n                .v-input--selection-controls__input:first-child\n                    margin-left 5px\n                .v-input--selection-controls__ripple:before,\n                .v-ripple__container\n                    top 3px\n                    bottom 3px\n                    left -5px\n                    right 10px\n</style>\n"]}]}