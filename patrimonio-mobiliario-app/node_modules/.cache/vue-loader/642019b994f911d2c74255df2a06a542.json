{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/configuracao/reserva/global/intervalo/ModalAdicionarIntervalosForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/configuracao/reserva/global/intervalo/ModalAdicionarIntervalosForm.vue","mtime":1620653318968},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapActions} from 'vuex'\nimport {actionTypes} from '@/core/constants'\n\nexport default {\n    name: 'ModalAdicionarIntervalosForm',\n    props: ['reservaIntervalo', 'maiorNumeroFimIntervalo'],\n    data() {\n        return {\n            proximoNumeroDisponivel: '',\n            tipoReserva: [{text: 'Automático', value: 'AUTOMATICO'}, {text: 'Manual', value: 'MANUAL'}],\n        }\n    },\n    computed: {\n        preenchimentoManual() {\n            return this.reservaIntervalo.preenchimento === 'MANUAL'\n        },\n        quantidadeDigitosNumeroPatrimonio() {\n            return this.$store.state.parametros.parametros.quantidadeDigitosNumeroPatrimonio\n        },\n        placeholderQuantidade() {\n            if (this.preenchimentoManual) {\n                if (this.reservaIntervalo.quantidadeReservada) {\n                    return this.reservaIntervalo.quantidadeReservada.toString()\n                }\n                return ' -'\n            }\n            return 'Ex: 00'\n        }\n    },\n    methods: {\n        ...mapActions([\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.INTERVALO.BUSCAR_PROXIMO_NUMERO,\n            actionTypes.CONFIGURACAO.RESERVA.GLOBAL.INTERVALO.VALIDAR_INTERVALO\n        ]),\n        tratarSelecaoReservaIntervalo() {\n            if (!this.reservaIntervalo.selecionado) {\n                this.atualizarMaiorNumeroFimIntervalo(null)\n                this.deselecionaReservaIntervalo()\n            } else {\n                this.selecionaReservaIntervalo()\n            }\n        },\n        async buscarProximoNumeroDisponivelDoIntervalo() {\n            await this.$validator.reset()\n            const resultado = await this.buscarProximoNumero(\n                {reservaId: this.reservaIntervalo.reservaId, maiorNumeroFimIntervalo: this.maiorNumeroFimIntervalo})\n            this.proximoNumeroDisponivel = resultado.proximoNumero\n            if (!this.reservaIntervalo.numeroInicio) {\n                this.reservaIntervalo.numeroInicio = resultado.proximoNumero\n            }\n        },\n        async tratarEdicaoQuantidade() {\n            if (await this.$validator.validateAll()) {\n\n                this.selecionaReservaIntervalo()\n                this.buscarProximoIntervalo()\n            }\n        },\n        async buscarProximoIntervalo() {\n            this.$emit('buscarProximoIntervalo', this.reservaIntervalo)\n        },\n        selecionaReservaIntervalo() {\n            this.$emit('selecionaReservaIntervalo', this.reservaIntervalo)\n        },\n        deselecionaReservaIntervalo() {\n            this.$emit('deselecionaReservaIntervalo', this.reservaIntervalo)\n        },\n        async tratarIntervalo() {\n            this.atualizarMaiorNumeroFimIntervalo(this.reservaIntervalo.numeroFim)\n            this.calcularQuantidadeIntervaloManual()\n            await this.validarIntervaloReservaIntervalo()\n        },\n        atualizarMaiorNumeroFimIntervalo(numeroFim) {\n            this.$emit('atualizarMaiorNumeroFimIntervalo', numeroFim)\n        },\n        async validarIntervaloReservaIntervalo() {\n            if (this.reservaIntervalo && this.reservaIntervalo.numeroInicio && this.reservaIntervalo.numeroFim) {\n                const validarIntervaloEntidade = {\n                    numeroInicio: this.reservaIntervalo.numeroInicio,\n                    numeroFim: this.reservaIntervalo.numeroFim\n                }\n                await this.validarIntervalo({\n                    reservaId: this.reservaIntervalo.reservaId,\n                    numeroInicio: validarIntervaloEntidade.numeroInicio,\n                    numeroFim: validarIntervaloEntidade.numeroFim\n                })\n                this.maiorNumeroFimIntervalo = validarIntervaloEntidade.numeroFim\n            }\n        },\n        calcularQuantidadeIntervaloManual() {\n            this.selecionaReservaIntervalo()\n            if (this.preenchimentoManual && this.reservaIntervalo && this.reservaIntervalo.numeroInicio && this.reservaIntervalo.numeroFim) {\n                const numeroInicio = this.reservaIntervalo.numeroInicio\n                const numeroFim = this.reservaIntervalo.numeroFim\n                if (numeroFim >= numeroInicio) {\n                    this.reservaIntervalo.quantidadeReservada = parseInt(`${(numeroFim - numeroInicio) + 1}`)\n                }\n            }\n        }\n    }\n}\n",{"version":3,"sources":["ModalAdicionarIntervalosForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalAdicionarIntervalosForm.vue","sourceRoot":"src/views/components/modal/configuracao/reserva/global/intervalo","sourcesContent":["<template>\n    <tr>\n        <td>\n            <v-checkbox v-model=\"reservaIntervalo.selecionado\" @change=\"tratarSelecaoReservaIntervalo\"/>\n        </td>\n        <td class=\"max-20 pt-3\">\n            <v-tooltip top nudge-top max-width=\"600\" open-delay=\"500\">\n                <template v-slot:activator=\"{ on }\">\n                    <div v-on=\"on\">\n                        <span class=\"grey--text text--darken-2 d-inline-block text-truncate max-20\">\n                            {{ reservaIntervalo.descricao | textoSemValor }}\n                        </span>\n                    </div>\n                </template>\n                {{ reservaIntervalo.descricao }}\n            </v-tooltip>\n        </td>\n        <td class=\"max-5\">\n            <div class=\"orgao-reserva az-form-content pa-0\">\n                <v-select\n                    flat\n                    :disabled=\"!reservaIntervalo.selecionado\"\n                    v-model=\"reservaIntervalo.preenchimento\"\n                    item-text=\"text\"\n                    item-value=\"value\"\n                    :items=\"tipoReserva\"\n                    @change=\"buscarProximoNumeroDisponivelDoIntervalo\">\n                </v-select>\n            </div>\n        </td>\n        <td class=\"max-5\">\n            <div class=\"orgao-reserva az-form-content pa-0\">\n                <v-text-field\n                    :disabled=\"!reservaIntervalo.selecionado || preenchimentoManual\"\n                    v-model=\"reservaIntervalo.quantidadeReservada\"\n                    name=\"Quantidade\"\n                    type=\"number\"\n                    @blur=\"tratarEdicaoQuantidade\"\n                    v-validate=\"reservaIntervalo.selecionado ? `required|integer|min_value:1|max:${quantidadeDigitosNumeroPatrimonio}` : ''\"\n                    :error-messages=\"errors.collect('Quantidade')\"\n                    :placeholder=\"placeholderQuantidade\">\n                </v-text-field>\n            </div>\n        </td>\n        <td class=\"max-20\">\n            <div class=\"orgao-reserva az-form-content pa-0\" v-if=\"!preenchimentoManual\">\n                <v-text-field\n                    disabled\n                    :placeholder=\"reservaIntervalo.selecionado ? reservaIntervalo.numeroInicio + ' - ' + reservaIntervalo.numeroFim : ' --- '\">\n                </v-text-field>\n            </div>\n            <div class=\"orgao-reserva az-form-content pa-0\" v-else>\n                <v-row>\n                    <v-col md=\"6\">\n                        <v-text-field\n                            v-model=\"reservaIntervalo.numeroInicio\"\n                            name=\"Número inicial\"\n                            v-validate=\"`required|integer|max:${quantidadeDigitosNumeroPatrimonio}`\"\n                            type=\"number\"\n                            :error-messages=\"errors.collect('Número inicial')\"\n                            placeholder=\"00\"\n                            :hint=\"'Próxima Numeração: ' + proximoNumeroDisponivel\"\n                            persistent-hint\n                            class=\"mt-o pt-0\"\n                            @blur=\"calcularQuantidadeIntervaloManual\">\n                        </v-text-field>\n                    </v-col>\n                    <span class=\"intervalo\">a</span>\n                    <v-col md=\"5\">\n                        <v-text-field\n                            v-model=\"reservaIntervalo.numeroFim\"\n                            name=\"Número final\"\n                            type=\"number\"\n                            v-validate=\"`required|integer|max:${quantidadeDigitosNumeroPatrimonio}|min_value:${reservaIntervalo.numeroInicio}`\"\n                            :error-messages=\"errors.collect('Número final')\"\n                            placeholder=\"00\"\n                            class=\"mt-o pt-0\"\n                            @blur=\"tratarIntervalo\"\n                        />\n                    </v-col>\n                </v-row>\n\n            </div>\n        </td>\n    </tr>\n</template>\n\n<script>\n    import {mapActions} from 'vuex'\n    import {actionTypes} from '@/core/constants'\n\n    export default {\n        name: 'ModalAdicionarIntervalosForm',\n        props: ['reservaIntervalo', 'maiorNumeroFimIntervalo'],\n        data() {\n            return {\n                proximoNumeroDisponivel: '',\n                tipoReserva: [{text: 'Automático', value: 'AUTOMATICO'}, {text: 'Manual', value: 'MANUAL'}],\n            }\n        },\n        computed: {\n            preenchimentoManual() {\n                return this.reservaIntervalo.preenchimento === 'MANUAL'\n            },\n            quantidadeDigitosNumeroPatrimonio() {\n                return this.$store.state.parametros.parametros.quantidadeDigitosNumeroPatrimonio\n            },\n            placeholderQuantidade() {\n                if (this.preenchimentoManual) {\n                    if (this.reservaIntervalo.quantidadeReservada) {\n                        return this.reservaIntervalo.quantidadeReservada.toString()\n                    }\n                    return ' -'\n                }\n                return 'Ex: 00'\n            }\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.INTERVALO.BUSCAR_PROXIMO_NUMERO,\n                actionTypes.CONFIGURACAO.RESERVA.GLOBAL.INTERVALO.VALIDAR_INTERVALO\n            ]),\n            tratarSelecaoReservaIntervalo() {\n                if (!this.reservaIntervalo.selecionado) {\n                    this.atualizarMaiorNumeroFimIntervalo(null)\n                    this.deselecionaReservaIntervalo()\n                } else {\n                    this.selecionaReservaIntervalo()\n                }\n            },\n            async buscarProximoNumeroDisponivelDoIntervalo() {\n                await this.$validator.reset()\n                const resultado = await this.buscarProximoNumero(\n                    {reservaId: this.reservaIntervalo.reservaId, maiorNumeroFimIntervalo: this.maiorNumeroFimIntervalo})\n                this.proximoNumeroDisponivel = resultado.proximoNumero\n                if (!this.reservaIntervalo.numeroInicio) {\n                    this.reservaIntervalo.numeroInicio = resultado.proximoNumero\n                }\n            },\n            async tratarEdicaoQuantidade() {\n                if (await this.$validator.validateAll()) {\n\n                    this.selecionaReservaIntervalo()\n                    this.buscarProximoIntervalo()\n                }\n            },\n            async buscarProximoIntervalo() {\n                this.$emit('buscarProximoIntervalo', this.reservaIntervalo)\n            },\n            selecionaReservaIntervalo() {\n                this.$emit('selecionaReservaIntervalo', this.reservaIntervalo)\n            },\n            deselecionaReservaIntervalo() {\n                this.$emit('deselecionaReservaIntervalo', this.reservaIntervalo)\n            },\n            async tratarIntervalo() {\n                this.atualizarMaiorNumeroFimIntervalo(this.reservaIntervalo.numeroFim)\n                this.calcularQuantidadeIntervaloManual()\n                await this.validarIntervaloReservaIntervalo()\n            },\n            atualizarMaiorNumeroFimIntervalo(numeroFim) {\n                this.$emit('atualizarMaiorNumeroFimIntervalo', numeroFim)\n            },\n            async validarIntervaloReservaIntervalo() {\n                if (this.reservaIntervalo && this.reservaIntervalo.numeroInicio && this.reservaIntervalo.numeroFim) {\n                    const validarIntervaloEntidade = {\n                        numeroInicio: this.reservaIntervalo.numeroInicio,\n                        numeroFim: this.reservaIntervalo.numeroFim\n                    }\n                    await this.validarIntervalo({\n                        reservaId: this.reservaIntervalo.reservaId,\n                        numeroInicio: validarIntervaloEntidade.numeroInicio,\n                        numeroFim: validarIntervaloEntidade.numeroFim\n                    })\n                    this.maiorNumeroFimIntervalo = validarIntervaloEntidade.numeroFim\n                }\n            },\n            calcularQuantidadeIntervaloManual() {\n                this.selecionaReservaIntervalo()\n                if (this.preenchimentoManual && this.reservaIntervalo && this.reservaIntervalo.numeroInicio && this.reservaIntervalo.numeroFim) {\n                    const numeroInicio = this.reservaIntervalo.numeroInicio\n                    const numeroFim = this.reservaIntervalo.numeroFim\n                    if (numeroFim >= numeroInicio) {\n                        this.reservaIntervalo.quantidadeReservada = parseInt(`${(numeroFim - numeroInicio) + 1}`)\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\">\n\n</style>\n"]}]}