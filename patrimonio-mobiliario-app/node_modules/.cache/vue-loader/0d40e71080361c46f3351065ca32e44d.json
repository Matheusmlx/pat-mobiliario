{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/camposEditaveis/campo-de-arquivo-editavel.vue?vue&type=style&index=0&id=997f63a0&lang=stylus&scoped=true&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/camposEditaveis/campo-de-arquivo-editavel.vue","mtime":1614049852953},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nalinhaMentoBox\n    margin-bottom: 20px\n\n.formatoTexto\n    color: #6b6b6b\n\n.file-input-component\n    font-size 13px\n\n.truncate\n    width: 130px\n    white-space: nowrap\n    overflow: hidden\n    text-overflow: ellipsis\n\n@media (max-width: 1100px)\n    .truncate\n        width 125px\n\n",{"version":3,"sources":["campo-de-arquivo-editavel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"campo-de-arquivo-editavel.vue","sourceRoot":"src/views/components/camposEditaveis","sourcesContent":["<template>\n    <div class=\"az-text az-text-edit az-text-view-edit-text-area alinhaMentoBox\">\n        <div v-if=\"!editing\">\n            <label>{{ label }}</label>\n            <p>\n                <span class=\"d-inline-block truncate formatoTexto\">{{nomeAnexo}}</span>\n                <v-tooltip top v-if=\"!disabled\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn x-small v-on=\"on\" class=\"start-edit-btn\" icon @click=\"startEdit\">\n                            <v-icon class=\"mt-2\" x-small>fas fa-edit</v-icon>\n                        </v-btn>\n                    </template>\n                    {{labelBtnEdit}}\n                </v-tooltip>\n                <v-tooltip v-if=\"value\" top>\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn x-small v-on=\"on\" icon slot=\"activator\" :href=\"criarLinkDownload(value)\" target=\"_blank\">\n                            <v-icon x-small color=\"primary\" class=\"mb-1 d-flex align-start\">fas fa-download</v-icon>\n                        </v-btn>\n                    </template>\n                    Download\n                </v-tooltip>\n            </p>\n        </div>\n\n        <div :class=\"{'pt-7' : editing}\">\n            <v-file-input\n                v-if=\"editing\"\n                v-model=\"model\"\n                class=\"file-input-component\"\n                :label=\"label\"\n                :name=\"name\"\n                dense\n                outlined\n                :class=\"stylus\"\n                :maxlength=\"maxlength\"\n                :error-messages=\"errorTamanhoExcedido === 1 ? 'Tamanho permitido: 15MB' : errors.collect(name)\"\n                v-validate=\"validate\"\n                :counter=\"counter\"\n                :placeholder=\"placeholder\"\n                :estaAdicionando=\"estaAdicionando\"\n                auto-grow\n                prepend-icon\n                rows=\"1\"\n                :clearable=\"false\"\n                @keyupEsc=\"cancelEdit\"\n                @click:append=\"cancelEdit\">\n                <template v-slot:append>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn v-on=\"on\" icon @click=\"submitEdit\">\n                                <v-icon class=\"primary--text\" small>fas fa-check</v-icon>\n                            </v-btn>\n                        </template>\n                        {{labelBtnSave}}\n                    </v-tooltip>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn v-on=\"on\" icon @click=\"cancelEdit\">\n                                <v-icon small>fas fa-times</v-icon>\n                            </v-btn>\n                        </template>\n                        {{labelBtnCancel}}\n                    </v-tooltip>\n                </template>\n            </v-file-input>\n            <p v-if=\"editing && !this.model && errorTamanhoExcedido!==1\" class=\"tamanhoPermitidoClass\">Tamanho\n                permitido: 15MB</p>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'campo-de-arquivo-editavel',\n        props: {\n            value: {\n                required: true\n            },\n            idObjeto: {\n                type: Number\n            },\n            name: {\n                required: true,\n                type: String\n            },\n            label: {\n                type: String,\n                default: ''\n            },\n            stylus: {\n                type: String\n            },\n            labelBtnSave: {\n                type: String,\n                default: 'Salvar'\n            },\n            labelBtnCancel: {\n                type: String,\n                default: 'Cancelar'\n            },\n            labelBtnEdit: {\n                type: String,\n                default: 'Editar'\n            },\n            maxlength: {\n                type: Number,\n                default: 255\n            },\n            validate: {\n                type: String,\n                default: 'required'\n            },\n            counter: {\n                type: Number\n            },\n            placeholder: {\n                type: String\n            },\n            estaAdicionando: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        $_veeValidate: {\n            validator: 'new'\n        },\n        data: () => ({\n            model: undefined,\n            editing: false,\n            errorObrigatoriedadeAnexo: 0,\n            errorTamanhoExcedido: 0,\n        }),\n        watch: {\n            value(val) {\n                this.model = val\n            }\n        },\n        methods: {\n            startEdit() {\n                this.model = null\n                if(this.estaAdicionando){\n                    this.$emit('estaAdicionando')\n                }else{\n                    this.editing = true\n                    this.$emit('setaEditando', {nome: this.name, id: this.idObjeto})\n                }\n            },\n            async submitEdit() {\n                if (this.model) {\n                    const anexo = this.model\n                    if(this.extensaoArquivoValida(anexo) === -1){\n                        this.mostrarNotificacaoErro('Extensão do arquivo inválida. Envie arquivos nos seguintes formatos .pdf .jpg .png')\n                        this.model = null\n                    } else {\n                        if (this.validarTamanhoMaximo(this.model.size)) {\n                            this.errorTamanhoExcedido = 1\n                            this.model = await null\n                            setTimeout(() => {\n                                this.errorTamanhoExcedido = 0\n                                this.errorObrigatoriedadeAnexo = 1\n                                this.$validator._base.validateAll()\n                            }, 3000)\n                        } else {\n                            this.editing = false\n                            this.$emit('retiraEditando', {nome: this.name, id: this.idObjeto})\n                            this.$emit('input', anexo)\n                        }\n\n                    }\n                } else {\n                    this.mostrarNotificacaoErro('Sem documento anexo para salvar')\n                }\n            },\n            validarTamanhoMaximo(tamanhoAnexo) {\n                if (tamanhoAnexo >= 15116247) {\n                    return true\n                }\n                return false\n            },\n            extensaoArquivoValida(nomeArquivo) {\n                const extensaoAceitas = ['.pdf', '.PDF', '.jpg', '.JPG', '.png', '.PNG', '.jpeg', '.JPEG']\n                const extensao = nomeArquivo.name.substr(nomeArquivo.name.lastIndexOf('.'), nomeArquivo.name.length)\n                return extensaoAceitas.indexOf(extensao)\n            },\n\n            cancelEdit() {\n                this.editing = false\n                this.$emit('retiraEditando', {nome: this.name, id: this.idObjeto})\n            },\n        },\n        computed: {\n            nomeAnexo() {\n                return typeof this.value === 'string' ? this.value.split('/')[1] : '-'\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n    alinhaMentoBox\n        margin-bottom: 20px\n\n    .formatoTexto\n        color: #6b6b6b\n\n    .file-input-component\n        font-size 13px\n\n    .truncate\n        width: 130px\n        white-space: nowrap\n        overflow: hidden\n        text-overflow: ellipsis\n\n    @media (max-width: 1100px)\n        .truncate\n            width 125px\n\n</style>\n"]}]}