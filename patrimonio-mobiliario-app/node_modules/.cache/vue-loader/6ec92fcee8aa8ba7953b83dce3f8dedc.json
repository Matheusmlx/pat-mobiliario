{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/incorporacao/adicionaritem/itemincorporacao/edicao/DadosGeraisDoItemModalFormulario.vue?vue&type=template&id=e8535cce&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/incorporacao/adicionaritem/itemincorporacao/edicao/DadosGeraisDoItemModalFormulario.vue","mtime":1615827966844},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-form\",\n    { ref: \"form\", staticClass: \"az-form-content az-formItem mt-0 pl-0 pr-0\" },\n    [\n      _c(\n        \"v-container\",\n        { attrs: { fluid: \"\" } },\n        [\n          _c(\n            \"v-row\",\n            { staticClass: \"layoutModal\" },\n            [\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.getObrigatorioRotulosPersonalizados(\n                          \"marca\",\n                          _vm.nomeTela\n                        )\n                          ? \"required|max:100\"\n                          : \"\",\n                        expression:\n                          \"getObrigatorioRotulosPersonalizados('marca', nomeTela) ? 'required|max:100' : ''\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"marca\",\n                      \"error-messages\": _vm.errors.collect(\"marca\"),\n                      placeholder: \"Informe a marca\",\n                      counter: \"100\",\n                      maxlength: \"100\"\n                    },\n                    on: {\n                      focusout: _vm.salvarFormulario,\n                      change: _vm.salvarFormulario\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: { campo: \"marca\", tela: _vm.nomeTela }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.marca,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"marca\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.marca\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.getObrigatorioRotulosPersonalizados(\n                          \"modelo\",\n                          _vm.nomeTela\n                        )\n                          ? \"required|max:100\"\n                          : \"\",\n                        expression:\n                          \"getObrigatorioRotulosPersonalizados('modelo', nomeTela) ? 'required|max:100' : ''\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"modelo\",\n                      \"error-messages\": _vm.errors.collect(\"modelo\"),\n                      placeholder: \"Informe o modelo\",\n                      counter: \"100\",\n                      maxlength: \"100\"\n                    },\n                    on: {\n                      focusout: _vm.salvarFormulario,\n                      change: _vm.salvarFormulario\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: { campo: \"modelo\", tela: _vm.nomeTela }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.modelo,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"modelo\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.modelo\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.getObrigatorioRotulosPersonalizados(\n                          \"fabricante\",\n                          _vm.nomeTela\n                        )\n                          ? \"required|max:100\"\n                          : \"\",\n                        expression:\n                          \"getObrigatorioRotulosPersonalizados('fabricante', nomeTela) ? 'required|max:100' : ''\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"fabricante\",\n                      \"error-messages\": _vm.errors.collect(\"fabricante\"),\n                      placeholder: \"Informe o fabricante\",\n                      counter: \"100\",\n                      maxlength: \"100\"\n                    },\n                    on: { change: _vm.salvarFormulario },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: { campo: \"fabricante\", tela: _vm.nomeTela }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.fabricante,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"fabricante\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.fabricante\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|max:6\",\n                        expression: \"'required|max:6'\"\n                      },\n                      {\n                        name: \"mask\",\n                        rawName: \"v-mask\",\n                        value: _vm.maskQuantidade,\n                        expression: \"maskQuantidade\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"quantidade\",\n                      \"error-messages\": _vm.errors.collect(\"quantidade\"),\n                      min: \"0\",\n                      maxlength: \"4\",\n                      placeholder: \"Informe a quantidade de itens\"\n                    },\n                    on: { focusout: _vm.tratarCampoQuantidade },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: {\n                                campo: \"quantidade\",\n                                tela: _vm.nomeTela,\n                                obrigatorioPorPadrao: \"\"\n                              }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.quantidade,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"quantidade\", _vm._n($$v))\n                      },\n                      expression: \"dadosDeEntrada.quantidade\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { class: [\"valorTotal\"], attrs: { cols: \"4\" } },\n                [\n                  _vm.dadosDeEntrada.id\n                    ? _c(\"az-money\", {\n                        staticClass: \"botaoExcluirMoney\",\n                        attrs: {\n                          maxLength: 10,\n                          \"validate-length\": true,\n                          \"event-submit\": \"blur\",\n                          required: true,\n                          placeholder: \"Informe o valor\"\n                        },\n                        on: {\n                          input: function($event) {\n                            return _vm.atualizarValorInserido($event)\n                          }\n                        },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"label\",\n                              fn: function() {\n                                return [\n                                  _c(\"label-personalizado\", {\n                                    attrs: {\n                                      campo: \"valorTotal\",\n                                      tela: _vm.nomeTela,\n                                      obrigatorioPorPadrao: \"\"\n                                    }\n                                  })\n                                ]\n                              },\n                              proxy: true\n                            }\n                          ],\n                          null,\n                          false,\n                          4034892878\n                        ),\n                        model: {\n                          value: _vm.dadosDeEntrada.valorTotal,\n                          callback: function($$v) {\n                            _vm.$set(_vm.dadosDeEntrada, \"valorTotal\", $$v)\n                          },\n                          expression: \"dadosDeEntrada.valorTotal\"\n                        }\n                      })\n                    : _vm._e()\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\n                    \"v-radio-group\",\n                    {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        }\n                      ],\n                      staticClass: \"az-text radio-numeracao-patrimonial\",\n                      attrs: {\n                        mandatory: false,\n                        row: \"\",\n                        name: \"numeracaoPatrimonio\",\n                        \"error-messages\": _vm.mostraErroSituacao\n                          ? _vm.errors.collect(\"numeracaoPatrimonio\")\n                          : \"\"\n                      },\n                      on: { change: _vm.salvarFormulario },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"label\",\n                          fn: function() {\n                            return [\n                              _c(\"label-personalizado\", {\n                                attrs: {\n                                  campo: \"numeracaoPatrimonial\",\n                                  tela: _vm.nomeTela,\n                                  obrigatorioPorPadrao: \"\",\n                                  apresentaTooltip: \"\"\n                                }\n                              })\n                            ]\n                          },\n                          proxy: true\n                        }\n                      ]),\n                      model: {\n                        value: _vm.dadosDeEntrada.numeracaoPatrimonial,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.dadosDeEntrada,\n                            \"numeracaoPatrimonial\",\n                            $$v\n                          )\n                        },\n                        expression: \"dadosDeEntrada.numeracaoPatrimonial\"\n                      }\n                    },\n                    [\n                      _c(\"v-radio\", {\n                        attrs: {\n                          label: \"Reserva\",\n                          value: \"RESERVA\",\n                          name: \"RESERVA\",\n                          disabled: \"\"\n                        }\n                      }),\n                      _c(\"v-radio\", {\n                        attrs: {\n                          disabled: \"\",\n                          label: \"Automática\",\n                          value: \"AUTOMATICA\",\n                          name: \"AUTOMATICA\"\n                        },\n                        on: { blur: _vm.mostrarErroSituacao }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-autocomplete\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      }\n                    ],\n                    ref: \"autoCompleteNaturezaDespesa\",\n                    attrs: {\n                      \"item-text\": \"despesa\",\n                      \"item-value\": \"id\",\n                      \"no-data-text\":\n                        \"Não há naturezas de despesa com este nome\",\n                      \"return-object\": false,\n                      name: \"naturezaDespesa\",\n                      items: _vm.naturezasDespesa,\n                      placeholder: \"Selecione a natureza de despesa do item\",\n                      filter: _vm.filtroComboAutoComplete,\n                      \"error-messages\": _vm.errors.collect(\"naturezaDespesa\")\n                    },\n                    on: {\n                      change: function($event) {\n                        return _vm.salvarFormulario($event)\n                      }\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"label\",\n                          fn: function() {\n                            return [\n                              _c(\"label-personalizado\", {\n                                attrs: {\n                                  campo: \"naturezaDespesa\",\n                                  tela: _vm.nomeTela,\n                                  obrigatorioPorPadrao: \"\"\n                                }\n                              })\n                            ]\n                          },\n                          proxy: true\n                        },\n                        {\n                          key: \"selection\",\n                          fn: function(data) {\n                            return [\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"text-truncate\",\n                                  staticStyle: {\n                                    \"max-width\": \"100%\",\n                                    \"font-size\": \"12px\",\n                                    color: \"gray\"\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(data.item.despesa) +\n                                      \" - \" +\n                                      _vm._s(data.item.descricao) +\n                                      \" \"\n                                  )\n                                ]\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"item\",\n                          fn: function(data) {\n                            return [\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"text-truncate\",\n                                  staticStyle: { \"font-size\": \"12px\" },\n                                  style: _vm.obterLarguraAutoComplete(\n                                    \"autoCompleteNaturezaDespesa\"\n                                  )\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                            \" +\n                                      _vm._s(data.item.despesa) +\n                                      \" - \" +\n                                      _vm._s(data.item.descricao) +\n                                      \"\\n                        \"\n                                  )\n                                ]\n                              )\n                            ]\n                          }\n                        },\n                        _vm.naturezaDespesaInativo\n                          ? {\n                              key: \"append-outer\",\n                              fn: function() {\n                                return [\n                                  _c(\"tooltip-campos-inativos\", {\n                                    attrs: {\n                                      mensagem:\n                                        \"Esta natureza de despesa foi inativada, por favor selecione outra!\"\n                                    }\n                                  })\n                                ]\n                              },\n                              proxy: true\n                            }\n                          : null\n                      ],\n                      null,\n                      true\n                    ),\n                    model: {\n                      value: _vm.dadosDeEntrada.naturezaDespesa,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"naturezaDespesa\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.naturezaDespesa\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      \"return-object\": false,\n                      placeholder: \" \",\n                      disabled: \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: {\n                                campo: \"contaContabil\",\n                                tela: _vm.nomeTela,\n                                apresentaTooltip: true\n                              }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.contaContabil,\n                      callback: function($$v) {\n                        _vm.contaContabil = $$v\n                      },\n                      expression: \"contaContabil\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: { placeholder: \" \", disabled: \"\" },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: {\n                                campo: \"tipoBem\",\n                                tela: _vm.nomeTela,\n                                apenasNome: true\n                              }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.tipoBem,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"tipoBem\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.tipoBem\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\"v-select\", {\n                    attrs: {\n                      placeholder: \"Selecione um estado de conservação\",\n                      items: _vm.estadosConservacao,\n                      \"item-text\": \"nome\",\n                      \"item-value\": \"id\",\n                      insertNullItem: false,\n                      \"is-required\": \"\",\n                      name: \"EstadoDeConservacao\"\n                    },\n                    on: { input: _vm.salvarFormulario },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"label\",\n                        fn: function() {\n                          return [\n                            _c(\"label-personalizado\", {\n                              attrs: {\n                                campo: \"estadoConservacao\",\n                                tela: _vm.nomeTela,\n                                obrigatorioPorPadrao: \"\"\n                              }\n                            })\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ]),\n                    model: {\n                      value: _vm.dadosDeEntrada.estadoConservacao,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dadosDeEntrada, \"estadoConservacao\", $$v)\n                      },\n                      expression: \"dadosDeEntrada.estadoConservacao\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-col\",\n                { attrs: { cols: \"4\" } },\n                [\n                  _c(\n                    \"v-tooltip\",\n                    {\n                      attrs: { top: \"\", \"nudge-top\": \"\", \"max-width\": \"800\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"activator\",\n                          fn: function(ref) {\n                            var on = ref.on\n                            var attrs = ref.attrs\n                            return [\n                              _c(\n                                \"div\",\n                                _vm._g(_vm._b({}, \"div\", attrs, false), on),\n                                [\n                                  !_vm.dadosDeEntrada.uriImagem\n                                    ? _c(\"v-file-input\", {\n                                        staticClass: \"mt-3\",\n                                        attrs: {\n                                          file: \"\",\n                                          dense: \"\",\n                                          name: \"uriImagem\",\n                                          outlined: \"\",\n                                          \"append-icon\": \"fa-file-upload\",\n                                          \"prepend-icon\": \"\",\n                                          accept:\n                                            \"image/png, image/jpeg, image/jpg\",\n                                          placeholder: \"Selecione uma imagem\"\n                                        },\n                                        on: {\n                                          change: _vm.tratarEventoSalvarAnexo\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"label\",\n                                              fn: function() {\n                                                return [\n                                                  _c(\"label-personalizado\", {\n                                                    attrs: {\n                                                      campo: \"uriImagem\",\n                                                      tela: _vm.nomeTela\n                                                    }\n                                                  })\n                                                ]\n                                              },\n                                              proxy: true\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        ),\n                                        model: {\n                                          value: _vm.dadosDeEntrada.uriImagem,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.dadosDeEntrada,\n                                              \"uriImagem\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"dadosDeEntrada.uriImagem\"\n                                        }\n                                      })\n                                    : _vm._e(),\n                                  _vm.dadosDeEntrada.uriImagem\n                                    ? _c(\"v-text-field\", {\n                                        attrs: {\n                                          outlined: \"\",\n                                          readonly: \"\",\n                                          value: _vm.nomeAnexo\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"label\",\n                                              fn: function() {\n                                                return [\n                                                  _c(\"label-personalizado\", {\n                                                    attrs: {\n                                                      campo: \"uriImagem\",\n                                                      tela: _vm.nomeTela\n                                                    }\n                                                  })\n                                                ]\n                                              },\n                                              proxy: true\n                                            },\n                                            {\n                                              key: \"append\",\n                                              fn: function() {\n                                                return [\n                                                  _c(\n                                                    \"v-tooltip\",\n                                                    {\n                                                      attrs: { top: \"\" },\n                                                      scopedSlots: _vm._u(\n                                                        [\n                                                          {\n                                                            key: \"activator\",\n                                                            fn: function(ref) {\n                                                              var on = ref.on\n                                                              return [\n                                                                _c(\n                                                                  \"a\",\n                                                                  _vm._g(\n                                                                    {\n                                                                      staticClass:\n                                                                        \"az-action-link-icon mt-1\",\n                                                                      attrs: {\n                                                                        slot:\n                                                                          \"activator\",\n                                                                        target:\n                                                                          \"_blank\"\n                                                                      },\n                                                                      on: {\n                                                                        click:\n                                                                          _vm.anularCampoAnexo\n                                                                      },\n                                                                      slot:\n                                                                        \"activator\"\n                                                                    },\n                                                                    on\n                                                                  ),\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-times-circle\"\n                                                                    })\n                                                                  ]\n                                                                )\n                                                              ]\n                                                            }\n                                                          }\n                                                        ],\n                                                        null,\n                                                        true\n                                                      )\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                                        Remover\\n                                    \"\n                                                      )\n                                                    ]\n                                                  )\n                                                ]\n                                              },\n                                              proxy: true\n                                            },\n                                            {\n                                              key: \"append-outer\",\n                                              fn: function() {\n                                                return [\n                                                  _vm.dadosDeEntrada.id\n                                                    ? _c(\n                                                        \"v-tooltip\",\n                                                        {\n                                                          attrs: { top: \"\" },\n                                                          scopedSlots: _vm._u(\n                                                            [\n                                                              {\n                                                                key:\n                                                                  \"activator\",\n                                                                fn: function(\n                                                                  ref\n                                                                ) {\n                                                                  var on =\n                                                                    ref.on\n                                                                  return [\n                                                                    _c(\n                                                                      \"a\",\n                                                                      _vm._g(\n                                                                        {\n                                                                          staticClass:\n                                                                            \"az-action-link-icon mt-1\",\n                                                                          attrs: {\n                                                                            slot:\n                                                                              \"activator\",\n                                                                            href: _vm.criarLinkDownload(\n                                                                              _vm\n                                                                                .dadosDeEntrada\n                                                                                .uriImagem\n                                                                            ),\n                                                                            target:\n                                                                              \"_blank\"\n                                                                          },\n                                                                          slot:\n                                                                            \"activator\"\n                                                                        },\n                                                                        on\n                                                                      ),\n                                                                      [\n                                                                        _c(\n                                                                          \"i\",\n                                                                          {\n                                                                            staticClass:\n                                                                              \"fas fa-download\"\n                                                                          }\n                                                                        )\n                                                                      ]\n                                                                    )\n                                                                  ]\n                                                                }\n                                                              }\n                                                            ],\n                                                            null,\n                                                            true\n                                                          )\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            \"\\n                                        Download\\n                                    \"\n                                                          )\n                                                        ]\n                                                      )\n                                                    : _vm._e()\n                                                ]\n                                              },\n                                              proxy: true\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ]\n                          }\n                        }\n                      ]),\n                      model: {\n                        value: _vm.apresentaTooltipImagem,\n                        callback: function($$v) {\n                          _vm.apresentaTooltipImagem = $$v\n                        },\n                        expression: \"apresentaTooltipImagem\"\n                      }\n                    },\n                    [_vm._v(\"\\n                    Até 15mb\\n                \")]\n                  )\n                ],\n                1\n              ),\n              _vm.dadosDeEntrada.tipoBem === \"Veículo\"\n                ? _c(\n                    \"v-col\",\n                    { attrs: { cols: \"4\" } },\n                    [\n                      _c(\"v-autocomplete\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: _vm.getObrigatorioRotulosPersonalizados(\n                              \"anoFabricacaoModelo\",\n                              _vm.nomeTela\n                            )\n                              ? \"required\"\n                              : \"\",\n                            expression:\n                              \"getObrigatorioRotulosPersonalizados('anoFabricacaoModelo', nomeTela) ? 'required' : ''\"\n                          }\n                        ],\n                        attrs: {\n                          items: _vm.anoFabricacaoModelo,\n                          placeholder: \"Informe o ano de fabricacao/modelo\",\n                          name: \"anoFabricacaoModelo\",\n                          \"error-messages\": _vm.errors.collect(\n                            \"anoFabricacaoModelo\"\n                          )\n                        },\n                        on: {\n                          focusout: _vm.salvarFormulario,\n                          change: _vm.salvarFormulario\n                        },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"label\",\n                              fn: function() {\n                                return [\n                                  _c(\"label-personalizado\", {\n                                    attrs: {\n                                      campo: \"anoFabricacaoModelo\",\n                                      tela: _vm.nomeTela\n                                    }\n                                  })\n                                ]\n                              },\n                              proxy: true\n                            }\n                          ],\n                          null,\n                          false,\n                          1544767286\n                        ),\n                        model: {\n                          value: _vm.dadosDeEntrada.anoFabricacaoModelo,\n                          callback: function($$v) {\n                            _vm.$set(\n                              _vm.dadosDeEntrada,\n                              \"anoFabricacaoModelo\",\n                              $$v\n                            )\n                          },\n                          expression: \"dadosDeEntrada.anoFabricacaoModelo\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.dadosDeEntrada.tipoBem === \"Veículo\"\n                ? _c(\n                    \"v-col\",\n                    { attrs: { cols: \"4\" } },\n                    [\n                      _c(\"az-combo-enum\", {\n                        attrs: {\n                          placeholder: \"Selecione\",\n                          maxlength: \"100\",\n                          name: \"CombustivelVeiculo\",\n                          \"order-by\": \"value\",\n                          \"is-required\": _vm.getObrigatorioRotulosPersonalizados(\n                            \"combustivel\",\n                            _vm.nomeTela\n                          ),\n                          \"enum-object\": _vm.combustivelItemIncorporacao,\n                          insertNullItem: false\n                        },\n                        on: { input: _vm.salvarFormulario },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"label\",\n                              fn: function() {\n                                return [\n                                  _c(\"label-personalizado\", {\n                                    attrs: {\n                                      campo: \"combustivel\",\n                                      tela: _vm.nomeTela\n                                    }\n                                  })\n                                ]\n                              },\n                              proxy: true\n                            }\n                          ],\n                          null,\n                          false,\n                          3773525728\n                        ),\n                        model: {\n                          value: _vm.dadosDeEntrada.combustivel,\n                          callback: function($$v) {\n                            _vm.$set(_vm.dadosDeEntrada, \"combustivel\", $$v)\n                          },\n                          expression: \"dadosDeEntrada.combustivel\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.dadosDeEntrada.tipoBem === \"Veículo\"\n                ? _c(\n                    \"v-col\",\n                    { attrs: { cols: \"4\" } },\n                    [\n                      _c(\"az-combo-enum\", {\n                        attrs: {\n                          placeholder: \"Selecione\",\n                          maxlength: \"100\",\n                          name: \"CategoriaVeiculo\",\n                          \"is-required\": _vm.getObrigatorioRotulosPersonalizados(\n                            \"categoria\",\n                            _vm.nomeTela\n                          ),\n                          \"enum-object\": _vm.categoriaItemIncorporacao,\n                          insertNullItem: false,\n                          \"order-by\": \"''\"\n                        },\n                        on: { input: _vm.salvarFormulario },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"label\",\n                              fn: function() {\n                                return [\n                                  _c(\"label-personalizado\", {\n                                    attrs: {\n                                      campo: \"categoria\",\n                                      tela: _vm.nomeTela\n                                    }\n                                  })\n                                ]\n                              },\n                              proxy: true\n                            }\n                          ],\n                          null,\n                          false,\n                          1837813286\n                        ),\n                        model: {\n                          value: _vm.dadosDeEntrada.categoria,\n                          callback: function($$v) {\n                            _vm.$set(_vm.dadosDeEntrada, \"categoria\", $$v)\n                          },\n                          expression: \"dadosDeEntrada.categoria\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}