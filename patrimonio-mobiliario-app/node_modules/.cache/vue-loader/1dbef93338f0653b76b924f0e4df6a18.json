{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/movimentacao/movimentacao-interna/edicao/documentos/MovimentacaoInternaEdicaoDocumentos.vue?vue&type=style&index=0&id=53149192&scoped=true&lang=stylus&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/pages/movimentacao/movimentacao-interna/edicao/documentos/MovimentacaoInternaEdicaoDocumentos.vue","mtime":1615564333680},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.movimentacao-edicao-documentos\n    min-height 70vh\n\n.movimentacao-interna-documentos\n    min-height 62vh\n",{"version":3,"sources":["MovimentacaoInternaEdicaoDocumentos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkQA;AACA;;AAEA;AACA","file":"MovimentacaoInternaEdicaoDocumentos.vue","sourceRoot":"src/views/pages/movimentacao/movimentacao-interna/edicao/documentos","sourcesContent":["<template>\n    <div class=\"movimentacao-edicao-documentos\">\n        <movimentacao-interna-edicao-documentos-vazia\n            v-if=\"documentos.length === 0\"\n            @novoDocumento=\"novoDocumento\"/>\n\n        <div v-else class=\"movimentacao-interna-documentos pt-5\">\n            <div class=\"d-flex pr-5 justify-end\">\n                <v-btn\n                    :disabled=\"!verificaPermissaoEdicao\"\n                    color=\"primary\"\n                    depressed\n                    @click=\"novoDocumento\">\n                    Novo\n                </v-btn>\n            </div>\n            <div :key=\"documento.id\" v-for=\"(documento, index) in documentos\">\n                <movimentacao-interna-edicao-documentos-item\n                    v-model=\"documentos[index]\"\n                    :tiposDocumento=\"tiposDocumento\"\n                    :index=\"index\"\n                    class=\"ml-9\"\n                    @baixarAnexo=\"baixarAnexo\"\n                    @removerDocumento=\"remover\"\n                    @salvar=\"tratarEventoSalvar\"\n                    @salvarAnexo=\"tratarEventoSalvarAnexo(documentos[index],index)\"\n                />\n            </div>\n        </div>\n            <acoes-botoes-finalizar-voltar :desabilitado=\"!verificaPermissaoEdicao\"\n                                           :em-processamento=\"movimentacaoEmProcessamento\"\n                                           :textoButton=\"retornarTextoButton()\"\n                                           texto-em-processamento=\"A movimentação está em processamento e não pode ser finalizada\"\n                                           texto-bloqueio=\"Você não possui permissão para finalizar.\"\n                                           @finalizar=\"tratarEventoFinalizar\"\n                                           @voltar=\"tratarEventoVoltar\"/>\n    </div>\n</template>\n\n<script>\n    import AzHasPermissions from '@azinformatica/loki/src/utils/AzHasPermissions'\n    import MovimentacaoInternaEdicaoDocumentosVazia from './MovimentacaoInternaEdicaoDocumentosVazia'\n    import MovimentacaoInternaEdicaoDocumentosItem from './MovimentacaoInternaEdicaoDocumentosItem'\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import {mapActions, mapMutations} from 'vuex'\n    import AcoesBotoesFinalizarVoltar from '@/views/components/acoes/AcoesBotoesFinalizarVoltar'\n\n    export default {\n        name: 'MovimentacaoInternaEdicaoDocumentos',\n        components: {\n            AcoesBotoesFinalizarVoltar,\n            MovimentacaoInternaEdicaoDocumentosItem,\n            MovimentacaoInternaEdicaoDocumentosVazia\n        },\n        data() {\n            return {\n                movimentacaoInternaId: null,\n                tipoMovimentacao: null,\n                documentoEmElaboracao: false,\n                tiposDocumento: [],\n                documentos: []\n            }\n        },\n        async mounted() {\n            this.movimentacaoInternaId = this.$route.params.movimentacaoInternaId\n            await this.buscarTipoMovimentacao()\n            await this.buscarTipoDocumentos()\n            await this.buscarDocumentosMovimentacao()\n        },\n        computed: {\n            verificaPermissaoEdicao() {\n                return AzHasPermissions(this.$store.state.loki.user.authorities, ['Mobiliario.Movimentacoes'])\n            },\n            movimentacaoEmProcessamento(){\n                return this.situacaoMovimentacao === 'EM_PROCESSAMENTO'\n            },\n            situacaoMovimentacao(){\n                return this.$store.state.movimentacaointerna.situacaoMovimentacaoInterna\n            }\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.MOVIMENTACAO_INTERNA.BUSCAR_TIPO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.CADASTRAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.ATUALIZAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.DELETAR_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.BUSCAR_TIPO_DOCUMENTO_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.BUSCAR_DOCUMENTOS_MOVIMENTACAO_INTERNA,\n                actionTypes.MOVIMENTACAO_INTERNA.DISTRIBUICAO.FINALIZAR_DISTRIBUICAO,\n                actionTypes.MOVIMENTACAO_INTERNA.TEMPORARIA.ENVIAR_TEMPORARIA,\n                actionTypes.MOVIMENTACAO_INTERNA.ENTRE_SETORES.FINALIZAR_ENTRE_SETORES,\n                actionTypes.MOVIMENTACAO_INTERNA.ENTRE_ESTOQUES.FINALIZAR_ENTRE_ESTOQUES,\n                actionTypes.MOVIMENTACAO_INTERNA.DEVOLUCAO_ALMOXARIFADO.FINALIZAR_DEVOLUCAO_ALMOXARIFADO,\n                actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DOCUMENTO_DOWNLOAD,\n                actionTypes.PATRIMONIO.INCORPORACAO.DOCUMENTO.DOCUMENTO_UPLOAD\n            ]),\n            ...mapMutations([\n                mutationTypes.MOVIMENTACAO_INTERNA.DOCUMENTO.REMOVER_DOCUMENTO_MOVIMENTACAO_INTERNA\n            ]),\n            async buscarTipoDocumentos() {\n                const resultado = await this.buscarTipoDocumentoMovimentacaoInterna()\n\n                if (resultado) {\n                    this.tiposDocumento = this.ordenaTipoDocumentos(resultado)\n                }\n            },\n            async buscarTipoMovimentacao() {\n                this.tipoMovimentacao = await this.buscarTipoMovimentacaoInterna(this.movimentacaoInternaId)\n            },\n            async buscarDocumentosMovimentacao() {\n                this.documentos = await this.buscarDocumentosMovimentacaoInterna(this.movimentacaoInternaId)\n            },\n            async tratarEventoSalvar(documento) {\n                this.desabilitarLoadingGlobal()\n                if (documento.valor === 0) {\n                    documento.valor = null\n                }\n                if (typeof documento.id == 'undefined') {\n                    await this.cadastrarDocumentoMovimentacaoInterna(documento)\n                    this.documentoEmElaboracao = false\n                    await this.buscarDocumentosMovimentacao()\n                } else {\n                    await this.atualizarDocumentoMovimentacaoInterna(documento)\n                    this.documentoEmElaboracao = false\n                }\n                this.habilitarLoadingGlobal()\n            },\n            retornarTextoButton(){\n                if(this.tipoMovimentacao === 'TEMPORARIA'){\n                    return 'Enviar'\n                }\n                return 'Finalizar'\n            },\n            tratarEventoVoltar() {\n                if (this.verificaPermissaoEdicao) {\n                    this.$router.push({\n                        name: 'MovimentacaoInternaEdicaoItens',\n                        params: {movimentacaoInternaId: this.movimentacaoInternaId},\n                    })\n                } else{\n                    this.$router.push({\n                        name: 'IncorporacaoListagem'\n                    })\n                }\n            },\n            async tratarEventoFinalizar() {\n                let dadosFinalizacao = null\n                if (this.tipoMovimentacao === 'DISTRIBUICAO') {\n                    dadosFinalizacao = await this.finalizarDistribuicao(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'ENTRE_SETORES') {\n                    dadosFinalizacao = await this.finalizarEntreSetores(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'ENTRE_ESTOQUES') {\n                    dadosFinalizacao = await this.finalizarEntreEstoques(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'DEVOLUCAO_ALMOXARIFADO') {\n                    dadosFinalizacao = await this.finalizarDevolucaoAlmoxarifado(this.movimentacaoInternaId)\n                } else if (this.tipoMovimentacao === 'TEMPORARIA') {\n                    dadosFinalizacao = await this.enviarTemporaria(this.movimentacaoInternaId)\n                }\n                if (dadosFinalizacao && dadosFinalizacao.situacao) {\n                    await this.tratarRedirecionamentoAposFinalizacao(dadosFinalizacao)\n                }\n            },\n            async tratarRedirecionamentoAposFinalizacao(dadosFinalizacao) {\n                if (dadosFinalizacao.situacao === 'EM_PROCESSAMENTO') {\n                    if (this.tipoMovimentacao === 'DISTRIBUICAO') {\n                        this.redirecionarMovimentacaoEmProcessamento('distribuição')\n                    } else if (this.tipoMovimentacao === 'ENTRE_SETORES') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação entre setores')\n                    } else if (this.tipoMovimentacao === 'ENTRE_ESTOQUES') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação entre estoques')\n                    } else if (this.tipoMovimentacao === 'DEVOLUCAO_ALMOXARIFADO') {\n                        this.redirecionarMovimentacaoEmProcessamento('devolução para almoxarifado')\n                    } else if (this.tipoMovimentacao === 'TEMPORARIA') {\n                        this.redirecionarMovimentacaoEmProcessamento('movimentação temporária')\n                    }\n                } else {\n                    this.mostrarNotificacaoSucessoDefault()\n                    await this.$router.replace({\n                        name: 'VisualizarRegistroMovimentacaoInterna',\n                        params: {movimentacaoInternaId: this.movimentacaoInternaId}\n                    })\n                }\n            },\n            redirecionarMovimentacaoEmProcessamento (tipoMovimentacao) {\n                this.mostrarNotificacaoSucessoComConfirmacao({\n                                                                 titulo: 'Tudo certo, ' + tipoMovimentacao + ' em processamento',\n                                                                 subTitulo: 'Sua ' + tipoMovimentacao + ' foi adicionada na fila para processamento e iremos ' +\n                                                                     'lhe notificar assim que estiver terminada.',\n                                                                 textoBotao: 'Voltar para a listagem',\n                                                             },\n                                                             (result) => {\n                                                                 if (result.isConfirmed) {\n                                                                     this.$router.replace({ name: 'MovimentacaoInternaListagem' })\n                                                                 }\n                                                             })\n            },\n            ordenaTipoDocumentos(resultado) {\n                return resultado.sort((a, b) => {\n                    if (a.descricao < b.descricao) {\n                        return -1\n                    }\n\n                    if (a.descricao > b.descricao) {\n                        return 1\n                    }\n\n                    return 0\n                })\n            },\n            async baixarAnexo(anexo) {\n                await this.documentoDownload(anexo)\n            },\n            async tratarEventoSalvarAnexo(anexo, index) {\n                this.desabilitarLoadingGlobal()\n                if (anexo.uriAnexo) {\n                    this.documentos[index].uriAnexo = await this.documentoUpload(anexo)\n                }\n                this.habilitarLoadingGlobal()\n            },\n            async novoDocumento() {\n                if (this.verificaQuantidadeDeDocumentosExcedida()) {\n                    this.mostrarNotificacaoErro('A quantidade máxima de documentos cadastrados para esta movimentação foi atingida.')\n                } else {\n                    if (!this.verificarDocumentosEmElaboracao()) {\n                        this.documentoEmElaboracao = true\n\n                        this.documentos.push({\n                            movimentacao: this.movimentacaoInternaId,\n                            numero: null,\n                            valor: null,\n                            tipo: null,\n                            data: null,\n                            uriAnexo: null\n                        })\n                    } else {\n                        this.mostrarNotificacaoAviso('Finalize o cadastro para cadastrar novos documentos')\n                    }\n                }\n            },\n            verificarDocumentosEmElaboracao() {\n                return this.documentoEmElaboracao\n            },\n            verificaQuantidadeDeDocumentosExcedida() {\n                return this.documentos.length === 30\n            },\n            async remover(documento) {\n                if (typeof documento.numero != 'undefined' && typeof documento.id != 'undefined') {\n                    await this.deletarDocumentoMovimentacaoInterna(documento)\n                } else {\n                    this.removerDocumentoMovimentacaoInterna(documento)\n                    this.documentoEmElaboracao = false\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .movimentacao-edicao-documentos\n        min-height 70vh\n\n    .movimentacao-interna-documentos\n        min-height 62vh\n</style>\n"]}]}