{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/file/AzFileUpload.vue?vue&type=style&index=0&id=7ce7b113&scoped=true&lang=stylus&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/@azinformatica/loki/src/components/file/AzFileUpload.vue","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.az-drop-file\n    border: 2px dashed #ccc\n    margin: 10px 0\n    padding: 30px 0 20px\n    align-content: center\n    align-items: center\n    text-align: center\n    background-color: #eeeeee\n    color: #7b7b7b\n    display: flex\n    position: relative\n\n    &:hover\n        border-color: #939393\n\n    .center\n        margin: 0 auto\n        padding: 0\n\n    .input-file\n        opacity: 0\n        position: absolute\n        left: 0\n        top: 0\n        width: 10px\n        height: 10px\n        z-index: 1\n\n    &__big\n        padding: 70px 0 60px !important\n\n    p\n        width: 100%\n        color: #777\n        font-size: 13px\n        margin-bottom: 0\n        margin-top: 15px\n\n    a\n        background-color: #d28a2C\n        color: white\n        padding: 10px 15px 10px 10px\n        border-radius: 2px\n        font-size: 13px\n        &:hover\n            background-color: lighten(#d28a2C, 10%)\n            border: 1px solid lighten(#d28a2C, 10%) !important\n\n        i\n            color: white !important\n            position: relative\n            top: 2px\n            font-size: 18px\n            margin-right: 5px\n",{"version":3,"sources":["AzFileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AzFileUpload.vue","sourceRoot":"node_modules/@azinformatica/loki/src/components/file","sourcesContent":["<template>\n    <div>\n        <form enctype=\"multipart/form-data\" novalidate>\n            <div\n                class=\"az-drop-file\"\n                :style=\"{ height: height }\"\n                @drop.prevent=\"onDropFiles($event.dataTransfer.items)\"\n                @dragover.prevent=\"\"\n            >\n                <input\n                    id=\"azFileSelector\"\n                    type=\"file\"\n                    :multiple=\"multiple\"\n                    class=\"input-file\"\n                    :name=\"uploadFieldName\"\n                    :accept=\"accept\"\n                    @change=\"onSelectFiles($event.target.files)\"\n                />\n                <div class=\"center\">\n                    <slot></slot>\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        accept: {\n            type: String,\n            default: '*'\n        },\n        repository: {\n            type: String,\n            required: true\n        },\n        thumbnail: {\n            type: Boolean,\n            default: false\n        },\n        height: {\n            type: String,\n            default: '200px'\n        },\n        multiple: {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            uploadFieldName: 'file'\n        }\n    },\n    methods: {\n        calcFileSize(bytes, unit) {\n            const k = 1024\n            return parseFloat((bytes / Math.pow(k, unit)).toFixed(2))\n        },\n        createFormData(file) {\n            const formData = new FormData()\n            formData.append(this.uploadFieldName, file)\n            formData.append('repository', this.repository)\n            formData.append('thumbnail', this.thumbnail)\n            return formData\n        },\n        createPayload(file) {\n            return {\n                formData: this.createFormData(file),\n                filename: file.name\n            }\n        },\n        getMaxSizeConfig() {\n            const fileConfig = this.$store.state.loki.file\n            const maxSize = fileConfig.maxSize.replace(/([A-Za-z]+)/g, '')\n            const unit = ['B', 'KB', 'MB', 'GB', 'TB'].indexOf(fileConfig.maxSize.replace(/\\d+/g, '').toUpperCase())\n            return { maxSize, unit }\n        },\n        isFileBiggerThanExpected(file) {\n            const { maxSize, unit } = this.getMaxSizeConfig()\n            const fileSize = this.calcFileSize(file.size, unit)\n            return fileSize > maxSize\n        },\n        onDropFiles(eventItems) {\n            if (!Object.keys(eventItems).length) {\n                return\n            }\n            const files = []\n            Object.keys(eventItems).forEach(key => {\n                const item = eventItems[key]\n                if (item.kind === 'file') {\n                    files.push(item.getAsFile())\n                }\n            })\n            this.uploadFiles(files)\n        },\n        onSelectFiles(fileList) {\n            if (!fileList.length) {\n                return\n            }\n            this.uploadFiles(fileList)\n            this.resetSelectedFiles()\n        },\n        openFileSelector() {\n            document.getElementById('azFileSelector').click()\n        },\n        uploadFiles(fileList) {\n            Array.from(Array(fileList.length).keys()).map(x => {\n                const file = fileList[x]\n                if (this.isFileBiggerThanExpected(file)) {\n                    this.throwFileExceedMaxLimitSizeEvent(file)\n                } else {\n                    const payload = this.createPayload(file)\n                    this.$store.dispatch('uploadFile', payload)\n                }\n            })\n        },\n        resetSelectedFiles() {\n            document.getElementById('azFileSelector').value = ''\n        },\n        throwFileExceedMaxLimitSizeEvent(file) {\n            this.$emit('error', {\n                type: 'FILE_EXCEEDED_MAX_SIZE_LIMIT',\n                filename: file.name\n            })\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"stylus\">\n.az-drop-file\n    border: 2px dashed #ccc\n    margin: 10px 0\n    padding: 30px 0 20px\n    align-content: center\n    align-items: center\n    text-align: center\n    background-color: #eeeeee\n    color: #7b7b7b\n    display: flex\n    position: relative\n\n    &:hover\n        border-color: #939393\n\n    .center\n        margin: 0 auto\n        padding: 0\n\n    .input-file\n        opacity: 0\n        position: absolute\n        left: 0\n        top: 0\n        width: 10px\n        height: 10px\n        z-index: 1\n\n    &__big\n        padding: 70px 0 60px !important\n\n    p\n        width: 100%\n        color: #777\n        font-size: 13px\n        margin-bottom: 0\n        margin-top: 15px\n\n    a\n        background-color: #d28a2C\n        color: white\n        padding: 10px 15px 10px 10px\n        border-radius: 2px\n        font-size: 13px\n        &:hover\n            background-color: lighten(#d28a2C, 10%)\n            border: 1px solid lighten(#d28a2C, 10%) !important\n\n        i\n            color: white !important\n            position: relative\n            top: 2px\n            font-size: 18px\n            margin-right: 5px\n</style>\n"]}]}