{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/documento/Documentos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/documento/Documentos.vue","mtime":1616610237013},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DocumentosVazio from './DocumentosVazio'\nimport DocumentosItem from './DocumentosItem'\n\nexport default {\n    data() {\n        return {\n            documentos: [],\n            tiposDocumento: [],\n            documentoVazio: true\n        }\n    },\n    components: {DocumentosItem, DocumentosVazio},\n    props: {\n        permissaoEdicao: {\n            type: Boolean,\n            required: true\n        },\n        configBotaoRemover: {\n            type: Object\n        },\n        donoDocumento: {\n            type: String,\n            required: true\n        },\n        donoDocumentoId: {\n            type: Number,\n            required: true\n        },\n        actions: {\n            type: Object,\n            required: true\n        },\n        mutations: {\n            type: Object,\n            required: true\n        }\n    },\n    async mounted() {\n        await this.buscarTipoDocumentos()\n        await this.buscarDocumentosDono()\n    },\n    methods: {\n        async buscarTipoDocumento() {\n            return await this.$store.dispatch(this.actions.buscarTipoDocumento)\n        },\n        async buscarDocumentos(donoDocumentoId) {\n            return await this.$store.dispatch(this.actions.buscarDocumentos, donoDocumentoId)\n        },\n        async cadastrarDocumento(doc) {\n            await this.$store.dispatch(this.actions.cadastrarDocumento, doc)\n        },\n        async atualizarDocumento(doc) {\n            await this.$store.dispatch(this.actions.atualizarDocumento, doc)\n        },\n        async enviarDocumento(doc) {\n            return await this.$store.dispatch(this.actions.enviarDocumento, doc)\n        },\n        async deletarDocumento(doc) {\n            await this.$store.dispatch(this.actions.deletarDocumento, doc)\n        },\n        async removerDocumentos(doc) {\n            await this.$store.commit(this.mutations.removerDocumentos, doc)\n        },\n        async tratarEventoSalvarUri(documento, index) {\n            this.desabilitarLoadingGlobal()\n            if (documento.uriAnexo) {\n                this.documentos[index].uriAnexo = await this.enviarDocumento(documento)\n            }\n            this.habilitarLoadingGlobal()\n        },\n        async novoDocumento() {\n            if (this.quantidadeDeDocumentosExcedida()) {\n                this.mostrarNotificacaoErro('A quantidade m√°xima de documentos cadastrados foi atingida.')\n            } else {\n                if (this.validarCadastrosFinalizados()) {\n                    this.documentos.push({\n                        [this.donoDocumento]: this.donoDocumentoId,\n                        numero: null,\n                        valor: null,\n                        tipo: null,\n                        data: null,\n                        uriAnexo: null\n                    })\n                    this.documentoVazio = false\n                } else {\n                    this.mostrarNotificacaoAviso('Finalize o cadastro para cadastrar novos documentos')\n                }\n            }\n        },\n        quantidadeDeDocumentosExcedida() {\n            return this.documentos.length === 30\n        },\n        validarCadastrosFinalizados() {\n            return this.documentoVazio\n        },\n        async tratarEventoRemoverDocumento(documento) {\n            if (typeof documento.numero != 'undefined' && typeof documento.id != 'undefined') {\n                await this.deletarDocumento(documento)\n            } else {\n                this.removerDocumentos(documento)\n                this.documentoVazio = true\n            }\n        },\n        async buscarTipoDocumentos() {\n            const resultado = await this.buscarTipoDocumento()\n            if (resultado) {\n                this.tiposDocumento = this.ordenaTipoDocumentos(resultado)\n            }\n        },\n        ordenaTipoDocumentos(resultado) {\n            return resultado.sort(function (a, b) {\n                if (a.descricao < b.descricao) {\n                    return -1\n                } else if (a.descricao > b.descricao) {\n                    return 1\n                } else {\n                    return 0\n                }\n            })\n        },\n        async buscarDocumentosDono() {\n            this.documentos = await this.buscarDocumentos(this.donoDocumentoId)\n        },\n        async tratarEventoSalvar(documento) {\n            this.desabilitarLoadingGlobal()\n            if (documento.valor === 0) {\n                documento.valor = null\n            }\n            if (typeof documento.id == 'undefined') {\n                await this.cadastrarDocumento(documento)\n                this.documentoVazio = true\n                this.buscarDocumentosDono()\n            } else {\n                await this.atualizarDocumento(documento)\n                this.documentoVazio = true\n            }\n            this.habilitarLoadingGlobal()\n        },\n    }\n}\n",{"version":3,"sources":["Documentos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Documentos.vue","sourceRoot":"src/views/components/documento","sourcesContent":["<template>\n    <v-container fluid>\n        <documentos-vazio\n            v-if=\"documentos.length === 0\"\n            @novoDocumento=\"novoDocumento\"/>\n\n        <div v-else class=\"incorporacao-documentos pt-5\">\n            <div class=\"d-flex pr-5 justify-end\">\n                <v-btn\n                    :disabled=\"!permissaoEdicao\"\n                    color=\"primary\"\n                    depressed\n                    @click=\"novoDocumento\">\n                    Novo\n                </v-btn>\n            </div>\n            <div :key=\"documento.id\" v-for=\"(documento, index) in documentos\">\n                <documentos-item\n                    v-model=\"documentos[index]\"\n                    :tipoDocumento=\"tiposDocumento\"\n                    :index=\"index\"\n                    :permissao-edicao=\"permissaoEdicao\"\n                    :config-botao-remover=\"configBotaoRemover\"\n                    class=\"ml-9\"\n                    @removerDocumento=\"tratarEventoRemoverDocumento\"\n                    @salvar=\"tratarEventoSalvar\"\n                    @salvarUri=\"tratarEventoSalvarUri(documentos[index],index)\"/>\n            </div>\n        </div>\n    </v-container>\n</template>\n\n<script>\n    import DocumentosVazio from './DocumentosVazio'\n    import DocumentosItem from './DocumentosItem'\n\n    export default {\n        data() {\n            return {\n                documentos: [],\n                tiposDocumento: [],\n                documentoVazio: true\n            }\n        },\n        components: {DocumentosItem, DocumentosVazio},\n        props: {\n            permissaoEdicao: {\n                type: Boolean,\n                required: true\n            },\n            configBotaoRemover: {\n                type: Object\n            },\n            donoDocumento: {\n                type: String,\n                required: true\n            },\n            donoDocumentoId: {\n                type: Number,\n                required: true\n            },\n            actions: {\n                type: Object,\n                required: true\n            },\n            mutations: {\n                type: Object,\n                required: true\n            }\n        },\n        async mounted() {\n            await this.buscarTipoDocumentos()\n            await this.buscarDocumentosDono()\n        },\n        methods: {\n            async buscarTipoDocumento() {\n                return await this.$store.dispatch(this.actions.buscarTipoDocumento)\n            },\n            async buscarDocumentos(donoDocumentoId) {\n                return await this.$store.dispatch(this.actions.buscarDocumentos, donoDocumentoId)\n            },\n            async cadastrarDocumento(doc) {\n                await this.$store.dispatch(this.actions.cadastrarDocumento, doc)\n            },\n            async atualizarDocumento(doc) {\n                await this.$store.dispatch(this.actions.atualizarDocumento, doc)\n            },\n            async enviarDocumento(doc) {\n                return await this.$store.dispatch(this.actions.enviarDocumento, doc)\n            },\n            async deletarDocumento(doc) {\n                await this.$store.dispatch(this.actions.deletarDocumento, doc)\n            },\n            async removerDocumentos(doc) {\n                await this.$store.commit(this.mutations.removerDocumentos, doc)\n            },\n            async tratarEventoSalvarUri(documento, index) {\n                this.desabilitarLoadingGlobal()\n                if (documento.uriAnexo) {\n                    this.documentos[index].uriAnexo = await this.enviarDocumento(documento)\n                }\n                this.habilitarLoadingGlobal()\n            },\n            async novoDocumento() {\n                if (this.quantidadeDeDocumentosExcedida()) {\n                    this.mostrarNotificacaoErro('A quantidade m√°xima de documentos cadastrados foi atingida.')\n                } else {\n                    if (this.validarCadastrosFinalizados()) {\n                        this.documentos.push({\n                            [this.donoDocumento]: this.donoDocumentoId,\n                            numero: null,\n                            valor: null,\n                            tipo: null,\n                            data: null,\n                            uriAnexo: null\n                        })\n                        this.documentoVazio = false\n                    } else {\n                        this.mostrarNotificacaoAviso('Finalize o cadastro para cadastrar novos documentos')\n                    }\n                }\n            },\n            quantidadeDeDocumentosExcedida() {\n                return this.documentos.length === 30\n            },\n            validarCadastrosFinalizados() {\n                return this.documentoVazio\n            },\n            async tratarEventoRemoverDocumento(documento) {\n                if (typeof documento.numero != 'undefined' && typeof documento.id != 'undefined') {\n                    await this.deletarDocumento(documento)\n                } else {\n                    this.removerDocumentos(documento)\n                    this.documentoVazio = true\n                }\n            },\n            async buscarTipoDocumentos() {\n                const resultado = await this.buscarTipoDocumento()\n                if (resultado) {\n                    this.tiposDocumento = this.ordenaTipoDocumentos(resultado)\n                }\n            },\n            ordenaTipoDocumentos(resultado) {\n                return resultado.sort(function (a, b) {\n                    if (a.descricao < b.descricao) {\n                        return -1\n                    } else if (a.descricao > b.descricao) {\n                        return 1\n                    } else {\n                        return 0\n                    }\n                })\n            },\n            async buscarDocumentosDono() {\n                this.documentos = await this.buscarDocumentos(this.donoDocumentoId)\n            },\n            async tratarEventoSalvar(documento) {\n                this.desabilitarLoadingGlobal()\n                if (documento.valor === 0) {\n                    documento.valor = null\n                }\n                if (typeof documento.id == 'undefined') {\n                    await this.cadastrarDocumento(documento)\n                    this.documentoVazio = true\n                    this.buscarDocumentosDono()\n                } else {\n                    await this.atualizarDocumento(documento)\n                    this.documentoVazio = true\n                }\n                this.habilitarLoadingGlobal()\n            },\n        }\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n    .incorporacao-documentos\n        min-height 62vh\n\n</style>\n\n\n"]}]}