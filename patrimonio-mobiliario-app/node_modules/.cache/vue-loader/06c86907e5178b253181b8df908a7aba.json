{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/configuracao/reserva/intervalo/ModalAdicionarIntervalos.vue?vue&type=style&index=0&id=531320d3&scoped=true&lang=stylus&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/modal/configuracao/reserva/intervalo/ModalAdicionarIntervalos.vue","mtime":1620040672249},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.orgao-reserva\n\n    .v-select__selection\n        font-size 13px\n        color #777\n\n    .v-text-field\n        margin-top 0\n        padding-top 12px\n\n.sub-header\n    .v-subheader\n        display table-header-group\n\n.search-listagem-orgaos .input-search\n    background-color #fff !important\n    width 30vw !important\n\n    span\n        max-width 350px\n\n    .v-chip__content\n        width 100%\n\n        span\n            white-space nowrap\n            overflow hidden\n            text-overflow ellipsis\n\n@media (max-width 1250px)\n    .search-listagem-orgaos .input-search\n        span\n            max-width 230px\n\n@media (max-width 720px)\n    .search-listagem-orgaos .input-search\n        background-color #fff !important\n        width 50vw !important\n\n        span\n            max-width 210px\n\n.search-listagem-orgaos\n    background-color white !important\n\n>>>\n.pr-tabela-listagem-orgaos-reserva\n    .v-input__slot\n        margin-bottom 0 !important\n\n    th\n        font-size 13px !important\n        font-weight bold\n        color #666666 !important\n\n    tr:hover\n        background transparent !important\n\n    tr.v-data-table__selected\n        background white !important\n\n    tr.v-data-table__selected td .v-icon\n        color grey !important\n\n",{"version":3,"sources":["ModalAdicionarIntervalos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgaA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA","file":"ModalAdicionarIntervalos.vue","sourceRoot":"src/views/components/modal/configuracao/reserva/intervalo","sourcesContent":["<template>\n    <v-dialog persistent v-model=\"dialog\" width=\"1100\">\n        <v-card>\n            <v-card-title class=\"text-subtitle-2 primary white--text font-weight-bold pt-2 pb-1\">\n                Adicionar Órgãos\n                <v-spacer/>\n                <v-btn min-width=\"10px\" class=\"pa-1 white--text\" text @click=\"fecharModal\">\n                    <v-icon small>fas fa-times</v-icon>\n                </v-btn>\n            </v-card-title>\n            <az-toolbar class=\"search-listagem-orgaos\">\n                <v-row slot=\"actions\">\n                    <v-col class=\"sub-header\">\n                        <v-subheader><span class=\"font-weight-bold\">Quantidade</span></v-subheader>\n                        <v-subheader>{{ dadosDaReserva.quantidadeReservada }}</v-subheader>\n                    </v-col>\n                    <v-col class=\"sub-header\" sm=\"auto\">\n                        <v-subheader><span class=\"font-weight-bold\">Intervalo</span></v-subheader>\n                        <v-subheader>{{ dadosDaReserva.numeroInicio + \" - \" + dadosDaReserva.numeroFim }}</v-subheader>\n                    </v-col>\n                    <v-col class=\"sub-header\">\n                        <v-subheader><span class=\"font-weight-bold\">Restante</span></v-subheader>\n                        <v-subheader>{{ dadosDaReserva.quantidadeRestante }}</v-subheader>\n                    </v-col>\n                </v-row>\n                <az-search\n                    :filter=\"filtrosInterno\"\n                    @remove-filter=\"tratarEventoRemoverFiltro\"\n                    @simple-search=\"tratarEventoBuscaSimples\"\n                    :maxlengthInput=\"500\"\n                    id=\"azSearch\"\n                    slot=\"simpleSearch\"\n                    simple-search-placeholder=\"Busque por: órgão\"\n                />\n            </az-toolbar>\n\n            <v-responsive class=\"overflow-y-auto\" max-height=\"50vh\">\n                <v-data-table\n                    v-model=\"reservas\"\n                    :headers=\"colunasTabela\"\n                    :items=\"orgaos\"\n                    ref=\"table\"\n                    :options.sync=\"paginacaoInterna\"\n                    :server-items-length=\"totalItens\"\n                    class=\"pr-tabela-listagem-orgaos-reserva \"\n                    hide-default-footer\n                    item-key=\"id\"\n                    show-select\n                    no-data-text=\"Não há órgãos a serem adicionados\">\n                    <template v-slot:header.data-table-select=\"{ on, props }\">\n                        <v-simple-checkbox\n                            :ripple=\"false\"\n                            color=\"grey\"\n                            v-bind=\"props\"\n                            v-on=\"on\"\n                            @click=\"tratarSelecaoReserva(props)\"/>\n                    </template>\n                    <template v-slot:item=\"item\">\n                        <modal-adicionar-intervalos-form v-model=\"item\"\n                                                         @adicionarOrgao=\"adicionarOrgao\"\n                                                         @removerOrgao=\"removerOrgao\"\n                                                         @buscarProximoIntervalo=\"buscarProximoIntervalo\"\n                        />\n                    </template>\n                </v-data-table>\n            </v-responsive>\n            <paginacao class=\"ml-5 mr-5\" :paginacao-interna=\"paginacaoInterna\" :paginas=\"paginas\"\n                       @resetaPage=\"resetaPage\"/>\n\n            <v-divider></v-divider>\n            <v-card-actions>\n                <v-col md=\"12\" sm=\"12\" xl=\"12\" xs=\"12\" class=\"pa-0\">\n                    <div class=\"az-actions-form mt-3 pb-3\">\n                        <botao-cancelar @cancelar=\"fecharModal\"/>\n                        <v-tooltip top max-width=\"200\"\n                                   v-if=\"quantidadeSelecionadaIgualZero || existeIntervalosSemPreenchimento\">\n                            <template v-slot:activator=\"{on}\">\n                                <div v-on=\"on\" class=\"btn-disabled\">\n                                    <v-btn disabled depressed color=\"primary\">\n                                        <span>Adicionar ({{ quantidadeSelecionados }})</span>\n                                    </v-btn>\n                                </div>\n                            </template>\n                            <span v-if=\"quantidadeSelecionadaIgualZero\">Nenhum órgão selecionado</span>\n                            <span v-else>Verifique inconsistências no preenchimento dos intervalos</span>\n                        </v-tooltip>\n                        <v-btn\n                            v-else\n                            @click=\"tratarEventoAdicionar\"\n                            color=\"primary\"\n                            depressed>\n                            <span>Adicionar ({{ quantidadeSelecionados }})</span>\n                        </v-btn>\n                    </div>\n                </v-col>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\n    import Paginacao from '@/views/components/tabela/Paginacao'\n    import BotaoCancelar from '@/views/components/botoes/BotaoCancelar'\n    import _ from 'lodash'\n    import ModalAdicionarIntervalosForm from './ModalAdicionarIntervalosForm'\n    import {actionTypes, mutationTypes} from '@/core/constants'\n    import {mapActions, mapMutations} from 'vuex'\n\n    export default {\n        name: 'ModalAdicionarIntervalos',\n        components: {BotaoCancelar, Paginacao, ModalAdicionarIntervalosForm},\n        data() {\n            return {\n                dialog: true,\n                orgaos: [],\n                filtrosInterno: this.getFiltros(),\n                paginacaoInterna: this.getPaginacao(),\n                paginas: 0,\n                totalItens: 0,\n                quantidadeSelecionados: 0,\n                tipoReserva: [{text: 'Automático', value: 'AUTOMATICO'}],\n                dadosDaReserva: {},\n                quantidadeRestante: 0,\n                reservas: [],\n                reservaId: this.$route.params.id,\n                intervalo: {\n                    items: []\n                },\n                colunasTabela: [],\n                selecionarTodos: false,\n                desselecionarTodos: false\n            }\n        },\n        watch: {\n            paginacaoInterna: {\n                handler(novoValor) {\n                    this.tratarEventoPaginar(novoValor)\n                },\n                deep: true\n            },\n            'reservas'() {\n                this.calcularQuantidadeOrgaosSelecionados()\n                this.calcularQuantidadeRestante()\n            }\n        },\n        computed: {\n            quantidadeSelecionadaIgualZero() {\n                return this.quantidadeSelecionados === 0\n            },\n            existeIntervalosSemPreenchimento() {\n                return this.reservas\n                    .filter(reserva => !reserva.quantidadeReservada || !reserva.numeroInicio || !reserva.numeroFim)\n                    .length > 0\n            }\n        },\n        async mounted() {\n            this.colunasTabela = await this.obterColunasTabela()\n            await this.buscarReserva()\n            await this.buscar()\n        },\n        methods: {\n            ...mapActions([\n                actionTypes.CONFIGURACAO.RESERVA.BUSCAR_TODOS_ORGAOS_PAGINADO,\n                actionTypes.CONFIGURACAO.RESERVA.BUSCAR_RESERVA_POR_ID,\n                actionTypes.CONFIGURACAO.RESERVA.INTERVALO.BUSCAR_INTERVALO,\n                actionTypes.CONFIGURACAO.RESERVA.INTERVALO.SALVAR_INTERVALO\n            ]),\n            ...mapMutations([\n                mutationTypes.CONFIGURACAO.RESERVA.SET_FILTRO_BUSCA_ORGAOS_RESERVA,\n                mutationTypes.CONFIGURACAO.RESERVA.SET_PAGINACAO_BUSCA_ORGAOS_RESERVA,\n                mutationTypes.CONFIGURACAO.RESERVA.RESETA_PAGE_ORGAOS_RESERVA\n            ]),\n            async validarDadosFormulario() {\n                return await this.$validator._base.validateAll()\n            },\n            async tratarEventoAdicionar() {\n                if (await this.validarDadosFormulario()) {\n                    await this.salvarIntervalo({reservaId: this.reservaId, intervalos: this.reservas})\n                    await this.fecharModal()\n                }\n            },\n            async buscarReserva() {\n                this.dadosDaReserva = await this.buscarReservaPorId(this.reservaId)\n                this.quantidadeRestante = this.dadosDaReserva.quantidadeRestante\n            },\n            async buscar() {\n                this.setFiltroBuscaOrgaosReserva(this.getFiltrosInterno())\n                await this.buscarTodosOrgaosReserva()\n            },\n            async buscarTodosOrgaosReserva() {\n                const resultado = await this.buscarTodosOrgaosPaginado()\n                if (resultado) {\n                    this.orgaos = resultado.items\n                    this.verificarOrgaoSelecionado()\n                    this.paginas = resultado.totalPages\n                    this.totalItens = resultado.totalElements\n                }\n            },\n            tratarEventoPaginar(paginacao) {\n                this.setPaginacaoBuscaOrgaosReserva(paginacao)\n                this.buscar()\n            },\n            resetaPage() {\n                this.resetaPageOrgaosReserva()\n            },\n            async fecharModal() {\n                this.$emit('recarregarDadosReserva')\n                await this.$router.push({name: 'ReservaEdicao', params: {id: this.$route.params.id}})\n            },\n            getFiltros() {\n                return _.cloneDeep(this.$store.state.reserva.todosOrgaos.filtros)\n            },\n            getFiltrosInterno() {\n                return _.cloneDeep(this.filtrosInterno)\n            },\n            async tratarEventoRemoverFiltro(propriedade) {\n                if (this.filtrosInterno[propriedade]) {\n                    this.filtrosInterno[propriedade].value = this.filtrosInterno[propriedade].default\n                }\n                await this.buscar()\n            },\n            getPaginacao() {\n                return _.cloneDeep(this.$store.state.reserva.todosOrgaos.paginacao)\n            },\n            async tratarEventoBuscaSimples(valor) {\n                this.resetaPageOrgaosReserva()\n                this.filtrosInterno.conteudo.value = valor\n                await this.buscar()\n            },\n            adicionarOrgao(reserva) {\n                this.reservas.push(reserva)\n                this.verificarOrgaoSelecionado()\n            },\n            removerOrgao(reserva) {\n                this.reservas.filter((resv, index) => {\n                    const orgaoId = resv.orgaoId || resv.id\n                    if (orgaoId === reserva.orgaoId) {\n                        this.reservas.splice(index, 1)\n                    }\n                })\n                for (let orgao of this.orgaos) {\n                    if (orgao.id === reserva.orgaoId) {\n                        orgao.isSelected = false\n                        orgao.quantidadeReservada = ''\n                        orgao.numeroInicio = ''\n                        orgao.numeroFim = ''\n                        break\n                    }\n                }\n                this.removerIntervalo(reserva)\n            },\n            removerIntervalo(reserva) {\n                this.intervalo.items.forEach((intervalo, index) => {\n                    if (intervalo.orgaoId === reserva.orgaoId) {\n                        this.intervalo.items.splice(index, 1)\n                    }\n                })\n            },\n            removerIntervalos() {\n                for (let orgao of this.orgaos) {\n                    this.intervalo.items = this.intervalo\n                        .items\n                        .filter(intervalo => intervalo.orgaoId !== orgao.id)\n                }\n            },\n            preencherReserva(intervalo, reserva) {\n                this.removerIntervalosMesmoOrgao(reserva)\n                this.reservas = this.reservas.filter(resv => {\n                    if (resv.orgaoId === reserva.orgaoId) {\n                        this.intervalo.items.push({\n                            orgaoId: reserva.orgaoId,\n                            quantidadeReservada: reserva.quantidadeReservada,\n                            numeroFim: intervalo.numeroFim\n                        })\n                        resv.quantidadeReservada = reserva.quantidadeReservada\n                        resv.numeroInicio = intervalo.numeroInicio\n                        resv.numeroFim = intervalo.numeroFim\n                    }\n                    return true\n                })\n            },\n            atualizarOrgao(resultado, reserva) {\n                this.orgaos = this.orgaos.filter(orgao => {\n                    if (orgao.id === reserva.orgaoId) {\n                        orgao.quantidadeReservada = reserva.quantidadeReservada\n                        orgao.numeroInicio = resultado.numeroInicio\n                        orgao.numeroFim = resultado.numeroFim\n                    }\n                    return true\n                })\n            },\n            async buscarProximoIntervalo(reserva) {\n                this.atualizarOrgao({numeroInicio: '', numeroFim: ''}, reserva)\n                this.reservas = this.reservas.filter(resv => {\n                    if (resv.orgaoId === reserva.orgaoId) {\n                        resv.quantidadeReservada = reserva.quantidadeReservada\n                        resv.numeroInicio = ''\n                        resv.numeroFim = ''\n                    }\n                    return true\n                })\n\n                reserva.items = this.intervalo.items\n                const intervalo = await this.buscarIntervalo(reserva)\n                if (intervalo) {\n                    this.preencherReserva(intervalo, reserva)\n                    this.atualizarOrgao(intervalo, reserva)\n                    this.calcularQuantidadeRestante()\n                }\n            },\n            calcularQuantidadeOrgaosSelecionados() {\n                this.quantidadeSelecionados = this.reservas.length\n                if (this.selecionarTodos) {\n                    this.selecionarTodas()\n                    this.selecionarTodos = false\n                }\n                if (this.desselecionarTodos) {\n                    this.desselecionarTodas()\n                    this.desselecionarTodos = false\n                }\n            },\n            removerIntervalosMesmoOrgao(reserva) {\n                this.intervalo.items = this.intervalo.items.filter(item => item.orgaoId !== reserva.orgaoId)\n            },\n            async obterColunasTabela() {\n                return this.criarColunas(\n                    4,\n                    ['Descrição', 'Preenchimento', 'Quantidade', 'Intervalo'],\n                    ['descricao', 'preenchimento', 'quantidadeReservada', 'intervalo'],\n                    [],\n                    [],\n                    [],\n                    'gray--text')\n            },\n            verificarOrgaoSelecionado() {\n                this.orgaos.forEach(orgao => {\n                    let selecionado = false\n                    for (let reserva of this.reservas) {\n                        if (reserva.orgaoId === orgao.id) {\n                            orgao.isSelected = true\n                            orgao.quantidadeReservada = reserva.quantidadeReservada\n                            orgao.numeroInicio = reserva.numeroInicio\n                            orgao.numeroFim = reserva.numeroFim\n                            selecionado = true\n                            break\n                        }\n                    }\n                    if(!selecionado) {\n                        orgao.quantidadeReservada = ''\n                        orgao.numeroInicio = ''\n                        orgao.numeroFim = ''\n                        orgao.isSelected = false\n                    }\n                })\n            },\n            tratarSelecaoReserva(props) {\n                if (props.value) {\n                    this.desselecionarTodos = true\n                }\n                this.selecionarTodos = !props.value\n            },\n            selecionarTodas() {\n                for (let orgao of this.orgaos) {\n                    const isSelected = !!orgao.isSelected\n                    if (!isSelected) {\n                        orgao.isSelected = true\n                        orgao.numeroInicio = ''\n                        orgao.numeroFim = ''\n                    }\n                    this.verificarSeOrgaoReservado(orgao)\n                }\n            },\n            desselecionarTodas() {\n                this.desselecionarTodos = false\n                for (let orgao of this.orgaos) {\n                    orgao.isSelected = false\n                    orgao.numeroInicio = ''\n                    orgao.numeroFim = ''\n                    orgao.quantidadeReservada = ''\n                    orgao.preenchimento = 'AUTOMATICO'\n                }\n                this.removerIntervalos()\n            },\n            calcularQuantidadeRestante() {\n                let quantidadeReservada = 0\n                for(let reserva of this.reservas) {\n                    if(reserva.numeroFim && reserva.numeroInicio) {\n                        quantidadeReservada += (reserva.numeroFim - reserva.numeroInicio) + 1\n                    }\n                }\n                this.dadosDaReserva.quantidadeRestante = this.quantidadeRestante - quantidadeReservada\n            },\n            verificarSeOrgaoReservado(orgao) {\n                for(let reserva of this.reservas) {\n                    const orgaoId = reserva.orgaoId || reserva.id\n                    if(orgaoId === orgao.id) {\n                        reserva.isSelected = true\n                        reserva.orgaoId = orgao.id\n                        reserva.preenchimento = 'AUTOMATICO'\n                        if(!reserva.numeroInicio) {\n                            reserva.numeroInicio = ''\n                        }\n                        if(!reserva.numeroFim) {\n                            reserva.numeroFim = ''\n                        }\n                        if(!reserva.quantidadeReservada) {\n                            reserva.quantidadeReservada = ''\n                        }\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"stylus\">\n    .orgao-reserva\n\n        .v-select__selection\n            font-size 13px\n            color #777\n\n        .v-text-field\n            margin-top 0\n            padding-top 12px\n\n    .sub-header\n        .v-subheader\n            display table-header-group\n\n    .search-listagem-orgaos .input-search\n        background-color #fff !important\n        width 30vw !important\n\n        span\n            max-width 350px\n\n        .v-chip__content\n            width 100%\n\n            span\n                white-space nowrap\n                overflow hidden\n                text-overflow ellipsis\n\n    @media (max-width 1250px)\n        .search-listagem-orgaos .input-search\n            span\n                max-width 230px\n\n    @media (max-width 720px)\n        .search-listagem-orgaos .input-search\n            background-color #fff !important\n            width 50vw !important\n\n            span\n                max-width 210px\n\n    .search-listagem-orgaos\n        background-color white !important\n\n    >>>\n    .pr-tabela-listagem-orgaos-reserva\n        .v-input__slot\n            margin-bottom 0 !important\n\n        th\n            font-size 13px !important\n            font-weight bold\n            color #666666 !important\n\n        tr:hover\n            background transparent !important\n\n        tr.v-data-table__selected\n            background white !important\n\n        tr.v-data-table__selected td .v-icon\n            color grey !important\n\n</style>\n"]}]}