{"remainingRequest":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/camposEditaveis/campo-de-imagem-editavel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/src/views/components/camposEditaveis/campo-de-imagem-editavel.vue","mtime":1615581620293},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/matheus/Documentos/patrimonio-mobiliario/patrimonio-mobiliario-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'campo-de-imagem-editavel',\n    props: {\n        value: {\n            required: true\n        },\n        name:{\n            type: String,\n            required: true\n        },\n        stylus: {\n            type: String\n        },\n        label: {\n            type: String,\n            default: ''\n        },\n        labelBtnSave: {\n            type: String,\n            default: 'Salvar'\n        },\n        labelBtnCancel: {\n            type: String,\n            default: 'Cancelar'\n        },\n        labelBtnEdit: {\n            type: String,\n            default: 'Editar'\n        },\n        validate: {\n            type: String,\n            default: 'required'\n        },\n        placeholder: {\n            type: String\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        uri:{\n            required:true\n        }\n    },\n    $_veeValidate: {\n        validator: 'new'\n    },\n    data: () => ({\n        model: undefined,\n        editing: false,\n        errorObrigatoriedadeAnexo: 0,\n        errorTamanhoExcedido: 0,\n    }),\n    watch: {\n        value(val) {\n            this.model = val\n        }\n    },\n    methods: {\n        startEdit() {\n            this.model = null\n            this.editing = true\n            this.$emit('setaEditando', this.name)\n        },\n        async submitEdit() {\n            if (this.model) {\n                const anexo = this.model\n                if (this.extensaoArquivoValida(anexo) === -1) {\n                    this.mostrarNotificacaoErro('Extensão do arquivo inválida. Envie arquivos nos seguintes formatos .jpeg .jpg .png')\n                    this.model = null\n                } else {\n                    if (this.validarTamanhoMaximo(this.model.size)) {\n                        this.errorTamanhoExcedido = 1\n                        this.model = await null\n                        setTimeout(() => {\n                            this.errorTamanhoExcedido = 0\n                            this.errorObrigatoriedadeAnexo = 1\n                            this.$validator._base.validateAll()\n                        }, 3000)\n                    } else {\n                        this.editing = false\n                        this.$emit('retiraEditando', this.name)\n                        this.$emit('input', anexo)\n                    }\n\n                }\n            } else {\n                this.mostrarNotificacaoErro('Sem imagem em anexo para salvar')\n            }\n        },\n        removerImagem(){\n            if(this.validate !== 'required') {\n                this.$emit('input', null)\n            }\n        },\n        validarTamanhoMaximo(tamanhoAnexo) {\n            if (tamanhoAnexo >= 15116247) {\n                return true\n            }\n            return false\n        },\n        extensaoArquivoValida(nomeArquivo) {\n            const extensaoAceitas = ['.jpg', '.JPG', '.png', '.PNG', '.jpeg', '.JPEG']\n            const extensao = nomeArquivo.name.substr(nomeArquivo.name.lastIndexOf('.'), nomeArquivo.name.length)\n            return extensaoAceitas.indexOf(extensao)\n        },\n        cancelEdit() {\n            this.editing = false\n            this.$emit('retiraEditando', this.name)\n        },\n    },\n    computed: {\n        nomeAnexo() {\n            return typeof this.value === 'string' ? this.value.split('/')[1] : ''\n        }\n    }\n}\n",{"version":3,"sources":["campo-de-imagem-editavel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"campo-de-imagem-editavel.vue","sourceRoot":"src/views/components/camposEditaveis","sourcesContent":["<template>\n    <div class=\"az-text az-text-edit az-text-view-edit-text-area alinhaMentoBox\">\n        <div v-if=\"!editing\">\n            <label>{{ label }}</label>\n                <v-hover v-slot=\"{ hover }\" class=\"image-container\">\n                    <v-card max-width=\"50\" tile elevation=\"0\">\n                        <v-img\n                            v-if=\"value\"\n                            :src=\"'data:image/png;base64,' + value\"\n                            max-width=\"50\"\n                            max-height=\"50\"\n                            aspect-ratio=\"1\"\n                            class=\"img-campo\"/>\n                        <v-img\n                            v-else\n                            max-width=\"50\"\n                            max-height=\"50\"\n                            aspect-ratio=\"1\"\n                            class=\"img-campo\"/>\n                        <v-overlay :value=\"hover\" absolute v-if=\"validate !== 'required' && value\">\n                            <v-tooltip top v-if=\"!disabled\">\n                                <template v-slot:activator=\"{ on }\">\n                                    <v-btn x-small v-on=\"on\" class=\"start-edit-btn\" icon @click=\"removerImagem\">\n                                        <v-icon small>fas fa-times</v-icon>\n                                    </v-btn>\n                                </template>\n                                Remover\n                            </v-tooltip>\n                        </v-overlay>\n                    </v-card>\n                </v-hover>\n                <v-tooltip top v-if=\"!disabled\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn x-small v-on=\"on\" class=\"start-edit-btn\" icon @click=\"startEdit\">\n                            <v-icon class=\"mt-2\" x-small>fas fa-edit</v-icon>\n                        </v-btn>\n                    </template>\n                    {{labelBtnEdit}}\n                </v-tooltip>\n                <v-tooltip top v-if=\"value\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn x-small v-on=\"on\" icon slot=\"activator\" class=\"ml-3\" :href=\"criarLinkDownload(uri)\" target=\"_blank\">\n                            <v-icon x-small color=\"primary\" class=\"start-edit-btn btn-download\">fas fa-download</v-icon>\n                        </v-btn>\n                    </template>\n                    Download\n                </v-tooltip>\n        </div>\n\n        <div>\n            <v-file-input\n                v-if=\"editing\"\n                v-model=\"model\"\n                class=\"file-input-imagem-component\"\n                :name=\"name\"\n                file\n                dense\n                outlined\n                append-icon=\"fa-file-upload\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n                auto-grow\n                prepend-icon\n                :class=\"stylus\"\n                :error-messages=\"errorTamanhoExcedido ==1 ? 'Tamanho permitido: 15MB' : errors.collect(name)\"\n                :v-validate=\"validate\"\n                :placeholder=\"placeholder\"\n                :clearable=\"false\"\n                @keyupEsc=\"cancelEdit\"\n                @click:append=\"cancelEdit\">\n                <template v-slot:append>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn v-on=\"on\" icon @click=\"submitEdit\">\n                                <v-icon class=\"primary--text\" small>fas fa-check</v-icon>\n                            </v-btn>\n                        </template>\n                        {{labelBtnSave}}\n                    </v-tooltip>\n                    <v-tooltip top>\n                        <template v-slot:activator=\"{ on }\">\n                            <v-btn v-on=\"on\" icon @click=\"cancelEdit\">\n                                <v-icon small>fas fa-times</v-icon>\n                            </v-btn>\n                        </template>\n                        {{labelBtnCancel}}\n                    </v-tooltip>\n                </template>\n            </v-file-input>\n            <p v-if=\"editing && !this.model && errorTamanhoExcedido!==1\" class=\"tamanhoPermitidoImagemClass\">Tamanho\n                permitido: 15MB</p>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'campo-de-imagem-editavel',\n        props: {\n            value: {\n                required: true\n            },\n            name:{\n                type: String,\n                required: true\n            },\n            stylus: {\n                type: String\n            },\n            label: {\n                type: String,\n                default: ''\n            },\n            labelBtnSave: {\n                type: String,\n                default: 'Salvar'\n            },\n            labelBtnCancel: {\n                type: String,\n                default: 'Cancelar'\n            },\n            labelBtnEdit: {\n                type: String,\n                default: 'Editar'\n            },\n            validate: {\n                type: String,\n                default: 'required'\n            },\n            placeholder: {\n                type: String\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            uri:{\n                required:true\n            }\n        },\n        $_veeValidate: {\n            validator: 'new'\n        },\n        data: () => ({\n            model: undefined,\n            editing: false,\n            errorObrigatoriedadeAnexo: 0,\n            errorTamanhoExcedido: 0,\n        }),\n        watch: {\n            value(val) {\n                this.model = val\n            }\n        },\n        methods: {\n            startEdit() {\n                this.model = null\n                this.editing = true\n                this.$emit('setaEditando', this.name)\n            },\n            async submitEdit() {\n                if (this.model) {\n                    const anexo = this.model\n                    if (this.extensaoArquivoValida(anexo) === -1) {\n                        this.mostrarNotificacaoErro('Extensão do arquivo inválida. Envie arquivos nos seguintes formatos .jpeg .jpg .png')\n                        this.model = null\n                    } else {\n                        if (this.validarTamanhoMaximo(this.model.size)) {\n                            this.errorTamanhoExcedido = 1\n                            this.model = await null\n                            setTimeout(() => {\n                                this.errorTamanhoExcedido = 0\n                                this.errorObrigatoriedadeAnexo = 1\n                                this.$validator._base.validateAll()\n                            }, 3000)\n                        } else {\n                            this.editing = false\n                            this.$emit('retiraEditando', this.name)\n                            this.$emit('input', anexo)\n                        }\n\n                    }\n                } else {\n                    this.mostrarNotificacaoErro('Sem imagem em anexo para salvar')\n                }\n            },\n            removerImagem(){\n                if(this.validate !== 'required') {\n                    this.$emit('input', null)\n                }\n            },\n            validarTamanhoMaximo(tamanhoAnexo) {\n                if (tamanhoAnexo >= 15116247) {\n                    return true\n                }\n                return false\n            },\n            extensaoArquivoValida(nomeArquivo) {\n                const extensaoAceitas = ['.jpg', '.JPG', '.png', '.PNG', '.jpeg', '.JPEG']\n                const extensao = nomeArquivo.name.substr(nomeArquivo.name.lastIndexOf('.'), nomeArquivo.name.length)\n                return extensaoAceitas.indexOf(extensao)\n            },\n            cancelEdit() {\n                this.editing = false\n                this.$emit('retiraEditando', this.name)\n            },\n        },\n        computed: {\n            nomeAnexo() {\n                return typeof this.value === 'string' ? this.value.split('/')[1] : ''\n            }\n        }\n    }\n</script>\n\n<style lang=\"stylus\" scoped>\n\n    .btn-download\n        opacity 1\n\n    alinhaMentoBox\n        margin-bottom: 20px\n\n    .formatoTexto\n        color: #6b6b6b\n\n    .file-input-imagem-component\n        font-size 13px\n        height 65px\n        width 85%\n\n    .truncate\n        width: 130px\n        white-space: nowrap\n        overflow: hidden\n        text-overflow: ellipsis\n\n    .img-campo\n        border 1px solid #777\n\n    .imagem-content\n        display flex\n        flex-direction row\n\n    .imagem-buttons\n        display flex\n        flex-direction column\n        margin-left 5px\n\n    .tamanhoPermitidoImagemClass\n        color #a5a5a5\n        margin-top -10px\n        margin-bottom 5px\n        font-size 12px\n\n    @media (max-width: 1100px)\n        .truncate\n            width 125px\n\n    @media (max-width: 1211px)\n        .tamanhoPermitidoImagemClass\n            margin-top 0px\n\n        .image-container\n            margin-bottom 10px\n</style>\n"]}]}